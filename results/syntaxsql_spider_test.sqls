select count(*) from club
select count(*) from club
select Name from club order by Name asc 
select Name from club order by Name asc 
select Sponsor,Captain from club
select Captain,Sponsor from club
select T2.Name from club as T1 join player as T2 on T1.Club_ID = T2.Club_ID where T1.Manufacturer != 'Nike'
select Name from club where Manufacturer != 'Nike'
select Name from player order by Wins_count desc 
select Name from player order by Wins_count asc 
select Name from player order by Earnings desc limit 1
select Name from player order by Earnings desc limit 1
select Country from player where Earnings > '1200000'
select Country from player group by Country having count(*) > '1200000'
select Country from player group by Country having count(*) > '2'
select Country,Name from player order by Wins_count desc limit 1
select T1.Name,T2.Name from club as T1 join player as T2 on T1.Club_ID = T2.Club_ID
select T1.Name,T2.Name from club as T1 join player as T2 on T1.Club_ID = T2.Club_ID
select T1.Name from club as T1 join player as T2 on T1.Club_ID = T2.Club_ID where T2.Events_number > '2'
SELECT A FROM B
select T2.Name from club as T1 join player as T2 on T1.Club_ID = T2.Club_ID where T1.Manager = 'Sam Allardyce'
SELECT A FROM B
select T1.Name from club as T1 join player as T2 on T1.Club_ID = T2.Club_ID order by T2.Earnings desc 
select T1.Name from club as T1 join player as T2 on T1.Club_ID = T2.Club_ID order by T2.Earnings desc 
select count(*),Manufacturer from club group by Manufacturer
select count(*),Manufacturer from club group by Manufacturer
select Manufacturer from club group by Manufacturer order by count(*) desc limit 1
select Manufacturer from club group by Manufacturer order by count(*) desc limit 1
select Manufacturer from club group by Manufacturer having count(*) > '1'
select Manufacturer from club group by Sponsor having count(*) > '1'
select Country from player group by Country having count(*) > '1'
select Country from player group by Country having count(*) > '1'
select T1.Name from club as T1 join player as T2 on T1.Club_ID = T2.Club_ID where T2.Club_ID not in (select Club_ID from player)
select Name from club where Club_ID not in (select Club_ID from player)
select Country from player where Earnings > '1400000'
select Country from player where Earnings > '1400000' intersect select Country from player where Earnings < '1400000'
select count(Country) from player
select count(Country) from player
select Earnings from player where Country = 'Australia' and Country > 'Zimbabwe'
select Earnings from player where Country = 'Australia' and Country > 'Zimbabwe'
select customer_first_name,customer_last_name,customer_id from Customers group by customer_id having count(*) > '3' intersect select T4.customer_first_name,T4.customer_id,T4.customer_last_name from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id join Orders as T3 on T2.order_id = T3.order_id join Customers as T4 on T3.customer_id = T4.customer_id where T1.product_price > '3'
select customer_first_name,customer_last_name,customer_id from Customers group by customer_id order by count(*) asc  having count(*) > '3'
select count(*),shipment_id,order_id from Shipments group by order_id
select count(*),T3.order_status_code from Customer_Payment_Methods as T1 join Customers as T2 on T1.customer_id = T2.customer_id join Orders as T3 on T2.customer_id = T3.customer_id where T1.payment_method_code = 'Direct Debit'
select date_order_placed from Orders where date_order_placed > '2017-09-17 16:13:07'
select invoice_date from Invoices group by invoice_date having count(*) > '1'
SELECT A FROM B
select T1.customer_last_name,T1.customer_first_name,T1.login_name from Customers as T1 join Orders as T2 on T1.customer_id = T2.customer_id where T2.order_status_code not in (select customer_id from Customers)
SELECT A FROM B
select product_size,product_name,product_price from Products group by product_id having count(*) < '2'
select T1.invoice_date,T2.shipment_date from Invoices as T1 join Shipments as T2 on T1.invoice_number = T2.invoice_number group by T1.invoice_date having count(*) >= '2'
select T2.shipment_date,T1.invoice_date from Invoices as T1 join Shipments as T2 on T1.invoice_number = T2.invoice_number group by T2.shipment_id having count(*) >= '2'
select T1.product_name,T1.product_description,T1.product_id from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id group by T1.product_id order by count(T2.order_item_id) desc limit 1
select T1.product_id,T3.shipment_id,T1.product_name from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id join Shipment_Items as T3 on T2.order_item_id = T3.order_item_id group by T1.product_id order by count(*) desc limit 1
select T3.order_id,T5.order_id from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id join Orders as T3 on T2.order_id = T3.order_id join Shipment_Items as T4 on T2.order_item_id = T4.order_item_id join Shipments as T5 on T4.shipment_id = T5.shipment_id order by T1.product_price asc limit 1
select product_price,product_size from Products order by product_price asc limit 1
select payment_method_code from Customer_Payment_Methods group by payment_method_code order by count(*) desc limit 1
select payment_method_code from Customer_Payment_Methods group by payment_method_code order by count(*) desc limit 1
select count(*),gender_code from Customers group by gender_code
select count(*),T1.product_color from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id join Orders as T3 on T2.order_id = T3.order_id join Customers as T4 on T3.customer_id = T4.customer_id group by T4.gender_code
select count(*),gender_code from Customers group by country
select count(*),date_order_placed from Orders group by date_order_placed
select T4.customer_first_name,T4.customer_last_name,T1.product_name from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id join Orders as T3 on T2.order_id = T3.order_id join Customers as T4 on T3.customer_id = T4.customer_id
select customer_first_name,customer_last_name,login_name from Customers
select T2.shipment_date,T1.invoice_date from Invoices as T1 join Shipments as T2 on T1.invoice_number = T2.invoice_number
select T1.invoice_date,T2.shipment_date,T1.invoice_number from Invoices as T1 join Shipments as T2 on T1.invoice_number = T2.invoice_number
SELECT A FROM B
select T1.product_id,T1.product_name,T1.product_size from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id join Shipment_Items as T3 on T2.order_item_id = T3.order_item_id join Shipments as T4 on T3.shipment_id = T4.shipment_id where T4.shipment_date = (select max(product_price) from Products)
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select product_name,product_color from Products
SELECT A FROM B
SELECT A FROM B
select order_status_code from Orders where order_id not in (select order_status_code from Orders)
SELECT A FROM B
select T4.shipment_date,T5.invoice_date,T1.product_price from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id join Shipment_Items as T3 on T2.order_item_id = T3.order_item_id join Shipments as T4 on T3.shipment_id = T4.shipment_id join Invoices as T5 on T4.invoice_number = T5.invoice_number join Orders as T6 on T2.order_id = T6.order_id order by T6.date_order_placed asc 
select T1.invoice_date,T2.shipment_date,T3.order_id from Invoices as T1 join Shipments as T2 on T1.invoice_number = T2.invoice_number join Orders as T3 on T2.order_id = T3.order_id group by T3.order_id
select count(*) from Products
select count(*) from Products
select count(*) from Products
select order_item_status_code from Order_Items
select count(payment_method_code) from Customer_Payment_Methods
select count(payment_method_code) from Customer_Payment_Methods
select login_password,login_name from Customers where email_address like '%%'
select login_password,login_name from Customers where customer_last_name like '%%'
select product_size from Products where product_name like '%Dell%'
select product_size from Products where product_name like '%Dell%'
select product_size,avg(product_price) from Products where product_price > (select avg(product_price) from Products)
select product_size,product_price from Products where product_price > (select min(product_price) from Products)
select count(*) from Products where product_id not in (select parent_product_id from Products)
select count(*) from Products where product_id not in (select parent_product_id from Products)
select count(*) from Customer_Payment_Methods where payment_method_code not in (select payment_method_code from Customer_Payment_Methods)
SELECT A FROM B
select T3.order_status_code,T1.invoice_status_code from Invoices as T1 join Shipments as T2 on T1.invoice_number = T2.invoice_number join Orders as T3 on T2.order_id = T3.order_id
select T1.invoice_status_code,T3.order_status_code from Invoices as T1 join Shipments as T2 on T1.invoice_number = T2.invoice_number join Orders as T3 on T2.order_id = T3.order_id
select town_city,email_address,county from Customers where login_name = 'desmond.steuber'
SELECT A FROM B
select T1.product_name,T4.customer_first_name from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id join Orders as T3 on T2.order_id = T3.order_id join Customers as T4 on T3.customer_id = T4.customer_id order by T1.product_price asc 
SELECT A FROM B
select count(*) from Products
SELECT A FROM B
select avg(product_price) from Products
select product_size from Products where product_price = (select avg(product_price) from Products)
SELECT A FROM B
select avg(product_price) from Products order by product_price asc limit 1
select town_city,county,email_address from Customers group by customer_id order by count(*) asc limit 1
SELECT A FROM B
select T3.date_order_placed from Invoices as T1 join Shipments as T2 on T1.invoice_number = T2.invoice_number join Orders as T3 on T2.order_id = T3.order_id group by T1.invoice_date having count(*) >= '2'
select invoice_date from Invoices group by invoice_date having count(*) >= '2'
select order_status_code from Orders group by order_status_code order by count(*) desc limit 1
select order_status_code from Orders group by order_status_code order by count(*) asc limit 1
select T3.order_item_id,T2.order_item_id,T1.product_description from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id join Shipment_Items as T3 on T2.order_item_id = T3.order_item_id group by T2.order_item_id having count(*) > '3'
select T1.order_item_id,T2.shipment_id,T1.order_id from Order_Items as T1 join Shipment_Items as T2 on T1.order_item_id = T2.order_item_id group by T2.shipment_id having count(*) > '3'
select T1.invoice_date,T2.shipment_date from Invoices as T1 join Shipments as T2 on T1.invoice_number = T2.invoice_number group by T2.shipment_id having count(*) >= '2'
select T2.shipment_id,T1.invoice_date from Invoices as T1 join Shipments as T2 on T1.invoice_number = T2.invoice_number group by T2.shipment_id having count(*) >= '2'
select shipment_date,shipment_tracking_number from Shipments
select T2.shipment_tracking_number,T1.invoice_number from Invoices as T1 join Shipments as T2 on T1.invoice_number = T2.invoice_number
select product_color,product_size,product_description from Products order by product_price asc limit 1
SELECT A FROM B
select Name from director where Age > (select avg(Age) from director)
select Name from director order by Age desc limit 1
select count(*) from channel where Internet like '%bbc%'
select count(*) from channel
select Title from program order by Start_Year desc,Title asc 
select T1.Name from director as T1 join director_admin as T2 on T1.Director_ID = T2.Director_ID group by T2.Director_ID order by count(*) desc limit 1
select T1.Age,T2.Is_first_director from director as T1 join director_admin as T2 on T1.Director_ID = T2.Director_ID group by T2.Is_first_director order by count(*) desc limit 1
select Title from program order by Start_Year desc limit 1
select T1.Name,T1.Internet from channel as T1 join director_admin as T2 on T1.Channel_ID = T2.Channel_ID group by T2.Channel_ID having count(*) > '1'
select count(*),Digital_terrestrial_channel from channel group by Digital_terrestrial_channel
select count(*) from program where Program_ID not in (select Channel_ID from director_admin)
select T1.Name from director as T1 join program as T2 on T1.Director_ID = T2.Director_ID where T2.Title = 'Dracula'
select T1.Internet,T3.Name from channel as T1 join director_admin as T2 on T1.Channel_ID = T2.Channel_ID join director as T3 on T2.Director_ID = T3.Director_ID group by T2.Channel_ID order by count(*) desc limit 1
select Name from director where Age between '30' and '60'
select T1.Name from channel as T1 join director_admin as T2 on T1.Channel_ID = T2.Channel_ID join director as T3 on T2.Director_ID = T3.Director_ID where T3.Age > '60' intersect select T1.Name from channel as T1 join director_admin as T2 on T1.Channel_ID = T2.Channel_ID join director as T3 on T2.Director_ID = T3.Director_ID where T3.Age < '60'
SELECT A FROM B
select count(*) from city_channel
select T3.Transmitter from city_channel as T1 join city_channel_radio as T2 on T1.ID = T2.City_channel_ID join radio as T3 on T2.Radio_ID = T3.Radio_ID order by T1.Station_name asc 
select tv_show_name,Original_Airdate from tv_show
select Station_name from city_channel where Affiliation != 'ABC'
SELECT A FROM B
select Transmitter from radio where Radio_ID = (select max(Owned_Since) from city_channel)
select Lyric_FM_MHz from radio
select count(*),Affiliation from city_channel group by Affiliation
select Affiliation from city_channel group by Affiliation order by count(*) desc limit 1
select Affiliation from city_channel group by Affiliation having count(*) > '3'
select Station_name,City from city_channel order by Station_name asc 
select T1.City,T3.Radio_MHz from city_channel as T1 join city_channel_radio as T2 on T1.ID = T2.City_channel_ID join radio as T3 on T2.Radio_ID = T3.Radio_ID
select T3.Transmitter,T1.Station_name from city_channel as T1 join city_channel_radio as T2 on T1.ID = T2.City_channel_ID join radio as T3 on T2.Radio_ID = T3.Radio_ID join city_channel_tv_show as T4 on T1.ID = T4.City_channel_ID join tv_show as T5 on T4.tv_show_ID = T5.tv_show_ID order by T5.Original_Airdate desc 
select count(*),Lyric_FM_MHz from radio group by Transmitter
select Transmitter from radio where Radio_ID not in (select City_channel_ID from city_channel_tv_show)
select Model from vehicle where Power > '6000'
select Model from vehicle order by Power desc limit 1
select Name from driver where Citizenship = 'United States'
select Name from driver where Citizenship = 'United States'
SELECT A FROM B
select Vehicle_ID,Driver_ID from vehicle_driver group by Driver_ID order by count(*) desc limit 1
SELECT A FROM B
SELECT A FROM B
select Model from vehicle order by Power desc limit 1
select Vehicle_ID from vehicle group by Vehicle_ID order by count(*) asc limit 1
select Power,Top_Speed from vehicle where Build_Year = '1996'
select Power,Top_Speed from vehicle where Build_Year = '1996'
select Build_Year,Model,Builder from vehicle
select Model,Builder,Build_Year from vehicle
select count(*) from vehicle where Power = '2012'
select count(Power) from vehicle where Model = 'HXD1.1'
select count(*) from driver where Racing_Series = 'NASCAR'
SELECT A FROM B
select avg(Top_Speed) from vehicle
select avg(Top_Speed) from vehicle
select T3.Name from vehicle as T1 join vehicle_driver as T2 on T1.Vehicle_ID = T2.Vehicle_ID join driver as T3 on T2.Driver_ID = T3.Driver_ID where T1.Power > '5000'
select T3.Name from vehicle as T1 join vehicle_driver as T2 on T1.Vehicle_ID = T2.Vehicle_ID join driver as T3 on T2.Driver_ID = T3.Driver_ID where T1.Power > '5000'
select Model from vehicle where Top_Speed > '150'
select Model from vehicle where Top_Speed >= '150'
select T1.Model,T1.Build_Year from vehicle as T1 join vehicle_driver as T2 on T1.Vehicle_ID = T2.Vehicle_ID join driver as T3 on T2.Driver_ID = T3.Driver_ID where T3.Name = 'Jeff Gordon' order by T1.Power desc limit 1
select T1.Model,T1.Build_Year from vehicle as T1 join vehicle_driver as T2 on T1.Vehicle_ID = T2.Vehicle_ID join driver as T3 on T2.Driver_ID = T3.Driver_ID where T3.Name like '%%'
select Model from vehicle except select Model from vehicle
select Model from vehicle where Vehicle_ID not in (select Vehicle_ID from vehicle_driver)
select Model,Vehicle_ID from vehicle where Power = '2'
select Model,Vehicle_ID from vehicle group by Vehicle_ID having count(*) >= '2'
select T1.Model from vehicle as T1 join vehicle_driver as T2 on T1.Vehicle_ID = T2.Vehicle_ID join driver as T3 on T2.Driver_ID = T3.Driver_ID where T3.Citizenship = 'United States' union select T1.Model,T1.Vehicle_ID from vehicle as T1 join vehicle_driver as T2 on T1.Vehicle_ID = T2.Vehicle_ID join driver as T3 on T2.Driver_ID = T3.Driver_ID where T3.Citizenship = 'United States'
select Model,Vehicle_ID from vehicle where Power > '2' group by Vehicle_ID having count(*) >= '2'
select count(*) from vehicle order by Top_Speed desc limit 1
select count(*) from vehicle where Top_Speed = (select max(Top_Speed) from vehicle)
select Name from driver order by Name asc 
SELECT A FROM B
select count(*),Racing_Series from driver group by Racing_Series
select count(*),Racing_Series from driver group by Racing_Series
SELECT A FROM B
SELECT A FROM B
select count(*) from driver where Driver_ID not in (select Vehicle_ID from vehicle_driver)
select count(*) from driver where Driver_ID not in (select Vehicle_ID from vehicle_driver)
select count(*) from Students
select count(*) from Students
select Subject_Code from Exams order by Exam_Date asc 
select Exam_Date from Exams order by Exam_Date asc 
select Exam_Name,Exam_Date from Exams where Subject_Code != 'Database'
select Exam_Name,Exam_Date from Exams where Subject_Code != 'Database'
select Exam_Date from Exams where Subject_Code = 'Database'
select Exam_Date from Exams where Subject_Code like '%data%'
select count(*),Type_of_Question_Code from Questions
select count(*),Type_of_Question_Code from Questions group by Type_of_Question_Code
select T5.Assessment from Student_Answers as T1 join Questions_in_Exams as T2 on T1.Exam_ID = T2.Exam_ID join Questions as T3 on T2.Question_ID = T3.Question_ID join Valid_Answers as T4 on T3.Question_ID = T4.Question_ID join Student_Assessments as T5 on T4.Valid_Answer_ID = T5.Valid_Answer_ID where T1.Comments = 'Normal'
select T4.Comments from Valid_Answers as T1 join Questions as T2 on T1.Question_ID = T2.Question_ID join Questions_in_Exams as T3 on T2.Question_ID = T3.Question_ID join Student_Answers as T4 on T3.Exam_ID = T4.Exam_ID where T1.Valid_Answer_Text = 'ABC'
SELECT A FROM B
SELECT A FROM B
select T1.Student_ID from Students as T1 join Student_Answers as T2 on T1.Student_ID = T2.Student_ID join Questions_in_Exams as T3 on T2.Exam_ID = T3.Exam_ID join Exams as T4 on T3.Exam_ID = T4.Exam_ID order by T4.Exam_Date desc 
select T1.Student_Address from Students as T1 join Student_Answers as T2 on T1.Student_ID = T2.Student_ID join Questions_in_Exams as T3 on T2.Exam_ID = T3.Exam_ID join Exams as T4 on T3.Exam_ID = T4.Exam_ID group by T4.Exam_ID order by count(*) asc limit 1
select T1.First_Name,T4.Exam_Date from Students as T1 join Student_Answers as T2 on T1.Student_ID = T2.Student_ID join Questions_in_Exams as T3 on T2.Exam_ID = T3.Exam_ID join Exams as T4 on T3.Exam_ID = T4.Exam_ID
select T4.Exam_Date,T1.Cell_Mobile_Phone from Students as T1 join Student_Answers as T2 on T1.Student_ID = T2.Student_ID join Questions_in_Exams as T3 on T2.Exam_ID = T3.Exam_ID join Exams as T4 on T3.Exam_ID = T4.Exam_ID
select T1.Email_Adress,T1.Student_Address from Students as T1 join Student_Answers as T2 on T1.Student_ID = T2.Student_ID join Questions_in_Exams as T3 on T2.Exam_ID = T3.Exam_ID join Exams as T4 on T3.Exam_ID = T4.Exam_ID order by T4.Exam_Date desc 
select T1.Cell_Mobile_Phone,T1.Student_Address from Students as T1 join Student_Answers as T2 on T1.Student_ID = T2.Student_ID join Questions_in_Exams as T3 on T2.Exam_ID = T3.Exam_ID join Exams as T4 on T3.Exam_ID = T4.Exam_ID order by T4.Exam_Date desc 
select Assessment from Student_Assessments group by Assessment order by count(*) asc limit 1
select Assessment from Student_Assessments group by Assessment order by count(*) asc limit 1
select T1.First_Name from Students as T1 join Student_Answers as T2 on T1.Student_ID = T2.Student_ID group by T2.Exam_ID having count(*) >= '2'
select First_Name from Students group by Student_ID having count(*) >= '2'
select Valid_Answer_Text from Valid_Answers group by Valid_Answer_Text order by count(*) desc limit 1
select Valid_Answer_Text from Valid_Answers group by Valid_Answer_Text order by count(*) desc limit 1
select Last_Name from Students where Gender_MFU != 'M'
select Last_Name from Students where Gender_MFU != 'M'
select count(*),count(Gender_MFU) from Students group by Gender_MFU
select count(*),min(Gender_MFU) from Students group by Gender_MFU
select Last_Name from Students where Gender_MFU = 'F' and Gender_MFU > 'F'
select T1.Last_Name from Students as T1 join Student_Answers as T2 on T1.Student_ID = T2.Student_ID join Questions_in_Exams as T3 on T2.Exam_ID = T3.Exam_ID join Questions as T4 on T3.Question_ID = T4.Question_ID join Valid_Answers as T5 on T4.Question_ID = T5.Question_ID join Student_Assessments as T6 on T5.Valid_Answer_ID = T6.Valid_Answer_ID where T6.Assessment = 'Very Good' and T6.Assessment > 'Very Good'
select First_Name from Students where Student_ID not in (select Student_ID from Students)
select First_Name from Students where Student_ID not in (select Student_ID from Students)
select Exam_Date from Exams where Exam_Name = '2016 Spring AH' intersect select Exam_Date from Exams where Exam_Name = '2016 Spring AH'
select T3.Comments from Exams as T1 join Questions_in_Exams as T2 on T1.Exam_ID = T2.Exam_ID join Student_Answers as T3 on T2.Exam_ID = T3.Exam_ID where T1.Exam_Name = '2016 Spring AH' intersect select T3.Comments from Exams as T1 join Questions_in_Exams as T2 on T1.Exam_ID = T2.Exam_ID join Student_Answers as T3 on T2.Exam_ID = T3.Exam_ID where T1.Exam_Name = '2016 Spring AH'
select Question_Text from Questions group by Question_Text having count(*) >= '3'
select Type_of_Question_Code from Questions group by Type_of_Question_Code having count(*) >= '3'
select * from Students
select Email_Adress from Students
select count(*) from Products
select count(*) from Products
select address_details,address_id from Addresses
select address_details,address_id from Addresses
select count(*) from Products
select count(*) from Products
select product_type_code,product_id,product_name from Products
select T1.product_id,T4.customer_id,T1.product_type_code from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id join Customer_Orders as T3 on T2.order_id = T3.order_id join Customers as T4 on T3.customer_id = T4.customer_id
select product_price from Products where product_name = 'Monitor'
select product_price from Products where product_name = 'Monitor'
select avg(product_price),min(product_price),max(product_price) from Products
select avg(product_price),max(product_price),min(product_price) from Products
select avg(product_price) from Products where product_type_code = 'Clothes'
select avg(product_price) from Products where product_type_code = 'Clothes'
select count(*) from Products
select count(*) from Products where product_type_code = 'Hardware'
select product_name from Products where product_price > (select avg(product_price) from Products)
select product_name from Products where product_price > (select avg(product_price) from Products)
select product_name from Products where product_price > (select avg(product_price) from Products)
SELECT A FROM B
select product_name from Products where product_type_code = 'Clothes' group by product_id order by product_type_code desc limit 1
select product_name from Products order by product_price desc limit 1
select product_id,product_name from Products order by product_price asc limit 1
select T1.product_id,T2.product_id from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id order by T1.product_price asc limit 1
select product_name from Products order by product_price desc 
select product_name from Products order by product_price desc 
select product_type_code from Products order by product_price asc 
select product_name from Products order by product_price asc 
select count(*),product_type_code from Products group by product_type_code
select count(*),product_type_code from Products group by product_type_code
select product_type_code,avg(product_price) from Products group by product_type_code
select avg(product_price),product_type_code from Products group by product_type_code
select product_type_code from Products group by product_type_code having count(*) >= '2'
select product_type_code from Products group by product_type_code having count(*) >= '2'
select product_type_code from Products group by product_type_code order by count(*) desc limit 1
select product_type_code from Products group by product_type_code order by count(*) desc limit 1
select count(*) from Products
select count(*) from Products
select customer_name,customer_id from Customers
select customer_name,customer_id from Customers
select customer_email,customer_phone,customer_number from Customers
select customer_email,customer_phone,customer_address from Customers where customer_name = 'Jeromy'
select count(*),payment_method_code from Customers group by payment_method_code
select count(*),payment_method_code from Customers group by payment_method_code
select payment_method_code from Customers group by payment_method_code order by count(*) desc limit 1
select payment_method_code from Customers group by payment_method_code order by count(*) desc limit 1
SELECT A FROM B
select customer_name from Customers where payment_method_code = (select payment_method_code from Customers group by payment_method_code order by count(*) asc limit 1)
select customer_number,customer_phone from Customers where customer_name = 'Jeromy'
select payment_method_code,customer_email from Customers where customer_name = 'Jeromy'
select payment_method_code from Customers
select payment_method_code from Customers
select product_type_code,product_id from Products order by product_name asc 
select T1.product_id,T2.product_id from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id order by T1.product_name asc 
select product_type_code from Products group by product_type_code order by count(*) asc limit 1
SELECT A FROM B
select count(*) from Products
select count(*) from Products
SELECT A FROM B
SELECT A FROM B
select count(*),customer_name,customer_id from Customers group by customer_id
select count(*),T2.order_id,T1.order_id from Customer_Orders as T1 join Order_Items as T2 on T1.order_id = T2.order_id group by T1.order_id
select customer_phone,customer_name,customer_email from Customers group by customer_id order by count(*) desc limit 1
select customer_phone,customer_name,customer_email from Customers group by customer_id order by count(*) desc limit 1
select count(*),order_status_code from Customer_Orders group by order_status_code
select count(*),order_status_code from Customer_Orders group by order_status_code
select order_status_code from Customer_Orders group by order_status_code order by count(*) desc limit 1
select order_status_code from Customer_Orders group by order_status_code order by count(*) desc limit 1
select count(*) from Customers where customer_id not in (select customer_id from Customers)
select count(*) from Customers where customer_id not in (select order_id from Customer_Orders)
select product_name from Products except select product_name from Products
select product_name from Products except select product_name from Products
select count(*) from Products where product_name = 'Monitor'
select count(*) from Order_Items group by product_id
select count(*) from Products where product_name = 'Monitor'
select count(T4.customer_id) from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id join Customer_Orders as T3 on T2.order_id = T3.order_id join Customers as T4 on T3.customer_id = T4.customer_id where T1.product_name = 'Monitor'
select count(customer_id) from Customers
select count(customer_id) from Customers
select order_id from Customer_Orders except select customer_id from Customer_Orders
select customer_id from Customers except select customer_id from Customer_Orders
select T3.order_id,T3.order_date from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id join Customer_Orders as T3 on T2.order_id = T3.order_id where T1.product_price > '6'
SELECT A FROM B
select count(*) from building
select count(*) from building
select Name from building order by Number_of_Stories asc 
select Name from building group by Building_ID order by count(*) asc 
select Address from building order by Completed_Year desc 
select Address,Name from building order by Completed_Year desc 
select max(Number_of_Stories) from building where Completed_Year = '1980'
select Address from building where Number_of_Stories = '1980'
select avg(Population) from region
select avg(Population) from region
select Name from region order by Name asc 
select Name from region order by Name asc 
select Capital from region where Area > '10000'
select Capital from region where Area > '10000'
select Capital from region order by Population desc limit 1
select Name from region order by Population desc limit 1
select Name from region order by Area desc limit 1
select Name from region order by Area desc limit 1
select T1.Name,T2.Name from building as T1 join region as T2 on T1.Region_ID = T2.Region_ID
select T1.Name,T2.Name from building as T1 join region as T2 on T1.Region_ID = T2.Region_ID
select T2.Name from building as T1 join region as T2 on T1.Region_ID = T2.Region_ID group by T1.Region_ID having count(*) > '1'
select Name from region group by Region_ID having count(*) > '1'
select Capital from region group by Capital order by count(*) desc limit 1
select Capital from region group by Capital order by count(*) desc limit 1
select T1.Address,T2.Capital from building as T1 join region as T2 on T1.Region_ID = T2.Region_ID
select Address,Name from building
select count(*) from region where Name = 'Abruzzo'
select count(*),T1.Number_of_Stories from building as T1 join region as T2 on T1.Region_ID = T2.Region_ID where T2.Name = 'Abruzzo'
select count(*),Completed_Year from building group by Completed_Year
select count(*),Completed_Year from building group by Completed_Year
select Completed_Year from building group by Completed_Year order by count(*) desc limit 1
select Completed_Year from building group by Completed_Year order by count(*) desc limit 1
select Name from region where Region_ID not in (select Region_ID from building)
select T2.Name from building as T1 join region as T2 on T1.Region_ID = T2.Region_ID where T1.Address not in (select Region_ID from building)
select Completed_Year from building where Number_of_Stories > '20' intersect select Completed_Year from building where Number_of_Stories < '20'
select Completed_Year from building where Number_of_Stories < '20' intersect select Completed_Year from building where Number_of_Stories > '20'
select Address from building
select Address from building
select Completed_Year from building order by Number_of_Stories desc 
select count(*),Number_of_Stories from building order by Completed_Year desc 
select Channel_Details from Channels order by Channel_Details asc 
select Channel_Details from Channels order by Channel_Details asc 
select count(*) from Services
select count(*) from Services
select Analytical_Layer_Type_Code from Analytical_Layer group by Analytical_Layer_Type_Code order by count(*) desc limit 1
select Analytical_Layer_Type_Code from Analytical_Layer group by Analytical_Layer_Type_Code order by count(*) desc limit 1
select T1.Service_Details from Services as T1 join Customer_Interactions as T2 on T1.Service_ID = T2.Service_ID join Customers as T3 on T2.Customer_ID = T3.Customer_ID where T3.Customer_Details = 'Hardy Kutch'
select T1.Service_Details from Services as T1 join Customer_Interactions as T2 on T1.Service_ID = T2.Service_ID join Customers as T3 on T2.Customer_ID = T3.Customer_ID where T3.Customer_Details = 'Hardy Kutch'
select T1.Service_Details from Services as T1 join Customers_and_Services as T2 on T1.Service_ID = T2.Service_ID group by T2.Service_ID having count(*) > '3'
select T1.Service_Details from Services as T1 join Customer_Interactions as T2 on T1.Service_ID = T2.Service_ID join Customers as T3 on T2.Customer_ID = T3.Customer_ID join Customers_and_Services as T4 on T1.Service_ID = T4.Service_ID group by T4.Customer_ID having count(T3.Customer_ID) > '3'
select Customer_Details from Customers group by Customer_Details order by count(*) desc limit 1
select count(*),Customer_Details from Customers order by Customer_Details desc limit 1
select Customer_Details from Customers group by Customer_Details order by count(*) desc limit 1
select Customer_Details from Customers group by Customer_Details order by count(*) desc limit 1
select Customer_Details from Customers except select Customer_Details from Customers
select Customer_Details from Customers except select Customer_Details from Customers
SELECT A FROM B
select Customer_Details from Customers group by Customer_Details order by count(*) asc limit 1
select count(T1.Service_Details),count(T3.Customer_Details) from Services as T1 join Customer_Interactions as T2 on T1.Service_ID = T2.Service_ID join Customers as T3 on T2.Customer_ID = T3.Customer_ID
select count(*),sum(Customer_Details) from Customers
select Customer_Details from Customers where Customer_Details like '%Kutch%'
select Customer_Details from Customers where Customer_Details like '%Kutch%'
select T1.Service_Details from Services as T1 join Customers_and_Services as T2 on T1.Service_ID = T2.Service_ID join Analytical_Layer as T3 on T2.Customers_and_Services_ID = T3.Customers_and_Services_ID where T3.Pattern_Recognition = 'Normal' union select T1.Service_Details from Services as T1 join Customer_Interactions as T2 on T1.Service_ID = T2.Service_ID join Customers as T3 on T2.Customer_ID = T3.Customer_ID join Customers_and_Services as T4 on T1.Service_ID = T4.Service_ID join Analytical_Layer as T5 on T4.Customers_and_Services_ID = T5.Customers_and_Services_ID where T5.Pattern_Recognition = 'Normal' and T3.Customer_Details = 'Hardy Kutch'
select T1.Service_Details from Services as T1 join Customer_Interactions as T2 on T1.Service_ID = T2.Service_ID join Customers_and_Services as T3 on T1.Service_ID = T3.Service_ID join Analytical_Layer as T4 on T3.Customers_and_Services_ID = T4.Customers_and_Services_ID where T4.Pattern_Recognition = 'Normal' and T2.Status_Code = 'Close'
select T1.Service_Details from Services as T1 join Customers_and_Services as T2 on T1.Service_ID = T2.Service_ID join Analytical_Layer as T3 on T2.Customers_and_Services_ID = T3.Customers_and_Services_ID where T3.Pattern_Recognition = 'Normal' intersect select T1.Service_Details from Services as T1 join Customer_Interactions as T2 on T1.Service_ID = T2.Service_ID join Customers as T3 on T2.Customer_ID = T3.Customer_ID join Customers_and_Services as T4 on T1.Service_ID = T4.Service_ID join Analytical_Layer as T5 on T4.Customers_and_Services_ID = T5.Customers_and_Services_ID where T5.Pattern_Recognition = 'Normal' and T3.Customer_Details = 'Hardy Kutch'
select T1.Service_Details from Services as T1 join Customers_and_Services as T2 on T1.Service_ID = T2.Service_ID join Analytical_Layer as T3 on T2.Customers_and_Services_ID = T3.Customers_and_Services_ID where T3.Pattern_Recognition = 'Normal' intersect select T1.Service_Details from Services as T1 join Customers_and_Services as T2 on T1.Service_ID = T2.Service_ID join Analytical_Layer as T3 on T2.Customers_and_Services_ID = T3.Customers_and_Services_ID where T3.Pattern_Recognition = 'Normal'
select T1.Service_Details from Services as T1 join Customer_Interactions as T2 on T1.Service_ID = T2.Service_ID join Channels as T3 on T2.Channel_ID = T3.Channel_ID where T3.Channel_ID = '15'
select T1.Service_Details from Services as T1 join Customer_Interactions as T2 on T1.Service_ID = T2.Service_ID join Channels as T3 on T2.Channel_ID = T3.Channel_ID where T3.Channel_Details = '15 ij'
select T1.Customer_Details,T1.Customer_ID from Customers as T1 join Customer_Interactions as T2 on T1.Customer_ID = T2.Customer_ID where T2.Status_Code = 'Stuck' intersect select T1.Customer_Details,T1.Customer_ID from Customers as T1 join Customer_Interactions as T2 on T1.Customer_ID = T2.Customer_ID where T2.Status_Code = 'Stuck'
select T1.Customer_Details,T2.Customers_and_Services_Details from Customers as T1 join Customers_and_Services as T2 on T1.Customer_ID = T2.Customer_ID join Customer_Interactions as T3 on T1.Customer_ID = T3.Customer_ID where T3.Status_Code = 'Stuck' intersect select T1.Customer_Details,T2.Customers_and_Services_Details from Customers as T1 join Customers_and_Services as T2 on T1.Customer_ID = T2.Customer_ID join Customer_Interactions as T3 on T1.Customer_ID = T3.Customer_ID where T3.Status_Code = 'Stuck'
select count(*) from Services
SELECT A FROM B
SELECT A FROM B
select T1.Customer_Details from Customers as T1 join Customer_Interactions as T2 on T1.Customer_ID = T2.Customer_ID join Integration_Platform as T3 on T2.Customer_Interaction_ID = T3.Customer_Interaction_ID where T3.Integration_Platform_Details = 'Fail'
select T2.Service_ID from Customers as T1 join Customers_and_Services as T2 on T1.Customer_ID = T2.Customer_ID where T1.Customer_Details not in (select Customer_ID from Customers_and_Services)
select Service_Details from Services except select Service_Details from Services
select Analytical_Layer_Type_Code,count(*) from Analytical_Layer group by Analytical_Layer_Type_Code
select count(*),Analytical_Layer_Type_Code from Analytical_Layer group by Analytical_Layer_Type_Code
select Service_Details from Services where Service_Details = 'driving license' union select T1.Service_Details from Services as T1 join Customers_and_Services as T2 on T1.Service_ID = T2.Service_ID where T1.Service_Details = 'driving license' and T2.Customers_and_Services_Details = 'Unsatisfied'
select T1.Customer_Details from Customers as T1 join Customers_and_Services as T2 on T1.Customer_ID = T2.Customer_ID where T1.Customer_Details != 'Amalia Johnston' and T2.Customers_and_Services_Details not in (Satisfied,Unsatisfied)
select count(*) from Customers
select count(*) from Customers
select name from Vehicles order by Model_year desc 
select name from Vehicles order by Model_year desc 
select Type_of_powertrain from Vehicles
select Type_of_powertrain from Vehicles
select Annual_fuel_cost,name,City_fuel_economy_rate from Vehicles where Model_year = '2014'
select Annual_fuel_cost,name,Combined_fuel_economy_rate from Vehicles where Model_year = '2014'
select Type_of_powertrain from Vehicles where Model_year = '2014'
select Type_of_powertrain from Vehicles where Model_year = '2014' intersect select Type_of_powertrain from Vehicles where Model_year = '2014'
select count(*),Type_of_powertrain from Vehicles group by Type_of_powertrain
select count(*),Type_of_powertrain from Vehicles group by Type_of_powertrain
select Type_of_powertrain from Vehicles group by Type_of_powertrain order by count(*) desc limit 1
select Type_of_powertrain from Vehicles group by Type_of_powertrain order by count(*) desc limit 1
select max(Annual_fuel_cost),avg(Annual_fuel_cost),min(Annual_fuel_cost) from Vehicles
select max(Annual_fuel_cost),avg(Annual_fuel_cost),min(Annual_fuel_cost) from Vehicles
SELECT A FROM B
SELECT A FROM B
select Annual_fuel_cost,City_fuel_economy_rate from Vehicles group by Type_of_powertrain having count(*) >= '2'
select *,Annual_fuel_cost from Vehicles group by City_fuel_economy_rate having count(*) >= '2'
select T3.membership_credit,T1.membership_credit,T1.age from Customers as T1 join Renting_history as T2 on T1.id = T2.customer_id join Discount as T3 on T2.discount_id = T3.id
select T1.name,T3.name,T3.membership_credit from Customers as T1 join Renting_history as T2 on T1.id = T2.customer_id join Discount as T3 on T2.discount_id = T3.id
select T1.age,T1.name from Customers as T1 join Renting_history as T2 on T1.id = T2.customer_id join Discount as T3 on T2.discount_id = T3.id order by T3.membership_credit asc limit 1
select age,name from Customers group by id order by count(*) desc limit 1
select avg(T1.age) from Customers as T1 join Renting_history as T2 on T1.id = T2.customer_id join Discount as T3 on T2.discount_id = T3.id where T3.membership_credit > (select avg(membership_credit) from Customers)
select avg(age) from Customers where membership_credit > (select avg(membership_credit) from Customers)
select * from Customers
select * from Customers
select sum(T2.total_hours),T1.name from Vehicles as T1 join Renting_history as T2 on T1.id = T2.vehicles_id group by T1.name
select T1.name,sum(T2.total_hours) from Vehicles as T1 join Renting_history as T2 on T1.id = T2.vehicles_id group by T1.name
select name from Vehicles where id not in (select vehicles_id from Renting_history)
select name from Vehicles
select T1.name from Customers as T1 join Renting_history as T2 on T1.id = T2.customer_id group by T2.customer_id having count(*) >= '2'
select T1.name from Customers as T1 join Renting_history as T2 on T1.id = T2.customer_id group by T2.customer_id having count(*) >= '2'
select Model_year,name from Vehicles group by name order by count(*) desc limit 1
select Model_year,name from Vehicles group by id order by count(*) desc limit 1
select T1.name from Vehicles as T1 join Renting_history as T2 on T1.id = T2.vehicles_id order by T2.total_hours desc 
select T1.name from Vehicles as T1 join Renting_history as T2 on T1.id = T2.vehicles_id order by T2.total_hours desc 
select T1.name from Discount as T1 join Renting_history as T2 on T1.id = T2.discount_id group by T2.discount_id order by count(*) desc limit 1
select name from Discount group by id order by count(*) desc limit 1
select T3.name,T1.name from Discount as T1 join Renting_history as T2 on T1.id = T2.discount_id join Vehicles as T3 on T2.vehicles_id = T3.id group by T2.vehicles_id having count(*) > '30'
select T3.name,T1.name from Discount as T1 join Renting_history as T2 on T1.id = T2.discount_id join Vehicles as T3 on T2.vehicles_id = T3.id group by T2.vehicles_id having count(*) > '30'
select Type_of_powertrain,avg(City_fuel_economy_rate) from Vehicles group by Type_of_powertrain
select avg(City_fuel_economy_rate) from Vehicles group by Type_of_powertrain
SELECT A FROM B
select avg(amount_of_loan) from Student_Loans
select T1.student_id,T2.student_id from Students as T1 join Transcripts as T2 on T1.student_id = T2.student_id group by T1.student_id having count(*) < '2'
select T1.student_id,T2.student_id from Students as T1 join Students_Addresses as T2 on T1.student_id = T2.student_id group by T1.student_id having count(*) > '2'
select T1.teacher_details from Teachers as T1 join Classes as T2 on T1.teacher_id = T2.teacher_id join Students as T3 on T2.student_id = T3.student_id join Achievements as T4 on T3.student_id = T4.student_id where T4.achievement_type_code = 'Athletic' except select teacher_details from Teachers
select T1.teacher_details from Teachers as T1 join Classes as T2 on T1.teacher_id = T2.teacher_id join Students as T3 on T2.student_id = T3.student_id join Achievements as T4 on T3.student_id = T4.student_id where T4.achievement_type_code like '%%'
SELECT A FROM B
select student_id from Students_Addresses except select student_id from Transcripts
select date_of_loan,amount_of_loan from Student_Loans group by date_of_loan having count(*) >= '2'
select T3.date_of_loan,T1.event_date from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id join Student_Loans as T3 on T2.student_id = T3.student_id group by T3.student_loan_id having count(*) >= '2'
select T1.teacher_id,T2.teacher_id from Teachers as T1 join Classes as T2 on T1.teacher_id = T2.teacher_id group by T1.teacher_id order by count(*) desc limit 1
select T1.teacher_id,T2.teacher_id from Teachers as T1 join Classes as T2 on T1.teacher_id = T2.teacher_id group by T1.teacher_id order by count(*) desc limit 1
select transcript_details from Transcripts
select achievement_type_description from Ref_Achievement_Type
select T5.address_type_description,T1.event_type_description from Ref_Event_Types as T1 join Student_Events as T2 on T1.event_type_code = T2.event_type_code join Students as T3 on T2.student_id = T3.student_id join Students_Addresses as T4 on T3.student_id = T4.student_id join Ref_Address_Types as T5 on T4.address_type_code = T5.address_type_code
select T5.address_type_description,T1.event_type_description from Ref_Event_Types as T1 join Student_Events as T2 on T1.event_type_code = T2.event_type_code join Students as T3 on T2.student_id = T3.student_id join Students_Addresses as T4 on T3.student_id = T4.student_id join Ref_Address_Types as T5 on T4.address_type_code = T5.address_type_code
select T4.address_details,T1.transcript_details from Transcripts as T1 join Students as T2 on T1.student_id = T2.student_id join Students_Addresses as T3 on T2.student_id = T3.student_id join Addresses as T4 on T3.address_id = T4.address_id
select T1.transcript_details,T4.address_details from Transcripts as T1 join Students as T2 on T1.student_id = T2.student_id join Students_Addresses as T3 on T2.student_id = T3.student_id join Addresses as T4 on T3.address_id = T4.address_id
select T3.transcript_details,T1.event_date from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id join Transcripts as T3 on T2.student_id = T3.student_id
select T3.transcript_details,T1.event_date from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id join Transcripts as T3 on T2.student_id = T3.student_id
SELECT A FROM B
select count(*),address_type_code from Ref_Address_Types group by address_type_code order by count(*) desc limit 1
select T1.bio_data,T2.student_id from Students as T1 join Students_Addresses as T2 on T1.student_id = T2.student_id join Detention as T3 on T1.student_id = T3.student_id where T3.datetime_detention_end = '2009-05-23 17:33:31.000' group by T1.student_id order by count(*) desc limit 1 having count(*) >= '3'
SELECT A FROM B
select T2.student_details from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id group by T1.event_id order by count(*) desc limit 1
SELECT A FROM B
select T1.event_date,T2.bio_data from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id
select T1.event_date,T3.date_from from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id join Students_Addresses as T3 on T2.student_id = T3.student_id
select count(*),T2.event_type_description,T1.event_type_code from Student_Events as T1 join Ref_Event_Types as T2 on T1.event_type_code = T2.event_type_code group by T1.event_id order by count(*) desc limit 1
select T1.event_type_code,T4.event_type_code,T3.address_type_code from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id join Students_Addresses as T3 on T2.student_id = T3.student_id join Ref_Event_Types as T4 on T1.event_type_code = T4.event_type_code group by T1.event_id order by count(*) desc limit 1
select T5.achievement_type_description,T1.event_type_description from Ref_Event_Types as T1 join Student_Events as T2 on T1.event_type_code = T2.event_type_code join Students as T3 on T2.student_id = T3.student_id join Achievements as T4 on T3.student_id = T4.student_id join Ref_Achievement_Type as T5 on T4.achievement_type_code = T5.achievement_type_code
select T5.achievement_type_description,T1.event_type_description from Ref_Event_Types as T1 join Student_Events as T2 on T1.event_type_code = T2.event_type_code join Students as T3 on T2.student_id = T3.student_id join Achievements as T4 on T3.student_id = T4.student_id join Ref_Achievement_Type as T5 on T4.achievement_type_code = T5.achievement_type_code
select count(*) from Students where student_id not in (select student_id from Students_Addresses)
select count(*) from Teachers where teacher_id not in (select teacher_id from Teachers)
select T3.transcript_details,T1.event_date from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id join Transcripts as T3 on T2.student_id = T3.student_id
select T3.transcript_details,T1.event_date from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id join Transcripts as T3 on T2.student_id = T3.student_id
select T2.achievement_type_code,T2.date_achievement,T1.achievement_type_code from Ref_Achievement_Type as T1 join Achievements as T2 on T1.achievement_type_code = T2.achievement_type_code
select T3.achievement_type_code,T1.event_date,T4.achievement_type_code from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id join Achievements as T3 on T2.student_id = T3.student_id join Ref_Achievement_Type as T4 on T3.achievement_type_code = T4.achievement_type_code
select datetime_detention_start,datetime_detention_end from Detention
select datetime_detention_start,datetime_detention_end from Detention
select * from Addresses where address_details like '%Suite%'
select T2.student_id from Students as T1 join Students_Addresses as T2 on T1.student_id = T2.student_id where T1.bio_data like '%%'
select *,student_details from Students
SELECT A FROM B
select count(*) from Teachers group by teacher_id order by count(*) desc limit 1
select T1.teacher_id,T2.teacher_id from Teachers as T1 join Classes as T2 on T1.teacher_id = T2.teacher_id group by T1.teacher_id order by count(*) desc limit 1
select count(*) from Students group by student_id order by count(*) desc limit 1
select count(*),T1.student_id from Student_Loans as T1 join Students as T2 on T1.student_id = T2.student_id join Achievements as T3 on T2.student_id = T3.student_id group by T3.student_id order by count(*) desc limit 1
select T1.event_id,T1.student_id,T3.student_id from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id join Classes as T3 on T2.student_id = T3.student_id
select T3.student_id,T1.student_id from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id join Achievements as T3 on T2.student_id = T3.student_id group by T3.student_id having count(*) = '2'
select T1.detention_type_code,T4.address_type_code from Detention as T1 join Students as T2 on T1.student_id = T2.student_id join Students_Addresses as T3 on T2.student_id = T3.student_id join Ref_Address_Types as T4 on T3.address_type_code = T4.address_type_code group by T1.detention_type_code order by count(*) asc limit 1
select T1.detention_type_code,T2.detention_type_description from Detention as T1 join Ref_Detention_Type as T2 on T1.detention_type_code = T2.detention_type_code group by T1.detention_type_code order by count(*) asc limit 1
select T1.bio_data,T2.transcript_id from Students as T1 join Transcripts as T2 on T1.student_id = T2.student_id join Student_Loans as T3 on T1.student_id = T3.student_id where T3.date_of_loan > (select avg(amount_of_loan) from Student_Loans)
select T2.transcript_details,T1.bio_data from Students as T1 join Transcripts as T2 on T1.student_id = T2.student_id join Student_Loans as T3 on T1.student_id = T3.student_id where T3.date_of_loan > (select avg(amount_of_loan) from Student_Loans)
select T1.event_date from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id join Student_Loans as T3 on T2.student_id = T3.student_id order by T3.date_of_loan asc limit 1
select date_to from Students_Addresses order by date_to desc limit 1
select T1.student_id from Students as T1 join Achievements as T2 on T1.student_id = T2.student_id order by T2.date_achievement asc limit 1
select T1.transcript_details from Transcripts as T1 join Students as T2 on T1.student_id = T2.student_id join Student_Loans as T3 on T2.student_id = T3.student_id order by T3.date_of_loan asc limit 1
SELECT A FROM B
select T1.date_of_transcript from Transcripts as T1 join Students as T2 on T1.student_id = T2.student_id join Student_Loans as T3 on T2.student_id = T3.student_id order by T3.amount_of_loan desc limit 1
select T4.teacher_details from Transcripts as T1 join Students as T2 on T1.student_id = T2.student_id join Classes as T3 on T2.student_id = T3.student_id join Teachers as T4 on T3.teacher_id = T4.teacher_id where T1.date_of_transcript = '1973-08-09 00:00:00.000'
select * from Student_Events where event_date = '2008-08-15 22:16:17.000'
select student_loan_id,student_id from Student_Loans group by student_id
select student_loan_id,student_id from Student_Loans group by student_id
select count(*),T2.student_id,T3.student_id from Students as T1 join Student_Loans as T2 on T1.student_id = T2.student_id join Students_Addresses as T3 on T1.student_id = T3.student_id group by T1.student_id
select T4.student_id,T3.student_id,T2.student_id from Students as T1 join Student_Events as T2 on T1.student_id = T2.student_id join Student_Loans as T3 on T1.student_id = T3.student_id join Students_Addresses as T4 on T1.student_id = T4.student_id group by T1.student_id
select count(*) from Students
select count(*) from Students
select T4.achievement_type_code,T3.detention_type_code from Students_Addresses as T1 join Students as T2 on T1.student_id = T2.student_id join Detention as T3 on T2.student_id = T3.student_id join Achievements as T4 on T2.student_id = T4.student_id group by T1.address_type_code order by count(*) desc limit 1
select T4.address_type_description,T1.detention_type_code,T4.address_type_code from Detention as T1 join Students as T2 on T1.student_id = T2.student_id join Students_Addresses as T3 on T2.student_id = T3.student_id join Ref_Address_Types as T4 on T3.address_type_code = T4.address_type_code group by T1.detention_type_code order by count(*) desc limit 1
SELECT A FROM B
select student_id from Students_Addresses except select student_id from Students
select T3.datetime_detention_start from Student_Events as T1 join Students as T2 on T1.student_id = T2.student_id join Detention as T3 on T2.student_id = T3.student_id where T1.event_id = '2'
select datetime_detention_start from Detention
select datetime_detention_start from Detention
select datetime_detention_start from Detention
select Author from Book
select Name from Author
select T1.Address,T5.Name from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient join Books_Order as T3 on T2.IdOrder = T3.IdOrder join Book as T4 on T3.ISBN = T4.ISBN join Author as T5 on T4.Author = T5.idAuthor
select T1.Address,T5.Name from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient join Books_Order as T3 on T2.IdOrder = T3.IdOrder join Book as T4 on T3.ISBN = T4.ISBN join Author as T5 on T4.Author = T5.idAuthor
select SalePrice,Title,PurchasePrice from Book
select SalePrice,Title,PurchasePrice from Book
select count(*) from Client
select count(*) from Client
select count(*) from Client
select count(*) from Client
select count(*) from Client
select count(*) from Client
select Name,Address from Client order by Name asc 
select T5.Name,T1.Name from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient join Books_Order as T3 on T2.IdOrder = T3.IdOrder join Book as T4 on T3.ISBN = T4.ISBN join Author as T5 on T4.Author = T5.idAuthor order by T1.Name asc 
select T2.ISBN,T1.Author from Book as T1 join Author_Book as T2 on T1.ISBN = T2.ISBN
select T1.Author,T2.ISBN from Book as T1 join Author_Book as T2 on T1.ISBN = T2.ISBN
select T1.Name,T5.idAuthor from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient join Books_Order as T3 on T2.IdOrder = T3.IdOrder join Book as T4 on T3.ISBN = T4.ISBN join Author as T5 on T4.Author = T5.idAuthor
select T1.IdClient,T4.idAuthor from Orders as T1 join Books_Order as T2 on T1.IdOrder = T2.IdOrder join Book as T3 on T2.ISBN = T3.ISBN join Author as T4 on T3.Author = T4.idAuthor
select T1.Name,T2.Author from Author as T1 join Book as T2 on T1.idAuthor = T2.Author group by T1.Name
select T1.Name,T2.Author from Author as T1 join Book as T2 on T1.idAuthor = T2.Author group by T1.Name
select count(*),ISBN from Books_Order group by ISBN
select count(*),ISBN from Books_Order group by ISBN
select sum(amount),ISBN from Books_Order group by ISBN
select sum(amount),* from Books_Order group by amount
select Title,count(*) from Book group by Title order by count(*) desc limit 1
select Title from Book group by Title order by count(*) desc limit 1
select PurchasePrice,SalePrice from Book group by SalePrice order by count(*) desc limit 1
select T1.Title,T1.PurchasePrice from Book as T1 join Books_Order as T2 on T1.ISBN = T2.ISBN group by T1.Title order by sum(T2.amount) desc limit 1
select Title from Book
SELECT A FROM B
SELECT A FROM B
select Name from Client
select count(*),T1.Name from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient group by T2.IdClient
select count(*),Name from Author group by Name
select T1.Name from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient group by T2.IdClient order by count(*) desc limit 1
select T1.Name from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient group by T2.IdClient order by count(*) desc limit 1
select sum(T3.amount),T1.Name from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient join Books_Order as T3 on T2.IdOrder = T3.IdOrder group by T1.Name
select sum(T3.amount),T1.Name from Author as T1 join Book as T2 on T1.idAuthor = T2.Author join Books_Order as T3 on T2.ISBN = T3.ISBN group by T1.Name
select T1.Name from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient join Books_Order as T3 on T2.IdOrder = T3.IdOrder group by T1.Name order by sum(T3.amount) desc limit 1
select T1.Name from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient join Books_Order as T3 on T2.IdOrder = T3.IdOrder group by T1.Name order by sum(T3.amount) desc limit 1
select ISBN from Author_Book except select Title from Book
select Title from Book except select Title from Book
select T1.Name from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient where T2.IdClient not in (select Name from Client) except select Name from Client
select Name from Client except select Name from Client
select min(SalePrice),max(SalePrice) from Book
select min(SalePrice),max(SalePrice) from Book
select avg(SalePrice),avg(PurchasePrice) from Book
select avg(SalePrice),avg(PurchasePrice) from Book
select max(PurchasePrice) from Book
select PurchasePrice from Book order by PurchasePrice desc limit 1
select Title from Book where SalePrice > (select avg(SalePrice) from Book)
select Title from Book
select Title from Book order by SalePrice asc limit 1
select Title from Book where SalePrice < (select min(PurchasePrice) from Book)
select Title from Book order by PurchasePrice desc limit 1
select Title from Book where SalePrice <= (select max(SalePrice) from Book)
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select Title from Book group by Title order by count(*) asc limit 1
SELECT A FROM B
select Title from Book where SalePrice < (select avg(SalePrice) from Book) and PurchasePrice > (select avg(PurchasePrice) from Book)
select T2.Author from Book as T1 join Author_Book as T2 on T1.ISBN = T2.ISBN where T1.Title = 'Pride and Prejudice'
SELECT A FROM B
select Title from Book where Author like '%%'
SELECT A FROM B
select count(*) from Author where Name = 'Jane Austin'
select count(*) from Book where Title = 'Pride and Prejudice' and Title > 'Pride and Prejudice'
select T2.IdClient from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient where T1.Name = 'James Smith' intersect select T2.IdClient from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient where T1.Name = 'James Smith'
SELECT A FROM B
select T3.ISBN from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient join Books_Order as T3 on T2.IdOrder = T3.IdOrder where T1.Name = 'Peter Doe' intersect select T3.ISBN from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient join Books_Order as T3 on T2.IdOrder = T3.IdOrder where T1.Name = 'Peter Doe'
SELECT A FROM B
select T4.Title from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient join Books_Order as T3 on T2.IdOrder = T3.IdOrder join Book as T4 on T3.ISBN = T4.ISBN where T1.Name = 'Peter Doe' except select T4.Title from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient join Books_Order as T3 on T2.IdOrder = T3.IdOrder join Book as T4 on T3.ISBN = T4.ISBN where T1.Name = 'Peter Doe'
SELECT A FROM B
select T1.Name from Client as T1 join Orders as T2 on T1.IdClient = T2.IdClient join Books_Order as T3 on T2.IdOrder = T3.IdOrder join Book as T4 on T3.ISBN = T4.ISBN join Author as T5 on T4.Author = T5.idAuthor where T5.Name = 'Jane Austin' intersect select Name from Client where Name = 'James Smith'
SELECT A FROM B
select count(*) from book
select Title from book order by Title asc 
select Title from book order by Pages desc 
select Release,Type from book
select min(Pages),max(Pages),min(Chapters),max(Chapters) from book group by Audio
select Title from book where Title != 'A Game of Thrones'
select avg(Rating) from review
select T2.Rating,T1.Pages from book as T1 join review as T2 on T1.Book_ID = T2.Book_ID
select max(T2.Rating) from book as T1 join review as T2 on T1.Book_ID = T2.Book_ID order by T1.Chapters desc limit 1
select T2.Rank from book as T1 join review as T2 on T1.Book_ID = T2.Book_ID order by T1.Pages asc limit 1
select T1.Title from book as T1 join review as T2 on T1.Book_ID = T2.Book_ID order by T2.Rank desc limit 1
select avg(Chapters) from book where Type = 'Novel'
select Type,count(*) from book group by Type
select Type from book group by Type order by count(*) desc limit 1
select Type from book group by Type having count(*) >= '3'
select T1.Title from book as T1 join review as T2 on T1.Book_ID = T2.Book_ID order by T2.Rating asc 
select Audio,Title from book order by Chapters desc 
select count(*) from book where Audio not in (select Book_ID from review)
select Type from book where Chapters < '75' intersect select Type from book where Chapters > '75'
select count(Type) from book
select T1.Type,T1.Title from book as T1 join review as T2 on T1.Book_ID = T2.Book_ID where T2.Rating > (select max(Rating) from review)
select count(*) from customer
select count(*) from customer
select Name from customer order by Level_of_Membership asc 
select Name,count(*) from customer order by Level_of_Membership asc 
select Card_Credit,Nationality from customer
select Card_Credit,Nationality from customer
select Name from customer where Nationality = 'England' and Nationality > 'England'
select Name from customer where Nationality = 'England' and Nationality >= 'England'
select avg(Card_Credit) from customer where Level_of_Membership > '1'
select avg(Card_Credit) from customer where Level_of_Membership > '1'
select Card_Credit from customer order by Level_of_Membership desc limit 1
select Name,Level_of_Membership from customer where Level_of_Membership > (select max(Level_of_Membership) from customer)
select count(*),Nationality from customer group by Nationality
select count(*),Nationality from customer group by Nationality
select Nationality from customer group by Nationality order by count(*) desc limit 1
select Nationality from customer group by Nationality order by count(*) desc limit 1
select Nationality from customer where Card_Credit > '75' intersect select Nationality from customer where Card_Credit < '75' and Level_of_Membership > '75'
select Nationality from customer where Card_Credit < '75' intersect select Nationality from customer where Card_Credit > '75'
select T1.Name,T2.Dish_Name from customer as T1 join customer_order as T2 on T1.Customer_ID = T2.Customer_ID
select T1.Name,T2.Dish_Name from customer as T1 join customer_order as T2 on T1.Customer_ID = T2.Customer_ID
select T1.Name,T2.Dish_Name from customer as T1 join customer_order as T2 on T1.Customer_ID = T2.Customer_ID order by T2.Quantity desc 
select T1.Name,T2.Dish_Name from customer as T1 join customer_order as T2 on T1.Customer_ID = T2.Customer_ID order by T2.Quantity desc 
select T1.Name,T2.Dish_Name from customer as T1 join customer_order as T2 on T1.Customer_ID = T2.Customer_ID group by T2.Customer_ID order by count(T1.Name) asc 
select T1.Name,sum(T2.Quantity) from customer as T1 join customer_order as T2 on T1.Customer_ID = T2.Customer_ID group by T2.Customer_ID
select sum(Quantity) from customer_order group by Quantity
select T1.Name from customer as T1 join customer_order as T2 on T1.Customer_ID = T2.Customer_ID group by T1.Name having sum(T2.Quantity) > '1'
select Manager from branch
select Manager from branch
select Name from customer where Name not in (select Customer_ID from customer_order)
select Name from customer where Name not in (select Customer_ID from customer_order)
select count(*) from member
select Name from member order by Age asc 
select Nationality,Name from member
select Name from member where Nationality != 'England'
select Name from member where Age = '20' and Age > '20'
select Name from member order by Age desc limit 1
select count(*),Nationality from member group by Nationality
select Nationality from member group by Nationality order by count(*) desc limit 1
select Nationality from member group by Nationality having count(*) >= '2'
select T3.Club_Name,T1.Name from member as T1 join club_leader as T2 on T1.Member_ID = T2.Member_ID join club as T3 on T2.Club_ID = T3.Club_ID
select Club_Name from club where Overall_Ranking > '100'
select T1.Club_Name from club as T1 join club_leader as T2 on T1.Club_ID = T2.Club_ID where T2.Year_Join < '2018'
select Team_Leader from club where Club_Name = 'Houston'
SELECT A FROM B
select Nationality from member where Age > '22' intersect select Nationality from member where Age < '22'
select avg(Age) from member
select T3.Club_Name from member as T1 join club_leader as T2 on T1.Member_ID = T2.Member_ID join club as T3 on T2.Club_ID = T3.Club_ID where T1.Name like '%%'
select * from Document_Subsets
select Collection_Name from Collections
select Collection_Description from Collections where Collection_Name = 'Best'
select * from Collections where Collection_Name = 'Best'
select * from Document_Subsets order by Document_Subset_Name asc 
select Document_Subset_Name from Document_Subsets
select T1.Description from Document_Objects as T1 join Documents_in_Collections as T2 on T1.Document_Object_ID = T2.Document_Object_ID join Collections as T3 on T2.Collection_ID = T3.Collection_ID where T3.Collection_Name = 'Best'
select * from Collections where Collection_Name = 'Best'
select Document_Object_ID from Documents_in_Collections
select Document_Object_ID from Document_Objects
SELECT A FROM B
select T2.Document_Object_ID from Document_Objects as T1 join Documents_in_Collections as T2 on T1.Document_Object_ID = T2.Document_Object_ID where T1.Owner = 'Marlin'
select T3.Owner from Document_Subsets as T1 join Document_Subset_Members as T2 on T1.Document_Subset_ID = T2.Document_Subset_ID join Document_Objects as T3 on T2.Related_Document_Object_ID = T3.Document_Object_ID where T1.Document_Subset_Name = 'Best for 2000'
select Owner from Document_Objects where Owner = 'Braeden'
select Owner from Document_Objects where Owner = 'Marlin'
select Owner from Document_Objects where Owner = 'Marlin'
select Collection_Description from Collections
select Collection_Description from Collections
SELECT A FROM B
SELECT A FROM B
select Parent_Document_Object_ID from Document_Objects except select Document_Object_ID from Documents_in_Collections
select Parent_Document_Object_ID from Document_Objects except select Document_Object_ID from Documents_in_Collections
select count(*),T1.Document_Subset_ID from Document_Subsets as T1 join Document_Subset_Members as T2 on T1.Document_Subset_ID = T2.Document_Subset_ID join Document_Objects as T3 on T2.Related_Document_Object_ID = T3.Document_Object_ID group by T3.Document_Object_ID
select T1.Collection_ID,T2.Collection_ID from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID join Document_Objects as T3 on T2.Document_Object_ID = T3.Document_Object_ID join Document_Subset_Members as T4 on T3.Document_Object_ID = T4.Related_Document_Object_ID group by T4.Document_Subset_ID
select Collection_Name from Collections
select Collection_Name from Collections
select Collection_Description from Collections where Collection_Name = 'Best'
select Collection_Description from Collections where Collection_Name = 'Best'
select Collection_Name from Collections where Collection_Name = 'Nice'
select Collection_Name from Collections where Collection_Name = 'Nice'
SELECT A FROM B
SELECT A FROM B
select Document_Object_ID from Document_Objects group by Document_Object_ID having count(*) > '1'
select Document_Object_ID from Documents_in_Collections group by Document_Object_ID having count(*) > '1'
select count(*) from Collections where Collection_Name = 'Best'
select count(*) from Collections where Collection_Name = 'Best'
SELECT A FROM B
SELECT A FROM B
select count(*),T1.Collection_ID,T2.Collection_ID from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID group by T1.Collection_ID
select count(*),T2.Collection_ID,T1.Collection_ID from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID group by T1.Collection_ID
select count(*),Document_Object_ID from Document_Objects group by Document_Object_ID order by count(*) desc limit 1
select count(*),Document_Object_ID from Document_Objects group by Document_Object_ID
select T1.Collection_ID,count(T2.Collection_ID) from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID group by T1.Collection_ID order by count(*) asc limit 1
select T4.Document_Object_ID from Document_Subsets as T1 join Document_Subset_Members as T2 on T1.Document_Subset_ID = T2.Document_Subset_ID join Document_Objects as T3 on T2.Related_Document_Object_ID = T3.Document_Object_ID join Documents_in_Collections as T4 on T3.Document_Object_ID = T4.Document_Object_ID group by T1.Document_Subset_ID order by count(*) asc limit 1
select Collection_ID,Document_Object_ID from Documents_in_Collections group by Collection_ID having count(*) >= '4'
select T2.Collection_ID,T3.Related_Collection_ID,T1.Collection_ID from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID join Collection_Subset_Members as T3 on T1.Collection_ID = T3.Related_Collection_ID group by T1.Collection_ID having count(*) >= '4'
select Owner from Document_Objects where Owner = 'Braeden'
select Owner from Document_Objects where Owner = 'Braeden'
select Owner from Document_Objects
select T1.Document_Subset_Name from Document_Subsets as T1 join Document_Subset_Members as T2 on T1.Document_Subset_ID = T2.Document_Subset_ID join Document_Objects as T3 on T2.Related_Document_Object_ID = T3.Document_Object_ID where T3.Owner = 'Braeden'
select count(*),count(T5.Collection_ID),T1.Document_Subset_ID from Document_Subsets as T1 join Document_Subset_Members as T2 on T1.Document_Subset_ID = T2.Document_Subset_ID join Document_Objects as T3 on T2.Related_Document_Object_ID = T3.Document_Object_ID join Documents_in_Collections as T4 on T3.Document_Object_ID = T4.Document_Object_ID join Collections as T5 on T4.Collection_ID = T5.Collection_ID group by T5.Collection_ID
select T1.Document_Subset_ID,T2.Document_Subset_ID,T1.Document_Subset_Name from Document_Subsets as T1 join Document_Subset_Members as T2 on T1.Document_Subset_ID = T2.Document_Subset_ID group by T2.Document_Subset_ID
select T1.Document_Subset_ID,count(T2.Document_Subset_ID),T5.Collection_ID from Document_Subsets as T1 join Document_Subset_Members as T2 on T1.Document_Subset_ID = T2.Document_Subset_ID join Document_Objects as T3 on T2.Related_Document_Object_ID = T3.Document_Object_ID join Documents_in_Collections as T4 on T3.Document_Object_ID = T4.Document_Object_ID join Collections as T5 on T4.Collection_ID = T5.Collection_ID group by T2.Document_Subset_ID order by count(*) desc limit 1
select count(*),T1.Document_Subset_ID,T2.Document_Subset_ID from Document_Subsets as T1 join Document_Subset_Members as T2 on T1.Document_Subset_ID = T2.Document_Subset_ID group by T2.Document_Subset_ID order by count(*) desc limit 1
select T4.Document_Object_ID from Document_Subsets as T1 join Document_Subset_Members as T2 on T1.Document_Subset_ID = T2.Document_Subset_ID join Document_Objects as T3 on T2.Related_Document_Object_ID = T3.Document_Object_ID join Documents_in_Collections as T4 on T3.Document_Object_ID = T4.Document_Object_ID where T1.Document_Subset_Name = 'Best for 2000'
select count(*) from Document_Objects where Document_Object_ID = '2000'
select T2.Document_Object_ID,T1.Document_Object_ID from Document_Objects as T1 join Documents_in_Collections as T2 on T1.Document_Object_ID = T2.Document_Object_ID group by T2.Document_Object_ID
select T1.Collection_ID,T2.Document_Object_ID from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID group by T1.Collection_ID
select * from Document_Subsets where Document_Subset_Name = 'Best for 2000'
select T3.Collection_Name from Document_Objects as T1 join Documents_in_Collections as T2 on T1.Document_Object_ID = T2.Document_Object_ID join Collections as T3 on T2.Collection_ID = T3.Collection_ID where T1.Owner = 'Ransom'
select count(*),T2.Collection_ID from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID group by T1.Collection_ID
select count(*),T2.Collection_ID from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID group by T1.Collection_ID
select count(*) from Collections where Collection_Name = 'Best'
select count(*) from Collections where Collection_Name = 'Best'
select T2.Document_Object_ID from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID where T1.Collection_Name = 'Best'
SELECT A FROM B
select T2.Collection_ID,T1.Collection_ID,count(*) from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID group by T1.Collection_ID order by count(*) desc limit 1
select count(*),Collection_ID from Collections group by Collection_ID order by count(*) desc limit 1
select T5.Collection_ID from Document_Subsets as T1 join Document_Subset_Members as T2 on T1.Document_Subset_ID = T2.Document_Subset_ID join Document_Objects as T3 on T2.Related_Document_Object_ID = T3.Document_Object_ID join Documents_in_Collections as T4 on T3.Document_Object_ID = T4.Document_Object_ID join Collections as T5 on T4.Collection_ID = T5.Collection_ID where T5.Collection_Name = 'Best' and T1.Document_Subset_Name = 'Best for 2000'
SELECT A FROM B
select T2.Collection_ID from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID where T1.Collection_Name = 'Best' except select T3.Collection_ID from Document_Objects as T1 join Documents_in_Collections as T2 on T1.Document_Object_ID = T2.Document_Object_ID join Collections as T3 on T2.Collection_ID = T3.Collection_ID where T1.Description = 'Ransom Collection'
select T2.Document_Object_ID from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID where T1.Collection_Name = 'Best' except select T2.Document_Object_ID from Collections as T1 join Documents_in_Collections as T2 on T1.Collection_ID = T2.Collection_ID where T1.Collection_Name = 'Best'
select T5.Collection_ID from Document_Subsets as T1 join Document_Subset_Members as T2 on T1.Document_Subset_ID = T2.Document_Subset_ID join Document_Objects as T3 on T2.Related_Document_Object_ID = T3.Document_Object_ID join Documents_in_Collections as T4 on T3.Document_Object_ID = T4.Document_Object_ID join Collections as T5 on T4.Collection_ID = T5.Collection_ID where T5.Collection_Name = 'Best' and T1.Document_Subset_Name = 'Best for 2000'
SELECT A FROM B
select Collection_Name from Collections where Collection_Name = 'Best'
select T3.Collection_Name from Collection_Subsets as T1 join Collection_Subset_Members as T2 on T1.Collection_Subset_ID = T2.Collection_Subset_ID join Collections as T3 on T2.Related_Collection_ID = T3.Collection_ID where T1.Collection_Subset_Name = 'History collection'
select count(*) from Collections where Collection_Name = 'Best'
select count(T5.Collection_Description) from Document_Subsets as T1 join Document_Subset_Members as T2 on T1.Document_Subset_ID = T2.Document_Subset_ID join Document_Objects as T3 on T2.Related_Document_Object_ID = T3.Document_Object_ID join Documents_in_Collections as T4 on T3.Document_Object_ID = T4.Document_Object_ID join Collections as T5 on T4.Collection_ID = T5.Collection_ID where T1.Document_Subset_Name = 'Best for 2000'
select Collection_Name from Collections where Collection_Name like '%Best%'
select * from Collections where Collection_Name = 'Best'
select count(*) from songs where name like '%Love%'
select name from songs order by name asc 
select language,english_translation from songs
select max(voice_sound_quality),min(voice_sound_quality) from performance_score
select T2.rhythm_tempo,T2.voice_sound_quality from participants as T1 join performance_score as T2 on T1.id = T2.participant_id where T1.name = 'Freeway'
select original_artist,language,name from songs where name != ' What If We '
select original_artist,name from songs where english_translation = 'All the streets of love'
select T2.stage_presence from songs as T1 join performance_score as T2 on T1.id = T2.songs_id where T1.language = 'English , Russian'
select T1.name,T2.participant_id from participants as T1 join performance_score as T2 on T1.id = T2.participant_id group by T2.participant_id having count(*) >= '2'
select T1.popularity,T2.songs_id,T3.id from participants as T1 join performance_score as T2 on T1.id = T2.participant_id join songs as T3 on T2.songs_id = T3.id order by T2.rhythm_tempo asc 
select T1.original_artist,T2.participant_id from songs as T1 join performance_score as T2 on T1.id = T2.songs_id where T2.voice_sound_quality = '5'
select T2.voice_sound_quality from songs as T1 join performance_score as T2 on T1.id = T2.songs_id where T1.language = 'English , Russian' and T1.english_translation = 'The voice'
select T1.id,T2.songs_id from songs as T1 join performance_score as T2 on T1.id = T2.songs_id group by T1.id order by count(*) desc limit 1
select count(*) from performance_score where stage_presence > '9'
select count(*) from songs where language not in (select songs_id from performance_score)
select T1.language,avg(T2.rhythm_tempo) from songs as T1 join performance_score as T2 on T1.id = T2.songs_id group by T1.language
select T1.name from participants as T1 join performance_score as T2 on T1.id = T2.participant_id join songs as T3 on T2.songs_id = T3.id where T3.name like '%What%'
select original_artist,name from songs where language = 'Croatian'
select name from songs where name like '%Is%'
select T1.original_artist,T2.voice_sound_quality from songs as T1 join performance_score as T2 on T1.id = T2.songs_id where T1.language = 'English , Russian'
select count(*) from Student
select count(*) from Student
select state from City
select state from City
select count(*) from Student
select count(*) from Student
select state,city_code,country from City
select state,city_code,country from City
SELECT A FROM B
select latitude,longitude from City
select city_name from City where state = 'PA'
select city_name from City where country = 'JAPAN'
SELECT A FROM B
SELECT A FROM B
select city_name from City order by latitude desc 
select city_name from City order by latitude desc 
select state,count(*) from City group by state
select count(*),state from City group by state
select count(*),state from City group by state
select country,count(*) from City group by country
select state from City group by state having count(*) >= '2'
select state from City group by state having count(*) >= '2'
select state from City group by state order by count(*) desc limit 1
select state from City group by state order by count(*) desc limit 1
select country from City group by country order by count(*) asc limit 1
select country from City group by country order by count(*) asc limit 1
select T1.LName,T1.Fname from Student as T1 join City as T2 on T1.city_code = T2.city_code where T2.state = 'MD'
select T1.Fname,T1.LName from Student as T1 join City as T2 on T1.city_code = T2.city_code where T2.state = 'MD'
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select count(*),country from City group by country
select count(*),country from City group by country
select count(*),city_code from City group by city_code
select count(*),city_code from City group by city_code
select state from City group by state order by count(*) desc limit 1
select state from City group by state order by count(*) desc limit 1
select country from City group by country order by count(*) asc limit 1
select country,count(*) from City group by country order by count(*) asc limit 1
select T2.city_name from Student as T1 join City as T2 on T1.city_code = T2.city_code group by T1.city_code having count(*) >= '3'
select T2.city_name from Student as T1 join City as T2 on T1.city_code = T2.city_code group by T1.StuID having count(*) >= '3'
select state from City group by state having count(*) > '5'
select state from City group by state having count(*) > '5'
SELECT A FROM B
SELECT A FROM B
select StuID from Student where Sex = 'F' and city_code = 'SFO'
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select T1.distance,T2.country from Direct_distance as T1 join City as T2 on T1.city2_code = T2.city_code where T2.city_name = 'Baltimore' and T2.city_name between 'Baltimore' and 'Chicago'
SELECT A FROM B
SELECT A FROM B
select min(distance),avg(distance),max(distance) from Direct_distance
select avg(distance),min(distance),max(distance) from Direct_distance
select T2.city_code from Direct_distance as T1 join City as T2 on T1.city2_code = T2.city_code order by T1.distance desc limit 1
select T2.city_code from Direct_distance as T1 join City as T2 on T1.city2_code = T2.city_code order by T1.distance desc limit 1
select T2.city_code from Direct_distance as T1 join City as T2 on T1.city2_code = T2.city_code where T1.distance > (select avg(distance) from Direct_distance)
select city_code from City where longitude > (select avg(longitude) from City)
select city_code from City where longitude < '1000'
select city_code from City where longitude = '1000'
select state from City
SELECT A FROM B
select avg(T1.distance),avg(T2.longitude) from Direct_distance as T1 join City as T2 on T1.city2_code = T2.city_code
select avg(T1.distance),avg(T2.longitude) from Direct_distance as T1 join City as T2 on T1.city2_code = T2.city_code
select city_name from City where city_name = 'Chicago'
select city_name from City where city_name = 'Chicago'
select city_name from City order by longitude asc limit 1
SELECT A FROM B
select T2.city_code,T1.city_code from Student as T1 join City as T2 on T1.city_code = T2.city_code group by T2.city_code
select T2.city_code,T1.city_code from Student as T1 join City as T2 on T1.city_code = T2.city_code group by T2.city_code
select T2.city_name,avg(T1.distance) from Direct_distance as T1 join City as T2 on T1.city2_code = T2.city_code group by T2.state
select city_name,avg(longitude) from City group by city_name
select Fname from Student
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select T2.state from Student as T1 join City as T2 on T1.city_code = T2.city_code where T1.Fname = 'Linda'
select T2.state from Student as T1 join City as T2 on T1.city_code = T2.city_code where T1.Fname = 'Linda'
select name from Sailors where age > '30'
select name from Sailors where age > '30'
select age,name from Sailors where age < '30'
select T1.name,T3.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T1.age < '30'
select name from Sailors where sid = '1'
select T3.bid from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T1.sid = '1'
select day from Reserves
select name from Sailors where age = '102'
select bid from Boats
select sid from Sailors
select name from Sailors where name like '%e%'
select name from Sailors where name like '%e%'
select sid from Sailors where age > (select min(age) from Sailors)
select sid from Sailors where age != (select min(age) from Sailors)
select name from Sailors where rating > '7' except select name from Sailors where rating > '7'
select name from Sailors where age > '7' and rating < '7'
select T1.name,T1.sid from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid group by T3.bid having count(*) >= '1'
select T1.name,T3.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid group by T3.bid having count(*) >= '1'
select T1.name,T1.sid from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid group by T3.bid having count(*) > '1'
select name from Sailors group by sid having count(*) >= '2'
select T1.sid from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T3.color = 'red' and T3.color > 'red'
SELECT A FROM B
select T3.name,T1.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T3.color = 'red' and T3.color != 'red'
select T1.name,T1.sid from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T3.color = 'red' and T3.color > 'red'
select sid from Sailors
SELECT A FROM B
select T3.name,T1.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid
select name,sid from Sailors intersect select name,sid from Sailors
SELECT A FROM B
select sid from Sailors except select sid from Sailors
select T1.name,T3.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T1.sid not in (select sid from Sailors)
select T1.name,T3.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid except select T1.name,T3.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid
select sid from Sailors except select sid from Sailors
select sid from Sailors except select bid from Boats
select name from Sailors where sid = '103'
select name from Sailors where sid = '103'
SELECT A FROM B
select T3.name,T1.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T1.rating > (select min(T1.rating) from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T3.color = 'red')
SELECT A FROM B
SELECT A FROM B
select T3.name,T1.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T1.rating > '2' and T1.age < '2'
select T1.name,T3.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid group by T3.bid having count(*) >= '3'
select T1.age,T3.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid order by T1.age asc limit 1
select T1.name,T3.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid order by T1.age asc limit 1
select count(*) from Sailors
select count(*) from Sailors
select avg(age) from Sailors where rating = '7'
select avg(age) from Sailors where rating = '7'
SELECT A FROM B
SELECT A FROM B
select avg(age),avg(rating) from Sailors
select avg(age),avg(rating) from Sailors group by age
select count(*),T1.sid from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid group by T3.bid
select count(*),bid from Boats group by bid
select count(*),T1.sid from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T3.bid > '50' group by T3.bid having count(*) > '50'
select count(*),bid from Boats where bid > '50' group by bid having count(*) > '50'
select count(*),T1.sid from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid group by T3.bid having count(*) > '1'
select count(*),T1.sid from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid group by T3.bid having count(*) > '1'
select count(*),T1.sid from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T1.sid > '1' group by T3.bid having count(*) > '1'
select count(*),sid from Sailors where age > '1' group by sid having count(*) > '1'
SELECT A FROM B
select avg(age),avg(rating) from Sailors group by rating
select T1.age,T1.rating,T3.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid order by T1.age desc 
SELECT A FROM B
select count(*) from Sailors
select count(*) from Sailors
select count(*) from Sailors
select count(*) from Sailors
select name from Sailors where age between '20' and '30' and sid between '20' and '30'
select T3.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T1.age between '20' and '30'
select name from Sailors where rating > (select min(rating) from Sailors)
select name from Sailors where rating > (select min(rating) from Sailors)
select min(rating) from Sailors order by rating desc limit 1
select max(rating) from Sailors
select T1.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T3.name = 'Melon'
select T1.name from Sailors as T1 join Reserves as T2 on T1.sid = T2.sid join Boats as T3 on T2.bid = T3.bid where T3.name = 'Melon'
select age,name from Sailors order by rating desc 
select age,name from Sailors order by rating desc 
select Model from headphone order by Price desc limit 1
select Model from headphone order by Price desc limit 1
select Model from headphone order by Driver-matched_dB asc 
select Earpads from headphone order by Headphone_ID asc 
select Class from headphone group by Class order by count(*) desc limit 1
select Class from headphone group by Class order by count(*) desc limit 1
select Class from headphone group by Class having count(*) > '2'
select Class from headphone group by Class having count(*) > '2'
select Class,count(*) from headphone where Price > '200' group by Class
select count(*),Class from headphone where Price > '200' group by Class
select count(Earpads) from headphone
select count(Earpads) from headphone
select Earpads from headphone order by Driver-matched_dB desc limit 1
select Earpads,Driver-matched_dB from headphone group by Earpads order by count(*) asc limit 1
select Model,Class,Construction from headphone order by Price asc limit 1
select Class,Model,Construction from headphone order by Price asc limit 1
select Construction,Model from headphone group by Construction
select Construction,Model from headphone group by Construction
select Class from headphone where Earpads = 'Bowls' intersect select Class from headphone where Earpads = 'Comfort Pads'
select T1.Class from headphone as T1 join stock as T2 on T1.Headphone_ID = T2.Headphone_ID join store as T3 on T2.Store_ID = T3.Store_ID where T3.Parking = 'None' intersect select Class from headphone where Earpads = 'Bowls'
select Earpads from headphone where Construction = 'Plastic'
select Earpads from headphone except select Earpads from headphone
select avg(Price) from headphone where Price < (select avg(Price) from headphone)
select Model from headphone where Price < (select avg(Price) from headphone)
select Name from store order by Date_Opened asc 
select Name from store order by Date_Opened asc 
SELECT A FROM B
select Parking,Name from store where Name = 'Laurel Canyon'
select count(Neighborhood) from store
select count(Parking) from store
select Neighborhood,Parking from store group by Neighborhood
select count(*),Neighborhood from store group by Neighborhood
select T1.Name from store as T1 join stock as T2 on T1.Store_ID = T2.Store_ID group by T2.Store_ID order by count(*) desc limit 1
select sum(T2.Quantity),T1.Name from store as T1 join stock as T2 on T1.Store_ID = T2.Store_ID group by T2.Headphone_ID
SELECT A FROM B
select T3.Name from headphone as T1 join stock as T2 on T1.Headphone_ID = T2.Headphone_ID join store as T3 on T2.Store_ID = T3.Store_ID where T1.Headphone_ID not in (select Store_ID from stock)
select Model from headphone except select Model from headphone
select Model from headphone where Headphone_ID not in (select Headphone_ID from stock)
select Model from headphone group by Model order by count(*) desc limit 1
select Model from headphone group by Model
select count(*) from store where Name = 'Woodman'
select sum(T2.Quantity) from store as T1 join stock as T2 on T1.Store_ID = T2.Store_ID where T1.Name = 'Woodman'
SELECT A FROM B
SELECT A FROM B
select count(*) from Affiliation
select count(*) from Affiliation
select count(*) from Affiliation
select count(*) from Affiliation
select count(*) from Affiliation
select count(*) from Affiliation
select count(*) from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id where T3.year = '2000' and T1.name = 'Bhowan, Urvesh'
select count(*) from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id where T3.year = '2000' and T1.name = ', IsoQuest Inc.'
select count(T3.paper_id) from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id where T3.year = '2009' and T1.name = 'Bhowan, Urvesh'
select count(T2.paper_id) from Citation as T1 join Paper as T2 on T1.cited_paper_id = T2.paper_id where T1.cited_paper_id = 'A00-2009' and T2.year = '2009'
select T1.name,T3.name from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Author as T3 on T2.author_id = T3.author_id
select address,name from Affiliation
SELECT A FROM B
select venue from Paper order by year desc 
SELECT A FROM B
select T3.title,T3.paper_id from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Paper as T3 on T2.paper_id = T3.paper_id where T1.name = 'Harvard University'
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select T3.title,T3.paper_id from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Paper as T3 on T2.paper_id = T3.paper_id where T1.name = 'Palo Alto Research Center, Palo Alto CA; Stanford University' intersect select T2.title from Citation as T1 join Paper as T2 on T1.cited_paper_id = T2.paper_id where T2.paper_id in (select T2.paper_id from Citation as T1 join Paper as T2 on T1.cited_paper_id = T2.paper_id where T1.paper_id in ()) and T1.paper_id in (select paper_id from Paper where paper_id in ())
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select title,year from Paper where title = 'Finding Clauses In Unrestricted Text By Finitary And Stochastic Methods' and title > 'Analysis Of Titles And Readers For Title Generation Centered On The Readers'
SELECT A FROM B
select count(*),T1.name from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id order by T3.year desc 
select count(*),T1.author_id from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id group by T1.name order by count(T3.paper_id) desc 
select affiliation_id from Affiliation order by name asc 
select name from Affiliation group by name order by count(*) asc 
select T1.name from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id where T3.title = 'Using Corpus-Derived Name Lists For Named Entity Recognition' group by T1.name having count(T3.paper_id) > '50'
select T1.name from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id where T3.title = 'Classifying What-Type Questions by Head Noun Tagging' group by T1.name having count(T3.paper_id) > '50'
select name from Author group by name having count(*) = '1'
select name from Author group by name having count(*) = '1'
select venue,year from Paper group by venue order by count(paper_id) desc limit 1
select venue,year from Paper group by venue order by count(paper_id) desc 
select venue from Paper group by venue order by count(*) asc limit 1
select venue from Paper group by venue order by count(*) asc limit 1
select count(T1.affiliation_id) from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Paper as T3 on T2.paper_id = T3.paper_id join Citation as T4 on T3.paper_id = T4.cited_paper_id where T4.paper_id = 'A00-1002'
select count(*) from Citation where paper_id = 'A00-1002'
select T1.affiliation_id from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Paper as T3 on T2.paper_id = T3.paper_id where T3.paper_id = 'D12-1027'
select count(*) from Citation where paper_id = 'D12-1027'
SELECT A FROM B
select count(*),T1.affiliation_id from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Paper as T3 on T2.paper_id = T3.paper_id join Citation as T4 on T3.paper_id = T4.cited_paper_id group by T4.paper_id order by count(*) desc limit 1
select title from Paper group by title order by count(*) desc limit 1
select T3.title from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id where T1.name = 'Paperno, Denis' group by T3.paper_id order by count(T3.paper_id) desc limit 1
select T1.affiliation_id,T3.year from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Paper as T3 on T2.paper_id = T3.paper_id group by T3.paper_id order by count(*) desc 
select count(*),year from Paper group by venue order by count(paper_id) desc 
SELECT A FROM B
SELECT A FROM B
select count(affiliation_id) from Affiliation where name = 'City University of Hong Kong, Kowloon Hong Kong; Soochow University'
select count(T1.affiliation_id) from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Author as T3 on T2.author_id = T3.author_id where T1.name = 'University of Maryland Baltimore County' and T3.name = 'McKeown, Kathleen'
select T1.name,count(*) from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id group by T2.paper_id order by count(*) desc limit 1
select T1.name,count(*) from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id order by T3.year desc limit 1
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select T3.name,T1.name from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Author as T3 on T2.author_id = T3.author_id join Paper as T4 on T2.paper_id = T4.paper_id where T4.year = '2009' and T1.name = 'Academy of Sciences of the Czech Republic' group by T3.name order by count(T4.paper_id) desc limit 1
select T1.name from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Paper as T3 on T2.paper_id = T3.paper_id join Citation as T4 on T3.paper_id = T4.cited_paper_id where T3.year = '2009' and T4.cited_paper_id = 'A00-1023' group by T2.affiliation_id order by T3.year desc limit 1
select T1.name,count(T4.paper_id) from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Author as T3 on T2.author_id = T3.author_id join Paper as T4 on T2.paper_id = T4.paper_id where T4.year = '2009' and T3.name = '&#353' group by T3.author_id order by count(T4.paper_id) desc 
select count(T3.paper_id) from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id where T3.year < '2009' and T1.name = 'Bhowan, Urvesh' and T1.name > 'Weld, Daniel S.?'
SELECT A FROM B
select count(*) from Citation as T1 join Paper as T2 on T1.cited_paper_id = T2.paper_id where T2.year between '2000' and '2009' and T1.cited_paper_id between 'W13-2009' and 'W13-2009'
select count(T3.title) from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id where T3.year between '2000' and '2009' and T1.name = 'Woyna, Adam G.' and T1.name like 'Mana Lopez, Manuel J.'
select title from Paper group by title order by count(*) desc limit 1
select title from Paper where year = (select max(year) from Paper)
SELECT A FROM B
select count(T3.paper_id) from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id where T1.name = 'McKeown, Kathleen'
SELECT A FROM B
SELECT A FROM B
select T1.paper_id from Citation as T1 join Paper as T2 on T1.cited_paper_id = T2.paper_id where T2.title like '%Find%'
select T1.paper_id from Citation as T1 join Paper as T2 on T1.cited_paper_id = T2.paper_id where T2.title like '%What%'
select T2.title,T2.paper_id from Citation as T1 join Paper as T2 on T1.cited_paper_id = T2.paper_id where T1.cited_paper_id not in (select year from Paper)
select T1.paper_id,T2.title from Citation as T1 join Paper as T2 on T1.cited_paper_id = T2.paper_id where T2.paper_id not in () except select paper_id,cited_paper_id from Citation
select T1.name,T3.name from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Author as T3 on T2.author_id = T3.author_id group by T1.name order by count(*) desc limit 1
select name from Affiliation where address like '%affiliation%' group by affiliation_id order by count(*) desc limit 1
select year,count(*) from Paper group by year
SELECT A FROM B
select name,count(*) from Affiliation group by name
select count(*),T1.affiliation_id from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Paper as T3 on T2.paper_id = T3.paper_id group by T3.paper_id
select T3.title from Affiliation as T1 join Author_list as T2 on T1.affiliation_id = T2.affiliation_id join Paper as T3 on T2.paper_id = T3.paper_id where T1.name = '20/20 Speech Ltd.' group by T3.title having count(T3.paper_id) > '50'
select T3.title from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id where T1.name = 'Weld, Daniel S.?'
select count(*) from Paper where paper_id not in (A97-1050) group by year having count(paper_id) > '50'
select count(*) from Citation where paper_id not in (select year from Paper where title = 'Learning To Predict Problematic Situations In A Spoken Dialogue System: Experiments With How May I Help You?')
select T1.name from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id where T3.year = '2009' and T3.paper_id in (select year from Paper where venue = 'Proceedings of the 2010 Workshop on NLP and Linguistics: Finding the Common Ground')
SELECT A FROM B
SELECT A FROM B
select T1.name from Author as T1 join Author_list as T2 on T1.author_id = T2.author_id join Paper as T3 on T2.paper_id = T3.paper_id where T3.title != 'Classifying What-Type Questions by Head Noun Tagging'
select count(*) from conference
select count(*) from conference
select Conference_Name from conference
select Conference_Name from conference
select T1.Location,T4.Location,T1.Conference_Name from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID join staff as T3 on T2.staff_ID = T3.staff_ID join institution as T4 on T3.Institution_ID = T4.Institution_ID
select T4.Location,T1.Location,T3.name from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID join staff as T3 on T2.staff_ID = T3.staff_ID join institution as T4 on T3.Institution_ID = T4.Institution_ID
select count(*),Conference_Name from conference group by Conference_Name
select count(*),Conference_Name from conference group by Conference_Name
select Year,count(*) from conference group by Year
select Year,count(*) from conference group by Year
select Year from conference group by Year order by count(*) asc limit 1
select Year from conference group by Year order by count(*) asc limit 1
select T1.Location from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID join staff as T3 on T2.staff_ID = T3.staff_ID join institution as T4 on T3.Institution_ID = T4.Institution_ID group by T4.Location having count(*) >= '2'
select Location from conference group by Location having count(*) >= '2'
select Founded,Location,Institution_Name from institution
select Founded,Location,Institution_Name from institution
select count(*) from institution where Founded between '1850' and '1900'
select count(*) from institution where Founded between '1850' and '1900'
select Location,Institution_Name from institution order by Founded desc limit 1
select T4.Location,T1.Location from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID join staff as T3 on T2.staff_ID = T3.staff_ID join institution as T4 on T3.Institution_ID = T4.Institution_ID group by T4.Location order by count(*) desc limit 1
select count(*),T2.Nationality from institution as T1 join staff as T2 on T1.Institution_ID = T2.Institution_ID where T1.Founded > '1800' group by T1.Institution_Name
select count(*),T2.Nationality from institution as T1 join staff as T2 on T1.Institution_ID = T2.Institution_ID where T1.Founded > '1800' group by T2.Nationality
SELECT A FROM B
select T1.Institution_Name from institution as T1 join staff as T2 on T1.Institution_ID = T2.Institution_ID where T2.Nationality not in (select Institution_ID from staff)
select name from staff where Age > (select avg(Age) from staff)
select name from staff where Age > (select avg(Age) from staff)
select min(Age),max(Age) from staff where Nationality = 'United States'
select min(Age),max(Age) from staff
select T1.Conference_Name from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID join staff as T3 on T2.staff_ID = T3.staff_ID where T3.Nationality = 'Canada'
select T1.Conference_Name from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID join staff as T3 on T2.staff_ID = T3.staff_ID where T3.Nationality = 'Canada'
SELECT A FROM B
select T1.name from staff as T1 join conference_participation as T2 on T1.staff_ID = T2.staff_ID where T2.role = 'Speaker' intersect select T1.name from staff as T1 join conference_participation as T2 on T1.staff_ID = T2.staff_ID where T2.role = 'Sponsor'
SELECT A FROM B
select T3.name from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID join staff as T3 on T2.staff_ID = T3.staff_ID where T1.Conference_Name = 'ACL' intersect select T3.name from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID join staff as T3 on T2.staff_ID = T3.staff_ID where T1.Conference_Name = 'ACL'
select T3.name from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID join staff as T3 on T2.staff_ID = T3.staff_ID where T1.Year = '2004' and T1.Year > '2004'
select T3.name from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID join staff as T3 on T2.staff_ID = T3.staff_ID where T1.Year = '2004' and T1.Year > '2004'
select count(*),Conference_Name from conference group by Conference_Name
select count(*),T1.Conference_ID,T1.Conference_Name from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID group by T2.Conference_ID
select Conference_Name from conference group by Conference_Name order by count(*) desc limit 1
select T2.name from institution as T1 join staff as T2 on T1.Institution_ID = T2.Institution_ID order by T1.Founded desc limit 1
SELECT A FROM B
SELECT A FROM B
select T4.Location,T1.Location from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID join staff as T3 on T2.staff_ID = T3.staff_ID join institution as T4 on T3.Institution_ID = T4.Institution_ID where T2.Conference_ID not in (select staff_ID from conference_participation)
select T4.Location,T1.Location from conference as T1 join conference_participation as T2 on T1.Conference_ID = T2.Conference_ID join staff as T3 on T2.staff_ID = T3.staff_ID join institution as T4 on T3.Institution_ID = T4.Institution_ID where T3.Institution_ID not in (select T3.staff_ID from institution as T1 join staff as T2 on T1.Institution_ID = T2.Institution_ID join conference_participation as T3 on T2.staff_ID = T3.staff_ID where T1.Founded = '2004')
select pilot_name from PilotSkills order by age asc limit 1
select pilot_name from PilotSkills order by age asc limit 1
select pilot_name from PilotSkills where age < (select avg(age) from PilotSkills) order by avg(age) desc 
SELECT A FROM B
select * from PilotSkills where age < '30'
select * from PilotSkills where age < '30'
select T1.pilot_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.plane_name = 'Piper Cub' intersect select T1.pilot_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.plane_name = 'Piper Cub'
select T1.pilot_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.plane_name = 'Piper Cub' intersect select T1.pilot_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.plane_name = 'Piper Cub'
SELECT A FROM B
select location from Hangar where plane_name = 'F-14 Fighter'
select count(location) from Hangar
select count(location) from Hangar
select plane_name from PilotSkills where age = '32'
select T2.plane_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T1.age = '32'
select count(*) from PilotSkills where age > '40'
select count(*) from PilotSkills where age > '40'
SELECT A FROM B
select count(*) from Hangar where plane_name = 'B-52 Bomber'
select pilot_name from PilotSkills order by age asc limit 1
select pilot_name from PilotSkills order by age asc limit 1
select plane_name from Hangar group by plane_name order by count(*) desc limit 1
select plane_name from Hangar group by plane_name order by count(*) desc limit 1
select plane_name from Hangar group by plane_name order by count(*) asc limit 1
select plane_name from Hangar group by plane_name order by count(*) asc limit 1
select count(*) from Hangar where location = 'Chicago'
SELECT A FROM B
select T2.plane_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T1.age = '41'
select T2.plane_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T1.pilot_name = 'Smith' and T1.age = '41'
select count(plane_name) from Hangar
select count(plane_name) from Hangar
SELECT A FROM B
select count(*) from PilotSkills
select count(*) from PilotSkills where age > '40'
select count(*) from PilotSkills where age > '40'
SELECT A FROM B
select pilot_name from PilotSkills order by age asc 
select pilot_name from PilotSkills order by age desc 
select pilot_name from PilotSkills order by age desc 
select T2.location from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name order by T1.plane_name desc 
select T2.location from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name order by T1.plane_name asc 
select plane_name from PilotSkills order by plane_name desc 
select plane_name from Hangar order by plane_name asc 
SELECT A FROM B
SELECT A FROM B
select age,pilot_name from PilotSkills where age < '35'
select pilot_name,age from PilotSkills where age < '35'
select T1.plane_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.plane_name = 'Piper Cub' except select T1.plane_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.plane_name = 'B-1 Bomber'
SELECT A FROM B
select T1.plane_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.plane_name = 'Piper Cub'
select T1.pilot_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.plane_name = 'Piper Cub' intersect select T1.pilot_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.plane_name = 'B-1 Bomber'
select avg(age),min(age) from PilotSkills
select min(age),avg(age) from PilotSkills
SELECT A FROM B
SELECT A FROM B
select T1.pilot_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.plane_name = 'Piper Cub' union select T1.pilot_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.plane_name = 'F-14 Fighter'
select T1.pilot_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.plane_name = 'Piper Cub' and T2.plane_name != 'F-14 Fighter'
select avg(age),pilot_name from PilotSkills group by age
select avg(T1.age),T2.plane_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name group by T2.plane_name
select count(*),age from PilotSkills group by age
select count(*),plane_name from Hangar group by plane_name
select plane_name,age from PilotSkills order by plane_name asc 
select T1.plane_name,T2.plane_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name group by T2.plane_name order by count(*) asc 
select pilot_name,plane_name from PilotSkills group by plane_name
select T2.plane_name,T1.plane_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name order by T1.age desc limit 1
select max(age),count(*) from PilotSkills group by pilot_name
select max(age),pilot_name,plane_name from PilotSkills group by pilot_name
select avg(age),count(*) from PilotSkills group by *
select avg(T1.age),T2.location from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name group by T2.location
select count(plane_name) from PilotSkills where age < '35'
select T2.plane_name,T1.plane_name from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name group by T2.plane_name having count(*) >= '35'
select T2.location from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name order by T1.age asc limit 1
select T2.location from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name order by T1.age asc limit 1
SELECT A FROM B
select T1.pilot_name,T1.age from PilotSkills as T1 join Hangar as T2 on T1.plane_name = T2.plane_name where T2.location = 'Austin'
select pilot_name from PilotSkills where age > (select min(age) from PilotSkills) order by plane_name desc 
select pilot_name from PilotSkills where age > (select min(plane_name) from PilotSkills)
select count(*) from PilotSkills where plane_name = 'F-14 Fighter'
select count(*) from Hangar where plane_name = 'F-14 Fighter'
select plane_name from Hangar where plane_name like '%Bomber%'
select plane_name from Hangar where plane_name like '%Bomber%'
select count(*) from PilotSkills where age > (select max(age) from PilotSkills)
SELECT A FROM B
select Name from district order by Area_km desc limit 1
select T1.Government_website,T2.District_ID from district as T1 join spokesman_district as T2 on T1.District_ID = T2.District_ID order by T1.Population asc limit 1
select Population,Name from district where Area_km > (select avg(Density_km) from district)
select avg(Population),max(Population),Density_km from district
select sum(Population) from district order by Area_km desc limit 1
select T1.Government_website,T3.Name,T1.Name from district as T1 join spokesman_district as T2 on T1.District_ID = T2.District_ID join spokesman as T3 on T2.Spokesman_ID = T3.Spokesman_ID order by T1.Population asc 
select Name from district where Government_website = 'linke.gov'
select T1.Name,T3.Name from district as T1 join spokesman_district as T2 on T1.District_ID = T2.District_ID join spokesman as T3 on T2.Spokesman_ID = T3.Spokesman_ID where T1.Population > '4000'
select T3.Name,T1.Name from district as T1 join spokesman_district as T2 on T1.District_ID = T2.District_ID join spokesman as T3 on T2.Spokesman_ID = T3.Spokesman_ID
select avg(Age),avg(Points) from spokesman where Rank_position = '1'
select Points,Rank_position from spokesman where Age < '40'
select Name from spokesman order by Age desc limit 1
select Rank_position from spokesman where Points < (select avg(Points) from spokesman)
select Name from district group by District_ID order by count(*) desc limit 1
select T1.Name from spokesman as T1 join spokesman_district as T2 on T1.Spokesman_ID = T2.Spokesman_ID where T2.Start_year < '2004'
select T1.Name,T2.District_ID,T1.District_ID from district as T1 join spokesman_district as T2 on T1.District_ID = T2.District_ID group by T1.District_ID
select T1.Name from district as T1 join spokesman_district as T2 on T1.District_ID = T2.District_ID join spokesman as T3 on T2.Spokesman_ID = T3.Spokesman_ID where T3.Rank_position = '2' intersect select T1.Name from district as T1 join spokesman_district as T2 on T1.District_ID = T2.District_ID join spokesman as T3 on T2.Spokesman_ID = T3.Spokesman_ID where T3.Rank_position = '2'
select Name from district group by District_ID having count(*) > '1'
select count(*) from district where District_ID not in (select District_ID from spokesman_district)
select Name from spokesman except select Name from spokesman
select sum(Population) from district
select title from Sculptures order by year desc limit 1
select title from Sculptures order by year desc limit 1
select T3.location,T1.location from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID order by T1.height_mm desc limit 1
SELECT A FROM B
select title from Sculptures where location = 'Gallery 226'
select T1.fname from Artists as T1 join Sculptures as T2 on T1.artistID = T2.sculptorID where T2.location = 'Gallery 226'
select T1.location,T3.location from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID
select location,mediumOn from Paintings
select T3.location,T1.location from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID
select medium,location from Sculptures
select T1.width_mm from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.sculptureID = '80'
select T1.medium from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.sculptureID = '80'
SELECT A FROM B
select lname,fname from Artists where birthYear > '1850'
select T3.year,T1.year from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.location != 'Gallery 226'
select T1.lname,T1.fname from Artists as T1 join Sculptures as T2 on T1.artistID = T2.sculptorID where T2.location != 'Gallery 226'
SELECT A FROM B
SELECT A FROM B
select birthYear from Artists where artistID > '1920'
select T1.birthYear from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID where T1.artistID > '1920' group by T2.year
select T1.lname,T1.fname from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID order by T2.width_mm asc limit 1
select T1.fname,T1.lname from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID order by T2.width_mm desc limit 1
select T1.fname from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID order by T2.year asc limit 1
select T2.year from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID order by T1.deathYear asc limit 1
select fname,lname from Artists order by deathYear asc limit 1
select T1.fname,T1.lname from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID order by T2.width_mm asc limit 1
select count(*) from Paintings where location = 'Gallery 240'
SELECT A FROM B
select count(*) from Paintings order by year desc limit 1
select count(*) from Artists order by deathYear asc limit 1
select lname,fname from Artists where fname = 'Mary'
select T1.lname,T2.year from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID where T1.fname = 'Mary'
select T2.medium from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID where T1.birthYear < '1850'
select painterID from Paintings where year < '1850'
select T2.mediumOn,T2.medium from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID where T1.fname = 'Pablo'
select T2.location,T3.location from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID join Sculptures as T3 on T1.artistID = T3.sculptorID where T1.fname = 'Vincent'
select lname,fname from Artists intersect select lname,fname from Artists
select lname,fname from Artists intersect select lname,fname from Artists
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select T1.fname from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID join Sculptures as T3 on T1.artistID = T3.sculptorID where T3.location = 'Gallery 226' and T2.location = 'Gallery 240'
SELECT A FROM B
select count(*),painterID from Paintings group by paintingID
select count(*),medium from Sculptures group by medium
select avg(height_mm),avg(width_mm) from Paintings group by mediumOn
select avg(height_mm),avg(width_mm) from Paintings group by mediumOn
select count(*),T1.location from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID group by T3.location
select count(*),count(medium) from Paintings group by location having count(*) >= '1900'
select T3.title from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.year > '1910' and T1.year > '1910'
select medium from Paintings where year > '1910'
select painterID from Paintings where height_mm > '240'
select T1.painterID from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T1.height_mm > '240' and T3.location = 'Gallery 226'
select T1.title from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.medium > (select min(paintingID) from Paintings)
select title from Paintings where height_mm > (select min(height_mm) from Paintings)
select sculptorID from Sculptures where location > 'Gallery 226'
select T1.paintingID from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.location > 'Gallery 226'
select T3.sculptureID from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID order by T1.year desc limit 1
select T3.sculptureID from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID order by T1.year desc limit 1
SELECT A FROM B
select T1.fname,T1.lname from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID where T2.title like '%\"%'
select medium from Paintings order by medium asc 
select medium from Paintings order by medium asc 
select title from Paintings order by height_mm asc 
select title from Paintings order by width_mm desc,height_mm desc 
select T3.title from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.year > '1950' and T1.year between '1900' and '1950'
select medium from Sculptures where year between '1900' and '1950'
select T3.title,T2.title from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID join Sculptures as T3 on T1.artistID = T3.sculptorID where T1.artistID = '222'
select T1.title,T3.title from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.sculptureID = '222'
select painterID from Paintings where year > '1900' group by paintingID order by count(*) desc limit 1
select T2.painterID from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID where T2.year > (select max(T2.year) from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID where T2.mediumOn = 'ivory laid paper' order by T1.birthYear desc limit 1) group by T1.birthYear order by count(*) desc limit 1
select fname from Artists group by artistID order by count(*) desc limit 1
select T1.fname from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID group by T2.painterID order by count(*) desc limit 1
select title from Paintings where width_mm > '800'
select title from Paintings where width_mm > '800' and height_mm < '800'
select location from Paintings where year > '1930' and year < '1930'
select location from Paintings where year > '1930' and year < '1930'
select T3.sculptureID from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T1.height_mm > '2000'
select T3.sculptureID from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T1.height_mm > '2000' and T1.width_mm < '2000'
select location from Paintings where mediumOn = 'panel' intersect select location from Paintings where mediumOn = 'panel'
SELECT A FROM B
select location from Paintings where year > '1930'
select location from Paintings where year > '1930' intersect select location from Paintings where year < '1930'
select avg(T1.width_mm),avg(T1.height_mm) from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.location = 'Gallery 226'
SELECT A FROM B
select max(T1.height_mm),max(T1.width_mm) from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.year > '1900'
select T1.height_mm,T1.width_mm from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.year > (select max(year) from Sculptures)
select max(width_mm),max(height_mm) from Paintings group by year
select T2.year,T3.year from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID join Sculptures as T3 on T1.artistID = T3.sculptorID group by T1.deathYear
select avg(T2.width_mm),avg(T2.height_mm) from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID order by T1.fname asc 
select avg(T2.width_mm),avg(T2.height_mm) from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID group by T1.fname order by count(*) asc 
select count(*),fname from Artists group by artistID having count(*) >= '2'
select fname,artistID from Artists group by artistID having count(*) >= '2'
select year from Paintings group by year having count(*) <= '3'
select T1.artistID,T2.painterID from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID group by T1.artistID having count(*) < '4'
select deathYear from Artists group by lname order by count(*) asc limit 1
select painterID from Paintings group by painterID order by count(*) asc limit 1
select T1.height_mm,T1.width_mm from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.year = (select max(width_mm) from Paintings)
select height_mm,width_mm from Paintings where width_mm > (select max(width_mm) from Paintings)
select T3.sculptureID from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T1.year = '240'
select paintingID from Paintings where year > (select max(year) from Paintings where mediumOn = 'ivory laid paper')
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select location,title,* from Paintings
select T2.title,T3.title,T2.location from Artists as T1 join Paintings as T2 on T1.artistID = T2.painterID join Sculptures as T3 on T1.artistID = T3.sculptorID where T2.year > '1000' or T3.year < '1000' or T1.birthYear > '1000' order by T3.year asc,min(T2.year) asc,min(T1.birthYear) asc 
select T3.location,T1.location,T1.title from Paintings as T1 join Artists as T2 on T1.painterID = T2.artistID join Sculptures as T3 on T2.artistID = T3.sculptorID where T3.year > '1000' order by T1.location asc,T1.year asc,max(T3.year) asc 
select lname,fname from Artists except select lname,fname from Artists
select lname,fname from Artists except select lname,fname from Artists
select location from Paintings where mediumOn = 'canvas' except select location from Paintings where mediumOn = 'canvas'
select * from Paintings where mediumOn > 'canvas'
select count(*) from driver
select count(*) from driver
select Winning_driver,Winning_team from race order by Winning_team asc 
select Winning_driver,Winning_team from race order by Winning_team desc 
select Winning_driver from race where Pole_Position != 'Junior Strous'
select T2.Winning_driver,T1.Engine from driver as T1 join race as T2 on T1.Driver_ID = T2.Driver_ID where T2.Pole_Position != 'Junior Strous'
select Constructor from driver order by Age desc 
select Constructor from driver order by Age asc 
select Constructor from driver where Age >= '20'
select Entrant from driver where Age >= '20'
select min(Age),max(Age) from driver
select min(Age),max(Age) from driver
select Engine from driver where Age > '30'
select Engine from driver where Age < '30'
select Driver_Name from driver order by Driver_Name desc 
select Driver_Name from driver order by Driver_Name desc 
select Constructor,Driver_Name from driver
select Driver_Name,Constructor from driver
select Driver_Name,count(*) from driver group by Driver_Name
select count(*),Entrant from driver group by Entrant
select Age from driver group by Age order by count(*) desc limit 1
select Age from driver group by Age order by count(*) desc limit 1
select Age,Driver_Name from driver group by Driver_Name having count(*) >= '2'
select Age,Driver_Name from driver group by Driver_Name having count(*) >= '2'
select Driver_Name from driver where Age >= '26'
select Driver_Name from driver where Age > '26'
select Driver_Name from driver where Constructor != 'Bugatti'
select Driver_Name from driver where Constructor = 'Bugatti' except select Driver_Name from driver
select count(*),Constructor from driver group by Constructor
select count(*),Constructor from driver group by Constructor
select Engine from driver group by Engine order by count(*) desc limit 1
select Engine from driver group by Engine order by count(*) desc limit 1
select Engine from driver group by Engine having count(*) >= '2'
select Engine from driver group by Engine having count(*) >= '2'
select Driver_Name from driver where Driver_ID not in (select Driver_ID from race)
select Driver_Name from driver where Driver_ID not in (select Driver_ID from race)
select Constructor from driver where Age < '30' intersect select Constructor from driver where Age > '30'
select Constructor from driver where Age < '30' intersect select Constructor from driver where Age > '30'
SELECT A FROM B
select Winning_team from race group by Winning_team having count(*) > '1'
select T1.Driver_Name from driver as T1 join race as T2 on T1.Driver_ID = T2.Driver_ID where T2.Winning_driver = 'James Hinchcliffe' intersect select T1.Driver_Name from driver as T1 join race as T2 on T1.Driver_ID = T2.Driver_ID where T2.Winning_driver = 'Carl Skerlong'
select T1.Driver_Name from driver as T1 join race as T2 on T1.Driver_ID = T2.Driver_ID where T2.Pole_Position = 'James Hinchcliffe' and T2.Winning_driver = 'James Hinchcliffe' intersect select T1.Driver_Name from driver as T1 join race as T2 on T1.Driver_ID = T2.Driver_ID where T2.Pole_Position = 'Carl Skerlong'
select Driver_Name from driver where Driver_ID not in (select Driver_ID from race where Pole_Position = 'James Hinchcliffe')
SELECT A FROM B
select count(*) from languages
select count(*) from languages
select name from languages order by name asc 
select name from languages order by name asc 
select name from languages where name like '%ish%'
select name from languages where name like '%ish%'
select name from countries order by overall_score desc 
select name from countries order by overall_score desc 
select avg(economics_score) from countries
select avg(overall_score) from countries
SELECT A FROM B
SELECT A FROM B
select count(language_id) from official_languages
select count(language_id) from official_languages
select name from countries order by justice_score desc 
select name from countries order by education_score desc 
select name from countries order by politics_score desc limit 1
select name from countries order by economics_score desc limit 1
select T3.name,T1.name from languages as T1 join official_languages as T2 on T1.id = T2.language_id join countries as T3 on T2.country_id = T3.id
SELECT A FROM B
select count(*),T1.name from countries as T1 join official_languages as T2 on T1.id = T2.country_id group by T2.language_id
select T1.name,T3.name from languages as T1 join official_languages as T2 on T1.id = T2.language_id join countries as T3 on T2.country_id = T3.id group by T1.name
select name from countries group by name order by count(*) desc limit 1
select language_id from official_languages group by language_id order by count(*) desc limit 1
select T1.name from countries as T1 join official_languages as T2 on T1.id = T2.country_id group by T2.language_id having count(*) >= '2'
select T1.name from languages as T1 join official_languages as T2 on T1.id = T2.language_id group by T2.language_id having count(*) >= '2'
SELECT A FROM B
select avg(T3.overall_score) from languages as T1 join official_languages as T2 on T1.id = T2.language_id join countries as T3 on T2.country_id = T3.id where T1.name = 'English'
select language_id from official_languages group by language_id order by count(*) desc limit 1
select name from languages group by name order by count(*) desc limit 1
select T1.name from languages as T1 join official_languages as T2 on T1.id = T2.language_id join countries as T3 on T2.country_id = T3.id order by T3.overall_score desc 
select T1.name,T3.name from languages as T1 join official_languages as T2 on T1.id = T2.language_id join countries as T3 on T2.country_id = T3.id group by T1.name
select name from countries group by name order by count(*) desc limit 1
select name from countries group by name order by count(*) desc limit 1
select T1.name from languages as T1 join official_languages as T2 on T1.id = T2.language_id where T2.language_id not in (select language_id from official_languages)
select T1.name from languages as T1 join official_languages as T2 on T1.id = T2.language_id where T2.language_id not in (select language_id from official_languages)
select name from countries where id not in (select language_id from official_languages)
select name from countries except select name from countries
select T1.name from languages as T1 join official_languages as T2 on T1.id = T2.language_id join countries as T3 on T2.country_id = T3.id where T3.overall_score < '95' intersect select T1.name from languages as T1 join official_languages as T2 on T1.id = T2.language_id join countries as T3 on T2.country_id = T3.id where T3.overall_score > '95'
select T1.name,T3.name from languages as T1 join official_languages as T2 on T1.id = T2.language_id join countries as T3 on T2.country_id = T3.id where T3.overall_score < '95'
select country,county_state_province from Addresses
select country,county_state_province from Addresses
select county_state_province from Addresses
select T2.property_description,T1.county_state_province from Addresses as T1 join Properties as T2 on T1.address_id = T2.property_address_id group by T2.property_id
select room_size from Rooms
select T4.feature_description from Property_Photos as T1 join Properties as T2 on T1.property_id = T2.property_id join Property_Features as T3 on T2.property_id = T3.property_id join Features as T4 on T3.feature_id = T4.feature_id where T1.photo_title = 'front'
select T2.feature_description,T1.property_feature_description from Property_Features as T1 join Features as T2 on T1.feature_id = T2.feature_id group by T1.property_feature_description order by count(*) desc limit 1
select T2.feature_description,T1.property_feature_description from Property_Features as T1 join Features as T2 on T1.feature_id = T2.feature_id group by T1.property_feature_description order by count(*) desc limit 1
select min(room_count) from Properties
select min(room_count) from Properties
SELECT A FROM B
select count(*) from Properties where parking_lots = '1'
select T5.feature_description from Ref_Age_Categories as T1 join Users as T2 on T1.age_category_code = T2.age_category_code join Properties as T3 on T2.user_id = T3.owner_user_id join Property_Features as T4 on T3.property_id = T4.property_id join Features as T5 on T4.feature_id = T5.feature_id where T1.age_category_code = '18-25'
select T1.age_category_code from Ref_Age_Categories as T1 join Users as T2 on T1.age_category_code = T2.age_category_code join Ref_User_Categories as T3 on T2.user_category_code = T3.user_category_code where T3.user_category_description like '%Mother%'
select T1.first_name from Users as T1 join Properties as T2 on T1.user_id = T2.owner_user_id group by T2.owner_user_id order by count(*) desc limit 1
select T1.first_name from Users as T1 join Properties as T2 on T1.user_id = T2.owner_user_id group by T2.owner_user_id order by count(*) desc limit 1
select avg(room_count) from Properties
SELECT A FROM B
SELECT A FROM B
select town_city from Addresses except select town_city from Addresses
select T2.property_name,T1.property_id,T2.vendor_requested_price from Rooms as T1 join Properties as T2 on T1.property_id = T2.property_id group by T1.property_id order by avg(T2.vendor_requested_price) asc limit 1
select T2.property_id,T1.property_id from Rooms as T1 join Properties as T2 on T1.property_id = T2.property_id order by T2.vendor_requested_price asc limit 1
select count(*) from Ref_Age_Categories
select avg(room_number) from Rooms
select count(*) from Ref_Age_Categories
select count(room_size) from Rooms
SELECT A FROM B
select T1.user_id from User_Searches as T1 join Users as T2 on T1.user_id = T2.user_id join Properties as T3 on T2.user_id = T3.owner_user_id group by T3.owner_user_id having count(*) >= '2'
select T1.town_city from Addresses as T1 join Properties as T2 on T1.address_id = T2.property_address_id join Users as T3 on T2.owner_user_id = T3.user_id order by T3.first_name desc limit 1
select date_registered from Users order by date_registered desc limit 1
select date_registered,is_buyer from Users order by date_registered desc 
select T1.search_string,T1.search_datetime from User_Searches as T1 join Users as T2 on T1.user_id = T2.user_id order by T2.date_registered desc 
select zip_postcode from Addresses group by zip_postcode having count(*) != '2'
select zip_postcode from Addresses group by zip_postcode having count(*) <= '2'
select T3.user_id,T1.user_category_code from Ref_User_Categories as T1 join Users as T2 on T1.user_category_code = T2.user_category_code join User_Searches as T3 on T2.user_id = T3.user_id group by T3.user_id intersect select T1.user_id,T3.owner_user_id from User_Searches as T1 join Users as T2 on T1.user_id = T2.user_id join Properties as T3 on T2.user_id = T3.owner_user_id group by T1.user_id
select T3.user_category_code,T1.age_category_code from Ref_Age_Categories as T1 join Users as T2 on T1.age_category_code = T2.age_category_code join Ref_User_Categories as T3 on T2.user_category_code = T3.user_category_code group by T3.user_category_code having count(*) = '1'
select T1.user_category_code from Ref_User_Categories as T1 join Users as T2 on T1.user_category_code = T2.user_category_code order by T2.age_category_code asc limit 1
select T1.age_category_code from Ref_Age_Categories as T1 join Users as T2 on T1.age_category_code = T2.age_category_code join Ref_User_Categories as T3 on T2.user_category_code = T3.user_category_code order by T3.user_category_code asc limit 1
select login_name from Users order by first_name asc 
select login_name from Users order by first_name asc 
select count(*) from Ref_Age_Categories
select count(*) from Users order by is_buyer desc limit 1
select T2.owner_user_id from Users as T1 join Properties as T2 on T1.user_id = T2.owner_user_id where T1.login_name = 'ratione'
select date_registered from Users where login_name = 'ratione'
select T1.last_name,T1.first_name,T1.middle_name,T1.login_name from Users as T1 join Properties as T2 on T1.user_id = T2.owner_user_id where T2.price_max = '1' order by T2.price_max desc limit 1
select last_name,login_name,first_name from Users
select T3.town_city,T1.room_number,* from Rooms as T1 join Properties as T2 on T1.property_id = T2.property_id join Addresses as T3 on T2.property_address_id = T3.address_id
select T3.town_city,T1.feature_value from Property_Features as T1 join Properties as T2 on T1.property_id = T2.property_id join Addresses as T3 on T2.property_address_id = T3.address_id
select count(*) from Properties group by property_id having count(*) >= '2'
select T2.room_count from Rooms as T1 join Properties as T2 on T1.property_id = T2.property_id group by T1.other_room_details having count(*) >= '2'
select count(*),T1.feature_value from Property_Features as T1 join Properties as T2 on T1.property_id = T2.property_id group by T2.property_description
select count(*) from Property_Features group by property_id
select count(*),garage_yn from Properties group by owner_user_id
select count(*),owner_user_id from Properties group by owner_user_id
SELECT A FROM B
SELECT A FROM B
select T1.photo_filename,T1.photo_title from Property_Photos as T1 join Properties as T2 on T1.property_id = T2.property_id join Users as T3 on T2.owner_user_id = T3.user_id order by T3.date_registered asc 
select T2.property_name,T1.photo_filename from Property_Photos as T1 join Properties as T2 on T1.property_id = T2.property_id join Users as T3 on T2.owner_user_id = T3.user_id order by T3.date_registered asc 
select T1.property_type_description,T4.room_type_description from Ref_Property_Types as T1 join Properties as T2 on T1.property_type_code = T2.property_type_code join Rooms as T3 on T2.property_id = T3.property_id join Ref_Room_Types as T4 on T3.room_type_code = T4.room_type_code group by T1.property_type_code order by count(*) desc limit 1
select T1.property_type_description,T4.room_type_description from Ref_Property_Types as T1 join Properties as T2 on T1.property_type_code = T2.property_type_code join Rooms as T3 on T2.property_id = T3.property_id join Ref_Room_Types as T4 on T3.room_type_code = T4.room_type_code group by T1.property_type_description order by count(*) desc limit 1
select T1.user_category_description from Ref_User_Categories as T1 join Users as T2 on T1.user_category_code = T2.user_category_code where T2.age_category_code = 'Over 60'
select T1.user_category_description from Ref_User_Categories as T1 join Users as T2 on T1.user_category_code = T2.user_category_code where T2.age_category_code = 'Over 60'
select T1.room_size,T2.parking_lots from Rooms as T1 join Properties as T2 on T1.property_id = T2.property_id group by T1.room_size
select room_size,count(*) from Rooms group by room_size
select T1.country from Addresses as T1 join Properties as T2 on T1.address_id = T2.property_address_id join Users as T3 on T2.owner_user_id = T3.user_id where T3.first_name = 'Robbie'
select T1.country from Addresses as T1 join Properties as T2 on T1.address_id = T2.property_address_id join Users as T3 on T2.owner_user_id = T3.user_id where T3.first_name = 'Robbie'
select first_name,last_name,middle_name from Users
select first_name,last_name from Users
select is_buyer from Users except select is_buyer from Users
select photo_filename from Property_Photos except select photo_filename from Property_Photos
select T1.last_name,T1.first_name from Users as T1 join Properties as T2 on T1.user_id = T2.owner_user_id group by T2.owner_user_id having count(*) >= '2'
select last_name,date_registered from Users group by user_id having count(*) >= '2'
select count(*) from bike where weight > '780'
select T3.name,T1.product_name from bike as T1 join cyclists_own_bikes as T2 on T1.id = T2.bike_id join cyclist as T3 on T2.cyclist_id = T3.id order by T1.price asc 
select T3.nation,T3.name,T1.product_name from bike as T1 join cyclists_own_bikes as T2 on T1.id = T2.bike_id join cyclist as T3 on T2.cyclist_id = T3.id
select max(weight),min(weight) from bike
SELECT A FROM B
select result,name from cyclist where nation != 'Russia'
select T1.product_name,T2.bike_id from bike as T1 join cyclists_own_bikes as T2 on T1.id = T2.bike_id where T2.purchase_year > '2015'
select T2.bike_id,T1.product_name from bike as T1 join cyclists_own_bikes as T2 on T1.id = T2.bike_id group by T2.bike_id having count(*) >= '4'
select name,id from cyclist group by id order by count(*) desc limit 1
select T1.product_name from bike as T1 join cyclists_own_bikes as T2 on T1.id = T2.bike_id join cyclist as T3 on T2.cyclist_id = T3.id where T3.nation = 'Russia'
select count(heat) from cyclist
select count(*) from cyclists_own_bikes where cyclist_id not in (select bike_id from cyclists_own_bikes where purchase_year > '2015')
SELECT A FROM B
select T1.price,T1.product_name from bike as T1 join cyclists_own_bikes as T2 on T1.id = T2.bike_id join cyclist as T3 on T2.cyclist_id = T3.id where T3.name = 'Bradley Wiggins' and T3.nation = 'Great Britain' intersect select T1.product_name,T1.price from bike as T1 join cyclists_own_bikes as T2 on T1.id = T2.bike_id join cyclist as T3 on T2.cyclist_id = T3.id where T3.name = 'Bradley Wiggins' and T3.nation = 'Great Britain'
select nation,result,name from cyclist where name not in (select T2.cyclist_id from bike as T1 join cyclists_own_bikes as T2 on T1.id = T2.bike_id where T1.product_name = 'CANYON AEROAD CF SLX 8.0 DI2')
SELECT A FROM B
select count(*),T2.cyclist_id from cyclist as T1 join cyclists_own_bikes as T2 on T1.id = T2.cyclist_id group by T1.id
select T1.Flavor,T2.Item from goods as T1 join items as T2 on T1.Id = T2.Item order by T1.Flavor desc limit 1
select T1.Flavor,T2.Item from goods as T1 join items as T2 on T1.Id = T2.Item order by T1.Flavor desc limit 1
SELECT A FROM B
select Flavor,Id from goods order by Flavor asc limit 1
select Id from goods where Flavor = 'Apple'
select T1.Id from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId join items as T3 on T2.ReceiptNumber = T3.Receipt join goods as T4 on T3.Item = T4.Id where T4.Flavor = 'Apple'
select T1.Id from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId group by T2.CustomerId having count(*) < '3'
select T1.Id from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId join items as T3 on T2.ReceiptNumber = T3.Receipt join goods as T4 on T3.Item = T4.Id group by T2.CustomerId having sum(T4.Price) < '3'
select T1.Id from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId join items as T3 on T2.ReceiptNumber = T3.Receipt join goods as T4 on T3.Item = T4.Id where T4.Flavor = 'Lemon'
select Id from customers where LastName not in (select T3.CustomerId from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber where T1.Flavor = 'Lemon')
select count(*),Food from goods group by Food
select count(*),count(Item) from items group by *
select CustomerId from receipts group by CustomerId having count(*) >= '15'
select CustomerId from receipts group by CustomerId having count(*) >= '15'
select T1.LastName from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId group by T2.CustomerId having count(*) > '10'
select T1.LastName from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId group by T2.CustomerId having count(*) > '10'
SELECT A FROM B
select count(*) from goods group by Food
SELECT A FROM B
select Flavor from goods
select T2.Item from goods as T1 join items as T2 on T1.Id = T2.Item order by T1.Price asc 
select T2.Item from goods as T1 join items as T2 on T1.Id = T2.Item where T1.Price = '15'
select avg(Price),max(Price),min(Price),avg(Flavor) from goods group by Id
select avg(Price),max(Price),min(Price) from goods group by Price
SELECT A FROM B
SELECT A FROM B
select T2.ReceiptNumber from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId where T1.LastName = 'LOGAN'
select T2.ReceiptNumber from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId where T1.LastName = 'LOGAN'
select T3.Date,T2.Receipt from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber order by T1.Price desc limit 1
select T3.Date,T3.ReceiptNumber from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber order by T1.Price desc limit 1
select Item from items group by Item order by count(*) asc limit 1
select T2.Item from goods as T1 join items as T2 on T1.Id = T2.Item group by T1.Id order by count(*) asc limit 1
select count(*),sum(T2.Item) from goods as T1 join items as T2 on T1.Id = T2.Item group by T1.Id
select count(*),sum(Receipt) from items group by *
select avg(T1.Price),avg(T2.Item) from goods as T1 join items as T2 on T1.Id = T2.Item group by T1.Price
select avg(T1.Price),T2.Item from goods as T1 join items as T2 on T1.Id = T2.Item group by T1.Price
select Id from goods where Flavor = 'Apricot' and Price < '5'
select Id from goods where Flavor = 'Apricot' intersect select Id from goods where Flavor = 'Apricot' and Price < '5'
select Flavor from goods group by Flavor having count(*) > '10'
select Flavor from goods where Price > '10'
select T1.Price,T2.Item from goods as T1 join items as T2 on T1.Id = T2.Item where T1.Price < (select avg(Price) from goods)
select avg(T4.Price),T1.Id from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId join items as T3 on T2.ReceiptNumber = T3.Receipt join goods as T4 on T3.Item = T4.Id where T4.Price < (select avg(Price) from goods)
SELECT A FROM B
select T3.CustomerId from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber where T1.Price < (select min(Price) from goods)
select T3.ReceiptNumber from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber where T1.Price >= '13'
select T3.ReceiptNumber from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber where T1.Price <= '13'
select T3.Date from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber where T1.Price > '15'
select T3.Date from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber where T1.Price >= '15'
select T3.CustomerId from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber where T1.Id = '50-APP'
select Id from goods where Id like '%APP%'
select T4.Price from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId join items as T3 on T2.ReceiptNumber = T3.Receipt join goods as T4 on T3.Item = T4.Id where T1.LastName = 'LOGAN'
select T1.Price,T3.CustomerId from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber where T1.Flavor = 'Chocolate'
select LastName from customers order by LastName asc 
select LastName from customers order by LastName asc 
select FirstName from customers
select Id from customers
SELECT A FROM B
SELECT A FROM B
select Date from receipts order by Date desc limit 1
select T2.Date,T2.ReceiptNumber,T1.Receipt from items as T1 join receipts as T2 on T1.Receipt = T2.ReceiptNumber order by T2.Date desc limit 1
select T3.Date from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber where T1.Price >= '10' and T3.Date >= '10-Oct-2007'
select T3.ReceiptNumber from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber where T1.Price >= '10'
select T2.CustomerId,T3.Receipt,T1.Id from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId join items as T3 on T2.ReceiptNumber = T3.Receipt join goods as T4 on T3.Item = T4.Id where T4.Price between '3' and '7'
select T3.CustomerId from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber where T1.Price between '3' and '7' and T1.Flavor in (select Id from goods where Price between '3' and '7')
select T1.FirstName,T1.LastName from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId order by T2.Date asc limit 1
select T1.LastName,T1.FirstName from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId order by T2.Date desc limit 1
select avg(Price) from goods where Flavor = 'Blackberry'
select avg(Price) from goods where Flavor = 'Blackberry'
select min(Price) from goods where Flavor = 'Cheese'
select T1.Price,T2.Item from goods as T1 join items as T2 on T1.Id = T2.Item where T1.Flavor = 'Cheese'
select avg(Price),max(Price),min(Price),max(Flavor),avg(Flavor),min(Flavor) from goods group by Price order by avg(Price) desc,max(Price) desc 
select avg(Price),max(Price),min(Price),max(Flavor),avg(Flavor),min(Flavor) from goods order by Flavor asc 
select min(T1.Price),max(T1.Price),max(T2.Item),min(T2.Item) from goods as T1 join items as T2 on T1.Id = T2.Item group by T1.Price order by max(T1.Price) asc,avg(T1.Price) desc limit 1
select max(Price),min(Price) from goods order by max(Price) asc,min(Price) asc 
select T2.Date,T1.Receipt from items as T1 join receipts as T2 on T1.Receipt = T2.ReceiptNumber group by T2.ReceiptNumber order by count(*) desc limit 1
select Date from receipts group by Date order by count(*) desc limit 1
select count(*) from goods group by Food order by count(*) desc limit 1
select count(*),CustomerId from receipts group by CustomerId order by count(*) desc limit 1
select Date,count(*) from receipts group by Date
select count(*),Date from receipts group by Date
SELECT A FROM B
SELECT A FROM B
select T1.Id from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId join items as T3 on T2.ReceiptNumber = T3.Receipt join goods as T4 on T3.Item = T4.Id where T4.Price < (select min(Price) from goods)
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select Id from goods where Price > (select avg(Price) from goods)
SELECT A FROM B
select T2.Item,T1.Flavor,T1.Id from goods as T1 join items as T2 on T1.Id = T2.Item order by T2.Item asc 
select T2.Item,T1.Food,T1.Price from goods as T1 join items as T2 on T1.Id = T2.Item order by T1.Price asc 
SELECT A FROM B
select T1.Flavor,T2.Item from goods as T1 join items as T2 on T1.Id = T2.Item order by T1.Flavor asc 
select T2.Item from goods as T1 join items as T2 on T1.Id = T2.Item where T1.Flavor > 'Chocolate'
select Item from items group by Item having count(*) <= '10'
SELECT A FROM B
select T1.Flavor from goods as T1 join items as T2 on T1.Id = T2.Item where T2.Item != '20-CA-7.5'
select count(T2.Item) from goods as T1 join items as T2 on T1.Id = T2.Item group by T1.Id order by count(*) desc limit 1
select count(*) from receipts group by Date order by count(*) asc limit 1
select CustomerId from receipts where ReceiptNumber > '150'
select CustomerId from receipts group by CustomerId having count(*) > '150'
select CustomerId from receipts group by CustomerId having count(*) >= '5'
select T2.CustomerId,T1.Id from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId group by T2.CustomerId having count(*) > '5'
select T1.LastName from customers as T1 join receipts as T2 on T1.Id = T2.CustomerId join items as T3 on T2.ReceiptNumber = T3.Receipt join goods as T4 on T3.Item = T4.Id where T4.Price > '100' and T2.ReceiptNumber > '100'
select T3.Date from goods as T1 join items as T2 on T1.Id = T2.Item join receipts as T3 on T2.Receipt = T3.ReceiptNumber where T1.Price > '100'
select count(*) from country
select count(*) from country
select count(*),Winnings from driver where Laps > '150' group by Driver
select count(*),Winnings from driver where Laps > '150' group by Driver
select avg(Age),Make from driver group by Make
select avg(Age),Make from driver group by Make
select avg(Laps) from driver where Age < '20'
select avg(Laps) from driver where Age = '20'
SELECT A FROM B
select Manager,Sponsor from team order by Car_Owner asc 
select Make from team group by Team having count(*) > '1'
select Make from team group by Team having count(*) > '1'
select T3.Make from team as T1 join team_driver as T2 on T1.Team_ID = T2.Team_ID join driver as T3 on T2.Driver_ID = T3.Driver_ID where T1.Car_Owner = 'Buddy Arrington'
select T3.Make from team as T1 join team_driver as T2 on T1.Team_ID = T2.Team_ID join driver as T3 on T2.Driver_ID = T3.Driver_ID where T1.Car_Owner = 'Buddy Arrington'
select max(Points),min(Points) from driver
select T2.Points,T1.Regoin from country as T1 join driver as T2 on T1.Country_Id = T2.Country order by T2.Age desc limit 1
select count(*) from driver where Laps > '150'
select count(*) from driver where Points > '150'
select Driver from driver order by Age asc 
select Driver from driver order by Age asc 
select Driver from driver order by Points desc 
select Driver from driver order by Points desc 
select T2.Driver,T1.Country from country as T1 join driver as T2 on T1.Country_Id = T2.Country
select Driver,Points from driver
select max(T2.Points) from country as T1 join driver as T2 on T1.Country_Id = T2.Country where T1.Capital = 'Dublin'
select T2.Points from country as T1 join driver as T2 on T1.Country_Id = T2.Country where T1.Capital = 'Dublin'
select avg(T2.Age) from country as T1 join driver as T2 on T1.Country_Id = T2.Country where T1.Official_native_language = 'English'
select avg(T2.Age) from country as T1 join driver as T2 on T1.Country_Id = T2.Country where T1.Official_native_language = 'English'
select T1.Country from country as T1 join driver as T2 on T1.Country_Id = T2.Country where T2.Points > '150'
select count(*) from driver where Points > '150'
select T1.Capital from country as T1 join driver as T2 on T1.Country_Id = T2.Country order by T2.Points desc limit 1
select T1.Country from country as T1 join driver as T2 on T1.Country_Id = T2.Country order by T2.Points desc limit 1
select count(*),Driver from driver group by Driver
select count(*),Make from driver group by Make
select Make from driver group by Driver order by count(*) desc limit 1
select Driver from driver group by Driver order by count(*) desc limit 1
select Driver from driver group by Driver having count(*) >= '3'
select Make from driver group by Driver having count(*) >= '3'
select Team from team where Team_ID not in (select Driver_ID from team_driver)
select Team from team except select Team from team
select T1.Country from country as T1 join driver as T2 on T1.Country_Id = T2.Country where T2.Driver = 'Kasey Kahne' intersect select T1.Country from country as T1 join driver as T2 on T1.Country_Id = T2.Country where T2.Driver = 'Kasey Kahne'
select T1.Country from country as T1 join driver as T2 on T1.Country_Id = T2.Country where T2.Driver = 'Kasey Kahne' intersect select T1.Country from country as T1 join driver as T2 on T1.Country_Id = T2.Country where T2.Driver = 'Mali Lu Jr. *'
select Points from driver
select Points from driver
select Country from country except select Country from country
select Country from country except select Country from country
select Manager,Sponsor from team group by Manager order by count(*) desc limit 1
select Manager,Sponsor from team group by Manager order by count(*) desc limit 1
select T1.Car_Owner,T1.Manager from team as T1 join team_driver as T2 on T1.Team_ID = T2.Team_ID join driver as T3 on T2.Driver_ID = T3.Driver_ID group by T3.Driver having count(*) >= '2'
select Team,Car_Owner from team group by Manager having count(*) >= '2'
select count(*) from institution
select count(*) from institution
select Name from institution order by Name asc 
select Name from institution order by Affiliation asc 
select Name from institution order by Founded asc 
select Name from institution order by Founded desc 
select City,Province from institution
select City,Province from institution
select min(Enrollment),max(Enrollment) from institution
select min(Enrollment),max(Enrollment) from institution
select Affiliation from institution where City != 'Vancouver'
select Affiliation from institution where City != 'Vancouver'
select Stadium from institution order by Capacity desc 
select Stadium from institution order by Capacity desc 
select Stadium from institution where Enrollment = (select max(Enrollment) from institution)
select Stadium from institution order by Enrollment desc limit 1
select T1.Name,T2.Nickname from institution as T1 join Championship as T2 on T1.Institution_ID = T2.Institution_ID
select Name,Affiliation from institution
select T2.Nickname from institution as T1 join Championship as T2 on T1.Institution_ID = T2.Institution_ID order by T1.Enrollment asc limit 1
select T2.Nickname from institution as T1 join Championship as T2 on T1.Institution_ID = T2.Institution_ID order by T1.Enrollment asc limit 1
select T1.Name from institution as T1 join Championship as T2 on T1.Institution_ID = T2.Institution_ID order by T2.Number_of_Championships desc 
select T1.Name from institution as T1 join Championship as T2 on T1.Institution_ID = T2.Institution_ID order by T2.Number_of_Championships desc 
select Name from institution group by Affiliation having count(*) >= '1'
select Name from institution group by Affiliation having count(*) >= '1'
select sum(T2.Number_of_Championships) from institution as T1 join Championship as T2 on T1.Institution_ID = T2.Institution_ID where T1.Affiliation = 'Public'
select sum(T2.Number_of_Championships) from institution as T1 join Championship as T2 on T1.Institution_ID = T2.Institution_ID where T1.Affiliation = 'Public'
select count(*),Affiliation from institution group by Affiliation
select count(*),Affiliation from institution group by Affiliation
select Affiliation from institution group by Affiliation order by count(*) desc limit 1
select Affiliation from institution group by Affiliation order by count(*) desc limit 1
select Enrollment from institution group by Founded having count(*) > '1'
select Founded,Endowment from institution group by Province having count(*) > '1'
select T2.Nickname from institution as T1 join Championship as T2 on T1.Institution_ID = T2.Institution_ID order by T1.Capacity desc 
select Name from institution order by Endowment desc 
select Enrollment from institution where City = 'Vancouver' and City > 'Vancouver'
select Affiliation from institution where City = 'Vancouver'
select Province from institution where Founded > '1950' intersect select Province from institution where Founded < '1950'
select Province from institution where Founded > '1950'
select count(Province) from institution
select count(Affiliation) from institution
select Location from Warehouses
select * from Warehouses
select T2.Contents from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T1.Location = 'New York'
SELECT A FROM B
select Contents from Boxes where Value > '150'
select Contents from Boxes where Value > '150'
select Code,avg(Warehouse) from Boxes group by Code
select avg(Value),avg(Warehouse) from Boxes group by Warehouse
select avg(T1.Capacity),sum(T1.Capacity),avg(T2.Value) from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse
select avg(Capacity),sum(Capacity) from Warehouses
select avg(Capacity),sum(Capacity) from Warehouses
select avg(Capacity),sum(Capacity) from Warehouses
select avg(T2.Value),max(T2.Value),max(T1.Capacity) from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse group by T2.Contents
select avg(Value),max(Value),Code from Boxes group by Code
select T1.Location from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse order by T2.Value desc limit 1
select Contents from Boxes order by Value desc limit 1
select avg(Value) from Boxes
select avg(Value) from Boxes
select Contents from Boxes
select Contents from Boxes
select count(Contents) from Boxes
select count(*) from Warehouses
select Location from Warehouses
select Location from Warehouses
select T2.Code from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T1.Location = 'Chicago' and T1.Location > 'Chicago'
select T2.Code from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T1.Location = 'Chicago' union select T2.Code from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T1.Location = 'Chicago'
select sum(T2.Value) from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T1.Location = 'Chicago' and T1.Location >= 'Chicago'
select sum(T2.Value) from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T1.Location = 'Chicago' and T1.Location >= 'Chicago'
SELECT A FROM B
SELECT A FROM B
select T2.Code from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T1.Location != 'New York'
select T2.Code from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T1.Location != 'New York'
select T1.Location from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T2.Contents = 'Rocks' except select T1.Location from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T2.Contents = 'Rocks'
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select Location from Warehouses where Location = (select Location from Warehouses group by Location) and Location in ()
select T1.Location from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T2.Contents = 'Rocks'
select T2.Code,T1.Location from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse order by T2.Value asc 
select T2.Code,T1.Code from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse order by T2.Value asc 
select Code,Contents from Boxes order by Value asc limit 1
select Code,Contents from Boxes order by Value asc limit 1
select Contents from Boxes where Value > (select avg(Value) from Boxes)
select Contents from Boxes where Value > (select avg(Value) from Boxes)
select T2.Code from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse order by T1.Location asc 
select Contents from Boxes order by Contents asc 
select Code from Boxes where Value > (select min(Value) from Boxes)
select Code from Boxes where Value > (select min(Value) from Boxes)
select Code,Contents from Boxes where Value > (select min(Contents) from Boxes)
SELECT A FROM B
select sum(T2.Value) from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse order by T1.Capacity desc limit 1
select sum(T2.Value) from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse order by T1.Capacity desc limit 1
select Code,avg(Value) from Boxes group by Code having avg(Value) > '150'
select avg(T2.Value),avg(T1.Capacity) from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T2.Value > '150' group by T1.Location having count(*) >= '150'
select count(*),sum(Value) from Boxes group by Code
select count(*),sum(T2.Warehouse) from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse group by T1.Location
select avg(Capacity),sum(Capacity),max(Capacity),Location from Warehouses group by Location
select Location,sum(Capacity),max(Capacity) from Warehouses group by Location
select sum(Capacity) from Warehouses
select sum(Capacity) from Warehouses
select T1.Location,max(T2.Value) from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse group by T1.Location
select T1.Location,T2.Warehouse from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse order by T2.Value desc limit 1
select count(*),count(Warehouse) from Boxes group by Warehouse
select count(*),sum(T2.Warehouse) from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse group by T1.Code
select count(Location) from Warehouses
select count(Warehouse) from Boxes
select T2.Code,count(*),T1.Location from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse
select T1.Location,T2.Code from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse
select T2.Code from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T1.Location = 'Chicago'
select T2.Code from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse where T1.Location = 'Chicago'
select count(*),Location from Warehouses group by Location
select count(*),T2.Warehouse from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse group by T1.Location
select count(T1.Location),T2.Code from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse group by T1.Location
select count(T2.Contents),T2.Code from Warehouses as T1 join Boxes as T2 on T1.Code = T2.Warehouse group by T1.Location
select Code from Boxes
SELECT A FROM B
select sum(Capacity) from Warehouses where Location != 'Chicago'
select sum(Capacity) from Warehouses where Location = 'Chicago'
select City,State,University_Name from university order by Affiliation asc 
select City,State,Affiliation from university order by * asc 
SELECT A FROM B
SELECT A FROM B
select avg(Enrollment),max(Enrollment),min(Enrollment) from university
select avg(Enrollment),max(Enrollment),min(Enrollment) from university
select Team_Name from university where Enrollment > (select avg(Enrollment) from university)
select Team_Name from university where Enrollment > (select avg(Enrollment) from university)
select Home_Conference from university
select Home_Conference from university
select count(*),Home_Conference from university group by Home_Conference
select Home_Conference,count(*) from university group by Home_Conference
select State from university group by State order by count(*) desc limit 1
select State from university group by State order by count(*) desc limit 1
select Home_Conference from university group by Home_Conference having count(*) >= '2000'
select Home_Conference from university group by Home_Conference having avg(Enrollment) >= '2000'
select Home_Conference from university group by Home_Conference order by count(*) asc limit 1
select Home_Conference from university group by Home_Conference order by count(*) asc limit 1
SELECT A FROM B
select T3.Major_Name,T1.University_Name from university as T1 join major_ranking as T2 on T1.University_ID = T2.University_ID join major as T3 on T2.Major_ID = T3.Major_ID order by T3.Major_Code desc 
SELECT A FROM B
SELECT A FROM B
select T1.City,T1.State,T1.Affiliation from university as T1 join major_ranking as T2 on T1.University_ID = T2.University_ID where T2.Rank = '1'
select T1.State,T1.City,T1.University_Name from university as T1 join major_ranking as T2 on T1.University_ID = T2.University_ID where T2.Rank = '1'
select University_Name from university group by University_Name order by count(*) desc limit 1
select T1.University_Name from university as T1 join major_ranking as T2 on T1.University_ID = T2.University_ID order by T2.Rank desc limit 1
select T1.University_Name from university as T1 join major_ranking as T2 on T1.University_ID = T2.University_ID where T2.Rank = '1' except select University_Name from university
select T1.University_Name from university as T1 join major_ranking as T2 on T1.University_ID = T2.University_ID join major as T3 on T2.Major_ID = T3.Major_ID where T3.Major_ID = '1'
select T1.University_Name from university as T1 join major_ranking as T2 on T1.University_ID = T2.University_ID join major as T3 on T2.Major_ID = T3.Major_ID where T3.Major_Name = 'Accounting' intersect select T1.University_Name from university as T1 join major_ranking as T2 on T1.University_ID = T2.University_ID join major as T3 on T2.Major_ID = T3.Major_ID where T3.Major_Name = 'Accounting'
SELECT A FROM B
SELECT A FROM B
select University_Name,Affiliation from university where State = 'Wisconsin'
select T1.University_Name from university as T1 join overall_ranking as T2 on T1.University_ID = T2.University_ID order by T2.Total desc limit 1
select University_Name from university group by University_Name order by count(*) desc limit 1
select T1.University_Name from university as T1 join overall_ranking as T2 on T1.University_ID = T2.University_ID order by T2.Reputation_point asc 
select T1.University_Name from university as T1 join overall_ranking as T2 on T1.University_ID = T2.University_ID order by T2.Reputation_point desc 
SELECT A FROM B
select T1.University_Name from university as T1 join major_ranking as T2 on T1.University_ID = T2.University_ID where T2.Rank = '3' and T2.Rank > '3'
select sum(T1.Enrollment) from university as T1 join overall_ranking as T2 on T1.University_ID = T2.University_ID where T2.Rank > '5' and T2.Rank < '5'
select sum(T1.Enrollment) from university as T1 join overall_ranking as T2 on T1.University_ID = T2.University_ID where T2.Rank > '5' and T2.Rank < '5'
select T2.Citation_point,T1.University_Name from university as T1 join overall_ranking as T2 on T1.University_ID = T2.University_ID where T2.Reputation_point between '0' and '3' and T2.Research_point between '0' and '3'
select T2.Citation_point,T1.University_Name from university as T1 join overall_ranking as T2 on T1.University_ID = T2.University_ID order by T2.Reputation_point asc limit 1
select State from university where Enrollment > '3000' group by State having count(*) > '3000'
select State from university where Enrollment > '3000' group by State having count(*) > '3000'
SELECT A FROM B
select Title from Movies where Code not in (select Title from Movies)
SELECT A FROM B
select Title from Movies where Rating = 'PG'
select T1.Title from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie where T2.Name = 'Odeon'
select T1.Title from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie where T2.Name = 'Odeon'
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select count(Title) from Movies where Rating = 'PG'
select Title from Movies
SELECT A FROM B
select count(Title) from Movies
select count(Title) from Movies
select count(Movie) from MovieTheaters
select count(Movie) from MovieTheaters
SELECT A FROM B
select T1.Rating from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie where T2.Name like '%%'
SELECT A FROM B
SELECT A FROM B
select T1.Title from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie where T2.Name = 'Odeon' and T2.Name > 'Imperial'
select T1.Title from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie where T2.Name = 'Odeon' and T2.Name > 'Imperial'
select T1.Title from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie where T2.Name = 'Odeon' intersect select T1.Title from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie where T2.Name = 'Imperial'
select Movie from MovieTheaters where Name = (select Name from MovieTheaters where Name = 'Odeon' and Name > 'Imperial') and Name in (Odeon,Imperial)
select T1.Title from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie where T2.Name != 'Odeon'
select T1.Title from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie where T2.Name != 'Odeon'
select T1.Title from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie order by T2.Movie asc 
select T2.Name from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie order by T1.Title asc 
select Title from Movies order by Rating asc 
select Title from Movies order by Rating asc 
select Name from MovieTheaters group by Name order by count(*) desc limit 1
select Name from MovieTheaters where Code = (select max(Movie) from MovieTheaters group by Movie order by count(*) desc limit 1)
select T2.Name,T1.Title from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie group by T2.Movie order by count(*) desc limit 1
select Name from MovieTheaters order by Movie desc limit 1
select Title,Rating from Movies group by Rating
select Rating,Title from Movies group by Rating
SELECT A FROM B
SELECT A FROM B
select Name from MovieTheaters where Movie >= '1'
select Name from MovieTheaters group by Name having count(*) >= '1'
select Name from MovieTheaters where Movie > (select min(Movie) from MovieTheaters)
select Name from MovieTheaters where Movie > (select min(Code) from MovieTheaters)
SELECT A FROM B
select T2.Name from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie where T1.Rating = 'PG'
select Title from Movies
select Title from Movies
select Rating from Movies
select Rating from Movies
select * from Movies
select Title from Movies
select T1.Title from Movies as T1 join MovieTheaters as T2 on T1.Code = T2.Movie where T2.Movie > (select min(Code) from MovieTheaters)
select Title from Movies where Code not in (select Code from MovieTheaters)
select Shipment from Package order by Weight asc limit 1
select T1.Name from Client as T1 join Package as T2 on T1.AccountNumber = T2.Recipient order by T2.Weight asc limit 1
select sum(T2.Weight) from Client as T1 join Package as T2 on T1.AccountNumber = T2.Recipient where T1.Name = 'Leo Wong'
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select Position,Salary from Employee where Name = 'Turanga Leela'
select avg(Salary) from Employee
select avg(Salary) from Employee
SELECT A FROM B
select Level from Has_Clearance
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select T3.Contents from Employee as T1 join Shipment as T2 on T1.EmployeeID = T2.Manager join Package as T3 on T2.ShipmentID = T3.Shipment join Client as T4 on T3.Recipient = T4.AccountNumber where T4.Name = 'Leo Wong' and T1.Name = 'Amy Wong'
select T3.Contents from Employee as T1 join Shipment as T2 on T1.EmployeeID = T2.Manager join Package as T3 on T2.ShipmentID = T3.Shipment join Client as T4 on T3.Recipient = T4.AccountNumber where T4.Name = 'Leo Wong' and T1.Name = 'Amy Wong'
select T2.Sender from Client as T1 join Package as T2 on T1.AccountNumber = T2.Recipient where T1.Name = 'Leo Wong' and T1.Name like 'Leo Wong'
select count(T3.Recipient) from Employee as T1 join Shipment as T2 on T1.EmployeeID = T2.Manager join Package as T3 on T2.ShipmentID = T3.Shipment join Client as T4 on T3.Recipient = T4.AccountNumber where T4.Name = 'Ogden Wernstrom' and T1.Name = 'Amy Wong'
select count(T3.Sender) from Employee as T1 join Shipment as T2 on T1.EmployeeID = T2.Manager join Package as T3 on T2.ShipmentID = T3.Shipment join Client as T4 on T3.Recipient = T4.AccountNumber where T4.Name = 'Ogden Wernstrom' and T1.Name = 'Amy Wong'
select T2.Contents from Client as T1 join Package as T2 on T1.AccountNumber = T2.Recipient where T1.Name = 'John Zoidberg'
select T2.Contents from Client as T1 join Package as T2 on T1.AccountNumber = T2.Recipient where T1.Name = 'John Zoidberg'
SELECT A FROM B
SELECT A FROM B
select T4.Weight,T4.Shipment from Has_Clearance as T1 join Employee as T2 on T1.Employee = T2.EmployeeID join Shipment as T3 on T2.EmployeeID = T3.Manager join Package as T4 on T3.ShipmentID = T4.Shipment order by T1.Planet asc limit 1
select T4.Weight,T4.Shipment from Has_Clearance as T1 join Employee as T2 on T1.Employee = T2.EmployeeID join Shipment as T3 on T2.EmployeeID = T3.Manager join Package as T4 on T3.ShipmentID = T4.Shipment order by T1.Planet asc limit 1
select count(*),T4.Name from Planet as T1 join Shipment as T2 on T1.PlanetID = T2.Planet join Package as T3 on T2.ShipmentID = T3.Shipment join Client as T4 on T3.Recipient = T4.AccountNumber group by T1.PlanetID order by count(*) desc limit 1
select count(*),Name from Client group by Name order by count(*) desc limit 1
select T6.Name,T3.Name from Employee as T1 join Has_Clearance as T2 on T1.EmployeeID = T2.Employee join Planet as T3 on T2.Planet = T3.PlanetID join Shipment as T4 on T1.EmployeeID = T4.Manager join Package as T5 on T4.ShipmentID = T5.Shipment join Client as T6 on T5.Recipient = T6.AccountNumber group by T1.EmployeeID order by count(*) asc limit 1
select min(Recipient),count(*) from Package group by Contents order by count(*) asc limit 1
select Name from Client group by Name having count(*) > '1'
select T4.Name from Employee as T1 join Shipment as T2 on T1.EmployeeID = T2.Manager join Package as T3 on T2.ShipmentID = T3.Shipment join Client as T4 on T3.Recipient = T4.AccountNumber group by T1.EmployeeID having count(*) > '1'
select T2.Planet from Planet as T1 join Shipment as T2 on T1.PlanetID = T2.Planet where T1.Name = 'Mars'
select Coordinates from Planet where Name = 'Mars'
select T1.Name,T4.Name from Employee as T1 join Shipment as T2 on T1.EmployeeID = T2.Manager join Package as T3 on T2.ShipmentID = T3.Shipment join Client as T4 on T3.Recipient = T4.AccountNumber order by T1.Name asc 
select T1.Name,T4.Name from Employee as T1 join Shipment as T2 on T1.EmployeeID = T2.Manager join Package as T3 on T2.ShipmentID = T3.Shipment join Client as T4 on T3.Recipient = T4.AccountNumber order by T1.Name asc 
SELECT A FROM B
SELECT A FROM B
select Date from Shipment
select Date from Shipment
select T2.ShipmentID from Planet as T1 join Shipment as T2 on T1.PlanetID = T2.Planet where T1.Name = 'Mars'
select T2.ShipmentID from Planet as T1 join Shipment as T2 on T1.PlanetID = T2.Planet where T1.Name = 'Mars'
select T2.ShipmentID,T1.PlanetID from Planet as T1 join Shipment as T2 on T1.PlanetID = T2.Planet where T1.Name = 'Mars' and T1.Name > 'Mars'
select T2.ShipmentID from Planet as T1 join Shipment as T2 on T1.PlanetID = T2.Planet where T1.Name = 'Mars'
select T2.ShipmentID from Planet as T1 join Shipment as T2 on T1.PlanetID = T2.Planet where T1.Name = 'Mars' union select T2.ShipmentID from Planet as T1 join Shipment as T2 on T1.PlanetID = T2.Planet where T1.Name = 'Mars'
select PlanetID from Planet where Name = 'Mars'
select T1.Name,T4.Name from Planet as T1 join Shipment as T2 on T1.PlanetID = T2.Planet join Package as T3 on T2.ShipmentID = T3.Shipment join Client as T4 on T3.Recipient = T4.AccountNumber group by T1.Name
select count(*),Name from Planet group by Name
select Name from Planet group by Name order by count(*) desc limit 1
select Name from Planet group by Name order by count(*) desc limit 1
select count(*),T1.Name from Planet as T1 join Shipment as T2 on T1.PlanetID = T2.Planet where T2.ShipmentID in (select max(Employee) from Has_Clearance group by Employee)
select T1.Name,T4.Name from Employee as T1 join Shipment as T2 on T1.EmployeeID = T2.Manager join Package as T3 on T2.ShipmentID = T3.Shipment join Client as T4 on T3.Recipient = T4.AccountNumber
SELECT A FROM B
select sum(Weight) from Package
select sum(T4.Weight),sum(T3.Level) from Shipment as T1 join Employee as T2 on T1.Manager = T2.EmployeeID join Has_Clearance as T3 on T2.EmployeeID = T3.Employee join Package as T4 on T1.ShipmentID = T4.Shipment group by T1.Planet
select sum(T2.Weight),sum(T1.Planet) from Shipment as T1 join Package as T2 on T1.ShipmentID = T2.Shipment group by T1.Planet
select Weight from Package where Weight > '30'
select T1.Name from Planet as T1 join Shipment as T2 on T1.PlanetID = T2.Planet join Package as T3 on T2.ShipmentID = T3.Shipment where T3.Weight > '30'
select T5.Contents from Employee as T1 join Has_Clearance as T2 on T1.EmployeeID = T2.Employee join Planet as T3 on T2.Planet = T3.PlanetID join Shipment as T4 on T1.EmployeeID = T4.Manager join Package as T5 on T4.ShipmentID = T5.Shipment where T3.Name = 'Omicron Persei 8' and T1.Name = 'Phillip J. Fry'
SELECT A FROM B
select count(T5.Contents) from Employee as T1 join Has_Clearance as T2 on T1.EmployeeID = T2.Employee join Planet as T3 on T2.Planet = T3.PlanetID join Shipment as T4 on T1.EmployeeID = T4.Manager join Package as T5 on T4.ShipmentID = T5.Shipment where T3.Name = 'Omicron Persei 8' and T3.Name > 'Omicron Persei 8' and T1.Name = 'Phillip J. Fry'
SELECT A FROM B
select Weight,PackageNumber from Package where Weight between '10' and '30'
select Shipment,PackageNumber from Package where Weight between '10' and '30'
select Name from Employee where Name = 'Phillip J. Fry' except select Name from Employee where Name = 'Phillip J. Fry'
select Name from Employee where EmployeeID not in (select T2.Employee from Employee as T1 join Has_Clearance as T2 on T1.EmployeeID = T2.Employee where T1.Position = 'Intern')
select Name from Employee where Name = 'Phillip J. Fry'
SELECT A FROM B
select Name from Planet group by Name having count(*) = '1'
select Name from Employee group by EmployeeID having count(*) = '1'
select Name from Employee where Salary between '5000' and '10000'
select Name from Employee where Salary between '5000' and '10000'
select T1.Name from Employee as T1 join Has_Clearance as T2 on T1.EmployeeID = T2.Employee group by T2.Employee having avg(T1.Salary) > '5000'
select Name from Employee where Salary > '5000'
select count(*) from Has_Clearance where Employee not in (select EmployeeID from Employee)
select count(*) from Has_Clearance where Employee not in (select EmployeeID from Employee)
select count(*) from platform
select count(*) from platform
select Release_Date,Franchise from game order by Units_sold_Millions desc 
select Developers,Title from game order by Units_sold_Millions desc 
SELECT A FROM B
select avg(T2.Units_sold_Millions) from platform as T1 join game as T2 on T1.Platform_ID = T2.Platform_ID where T1.Platform_name = 'Nintendo 64'
select T1.Market_district,T4.Player_name from platform as T1 join game as T2 on T1.Platform_ID = T2.Platform_ID join game_player as T3 on T2.Game_ID = T3.Game_ID join player as T4 on T3.Player_ID = T4.Player_ID
select Market_district,Platform_name from platform
select T1.Platform_ID,T2.Platform_ID from platform as T1 join game as T2 on T1.Platform_ID = T2.Platform_ID where T1.Download_rank = '1'
select T2.Title,T1.Platform_ID from platform as T1 join game as T2 on T1.Platform_ID = T2.Platform_ID where T1.Download_rank = '1'
select min(Download_rank),max(Download_rank) from platform
select min(Download_rank),max(Download_rank) from platform
select count(*) from platform group by Download_rank having count(*) < '3'
select count(*) from player where Rank_of_the_year = '3'
select Player_name from player order by Player_name asc 
select Player_name from player order by Player_name asc 
select College,Player_name from player order by Rank_of_the_year desc 
select College,Player_name from player order by Rank_of_the_year desc 
select T4.Player_name,T1.Platform_name from platform as T1 join game as T2 on T1.Platform_ID = T2.Platform_ID join game_player as T3 on T2.Game_ID = T3.Game_ID join player as T4 on T3.Player_ID = T4.Player_ID where T2.Title = 'Super Mario World'
select T4.Player_name,T1.Platform_name from platform as T1 join game as T2 on T1.Platform_ID = T2.Platform_ID join game_player as T3 on T2.Game_ID = T3.Game_ID join player as T4 on T3.Player_ID = T4.Player_ID where T2.Title = 'Super Mario World'
select T1.Developers from game as T1 join game_player as T2 on T1.Game_ID = T2.Game_ID join player as T3 on T2.Player_ID = T3.Player_ID where T3.College = 'Auburn'
select T1.Developers from game as T1 join game_player as T2 on T1.Game_ID = T2.Game_ID join player as T3 on T2.Player_ID = T3.Player_ID where T3.College = 'Auburn'
select avg(T1.Units_sold_Millions) from game as T1 join game_player as T2 on T1.Game_ID = T2.Game_ID join player as T3 on T2.Player_ID = T3.Player_ID where T3.Position = 'Guard'
select avg(T1.Units_sold_Millions) from game as T1 join game_player as T2 on T1.Game_ID = T2.Game_ID join player as T3 on T2.Player_ID = T3.Player_ID where T3.Position = 'Guard'
select T2.Title,T1.Platform_name from platform as T1 join game as T2 on T1.Platform_ID = T2.Platform_ID
select Title,Franchise from game
SELECT A FROM B
select T2.Title from platform as T1 join game as T2 on T1.Platform_ID = T2.Platform_ID where T1.Market_district = 'Asia' and T1.Market_district > 'USA'
select Franchise,count(*) from game group by Franchise
select count(*),Franchise from game group by Franchise
select Franchise from game group by Franchise order by count(*) desc limit 1
select Franchise from game group by Franchise order by count(*) desc limit 1
select Franchise from game group by Franchise having count(*) >= '2'
select Franchise from game group by Franchise having count(*) >= '2'
select Player_name from player where Player_ID not in (select Player_ID from game_player)
select Player_name from player except select Player_name from player
SELECT A FROM B
SELECT A FROM B
select Franchise from game
select Franchise from game
select T1.Title from game as T1 join game_player as T2 on T1.Game_ID = T2.Game_ID join player as T3 on T2.Player_ID = T3.Player_ID where T3.Position != 'Guard'
select T1.Title from game as T1 join game_player as T2 on T1.Game_ID = T2.Game_ID join player as T3 on T2.Player_ID = T3.Player_ID where T3.Position != 'Guard'
select T1.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID join press as T3 on T2.Press_ID = T3.Press_ID order by T3.Month_Profits_billion desc 
select Month_Profits_billion,Year_Profits_billion from press order by Month_Profits_billion desc 
select T1.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID join press as T3 on T2.Press_ID = T3.Press_ID group by T1.Name,T3.Name having count(*) > '1000000000'
select Name from press where Year_Profits_billion > '1000000000'
select avg(Year_Profits_billion),max(Year_Profits_billion) from press
select avg(Year_Profits_billion),max(Year_Profits_billion),max(Month_Profits_billion),avg(Month_Profits_billion) from press group by Month_Profits_billion
select T1.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID join press as T3 on T2.Press_ID = T3.Press_ID where T3.Year_Profits_billion = (select max(Month_Profits_billion) from press)
select Name from press order by Month_Profits_billion desc limit 1
select T1.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID join press as T3 on T2.Press_ID = T3.Press_ID order by T3.Month_Profits_billion desc limit 1
select Name from press order by Year_Profits_billion desc limit 1
select count(*) from author where Age < '30'
select count(*) from author where Age < '30'
select Gender,avg(Age) from author group by Gender
select Gender,avg(Age) from author group by Gender
select count(*),Gender from author where Age > '30' group by Gender
select count(*),Gender from author where Age > '30' group by Gender
select Title from book order by Release_date desc 
select Release_date,Title from book order by Release_date desc 
select count(*),Book_Series from book group by Book_Series
select Book_Series,count(*) from book
select Title,Book_Series from book order by Book_Series desc limit 1
select Title,Release_date from book where Release_date = '2016-01-05' order by Release_date desc limit 1
select T2.Book_Series from press as T1 join book as T2 on T1.Press_ID = T2.Press_ID where T1.Year_Profits_billion > '1000'
SELECT A FROM B
select T1.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID where T2.Book_Series = 'MM' intersect select T1.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID where T2.Book_Series = 'LT'
select T1.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID where T2.Book_Series = 'MM' intersect select T1.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID where T2.Book_Series = 'LT'
select T1.Age,T1.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID join press as T3 on T2.Press_ID = T3.Press_ID where T3.Name not in (select Author_ID from book)
SELECT A FROM B
select Name from author group by Name having count(*) > '1'
select T1.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID group by T1.Name having count(T2.Press_ID) > '1'
select T1.Name,T2.Title,T3.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID join press as T3 on T2.Press_ID = T3.Press_ID order by T1.Age desc limit 1
select T1.Name,T2.Title,T3.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID join press as T3 on T2.Press_ID = T3.Press_ID order by T2.Release_date asc limit 1
select T1.Name,sum(T2.Sale_Amount) from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID group by T2.Book_ID
select T1.Name,sum(T2.Sale_Amount) from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID group by T2.Author_ID
SELECT A FROM B
SELECT A FROM B
select T1.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID order by T2.Book_Series asc limit 1
select Name from author order by Name asc limit 1
select Gender,Name from author group by Name order by count(*) desc limit 1
select Gender,Name from author group by Gender order by count(*) desc limit 1
select T1.Name from author as T1 join book as T2 on T1.Author_ID = T2.Author_ID where T2.Release_date != '2016-01-05'
select Name from author where Name != 'Derrick Kosinski'
select Year_Profits_billion,Month_Profits_billion from press group by Year_Profits_billion having count(*) > '1000000000'
select Month_Profits_billion,Year_Profits_billion,Name from press group by Month_Profits_billion order by count(*) asc  having count(*) > '1000000000'
select count(*) from Staff
select author_name from Authors
select T1.author_name,T2.author_name from Authors as T1 join Documents as T2 on T1.author_name = T2.author_name
select other_details from Authors where author_name = 'Addison Denesik'
select count(*) from Staff
select T1.author_name from Authors as T1 join Documents as T2 on T1.author_name = T2.author_name where T2.document_id = '4'
select T1.author_name from Authors as T1 join Documents as T2 on T1.author_name = T2.author_name where T2.document_name = 'Travel to Brazil'
select count(*) from Authors where author_name = 'Era Kerluke'
select document_description,document_name from Documents
select T3.process_id,T1.author_name from Authors as T1 join Documents as T2 on T1.author_name = T2.author_name join Documents_Processes as T3 on T2.document_id = T3.document_id where T1.author_name = 'Bianka Cummings'
select T1.author_name,T2.author_name from Authors as T1 join Documents as T2 on T1.author_name = T2.author_name where T2.document_name = 'Travel to Brazil'
select count(*),staff_details from Staff group by staff_details
select T1.author_name from Authors as T1 join Documents as T2 on T1.author_name = T2.author_name group by T2.author_name order by count(*) desc limit 1
select T1.author_name from Authors as T1 join Documents as T2 on T1.author_name = T2.author_name group by T2.author_name having count(*) >= '2'
select count(*) from Staff
SELECT A FROM B
select T1.process_name from Business_Processes as T1 join Documents_Processes as T2 on T1.process_id = T2.process_id where T2.process_id = '9'
select count(*) from Staff
select process_outcome_description,process_outcome_code from Process_Outcomes
select process_outcome_description from Process_Outcomes order by process_outcome_code asc limit 1
select count(*) from Staff
select T1.process_status_code,T2.process_status_code from Process_Status as T1 join Documents_Processes as T2 on T1.process_status_code = T2.process_status_code
select T3.document_description from Process_Status as T1 join Documents_Processes as T2 on T1.process_status_code = T2.process_status_code join Documents as T3 on T2.document_id = T3.document_id where T1.process_status_code = 'ct'
select count(*) from Staff
select T1.staff_id,T2.staff_id from Staff as T1 join Staff_in_Processes as T2 on T1.staff_id = T2.staff_id
select staff_details from Staff where staff_id = '100'
select count(*) from Staff
select T2.staff_role_code,T1.staff_role_code from Staff_in_Processes as T1 join Ref_Staff_Roles as T2 on T1.staff_role_code = T2.staff_role_code
select staff_role_description from Ref_Staff_Roles where staff_role_code = 'HR'
select count(*) from Staff
select process_id from Documents_Processes
select document_id from Documents except select document_id from Documents
select document_id from Documents_Processes except select document_id from Documents_Processes
select T1.process_outcome_description,T1.process_outcome_code,T3.process_status_description from Process_Outcomes as T1 join Documents_Processes as T2 on T1.process_outcome_code = T2.process_outcome_code join Process_Status as T3 on T2.process_status_code = T3.process_status_code join Business_Processes as T4 on T2.process_id = T4.process_id where T4.process_name = 'process'
select T3.process_name from Documents as T1 join Documents_Processes as T2 on T1.document_id = T2.document_id join Business_Processes as T3 on T2.process_id = T3.process_id where T1.document_name = 'Travel to Brazil'
select count(*),document_id from Documents group by document_id
select count(*),T1.staff_details from Staff as T1 join Staff_in_Processes as T2 on T1.staff_id = T2.staff_id join Documents_Processes as T3 on T2.document_id = T3.document_id where T3.process_id = '9'
select count(*),staff_id from Staff_in_Processes group by staff_id
select count(*),T2.staff_role_code from Staff_in_Processes as T1 join Ref_Staff_Roles as T2 on T1.staff_role_code = T2.staff_role_code group by T1.staff_role_code
select count(T3.staff_role_code) from Staff as T1 join Staff_in_Processes as T2 on T1.staff_id = T2.staff_id join Ref_Staff_Roles as T3 on T2.staff_role_code = T3.staff_role_code where T1.staff_id = '3'
select count(*) from Agencies
select count(*) from Agencies
select T3.meeting_id,T1.agency_details from Agencies as T1 join Clients as T2 on T1.agency_id = T2.agency_id join Meetings as T3 on T2.client_id = T3.client_id
select agency_details,agency_id from Agencies
select count(*) from Agencies
select count(*) from Agencies
select T2.client_id,T1.client_id from Clients as T1 join Invoices as T2 on T1.client_id = T2.client_id
select T2.client_id,T1.client_id from Clients as T1 join Invoices as T2 on T1.client_id = T2.client_id
select count(*),staff_id from Staff_in_Meetings group by staff_id
select count(*),staff_id from Staff_in_Meetings group by staff_id
select T2.staff_id,T1.agency_id from Staff as T1 join Staff_in_Meetings as T2 on T1.staff_id = T2.staff_id group by T2.staff_id order by count(*) desc limit 1
select T1.agency_id,T5.agency_id from Agencies as T1 join Clients as T2 on T1.agency_id = T2.agency_id join Meetings as T3 on T2.client_id = T3.client_id join Staff_in_Meetings as T4 on T3.meeting_id = T4.meeting_id join Staff as T5 on T4.staff_id = T5.staff_id group by T5.agency_id order by count(*) desc limit 1
select T2.meeting_id,T1.agency_id from Clients as T1 join Meetings as T2 on T1.client_id = T2.client_id group by T1.client_id having count(*) >= '2'
select T1.agency_id,T2.agency_id from Agencies as T1 join Clients as T2 on T1.agency_id = T2.agency_id group by T2.agency_id having count(T2.client_id) >= '2'
select client_details from Clients where client_details = 'Mac'
select client_details from Clients where client_details = 'Mac'
select T2.invoice_details,T1.client_details from Clients as T1 join Invoices as T2 on T1.client_id = T2.client_id
select T1.client_details,T2.invoice_details from Clients as T1 join Invoices as T2 on T1.client_id = T2.client_id group by T1.client_id
select count(*),sic_code from Clients group by sic_code
select count(*),sic_code from Clients group by sic_code
select T1.client_id,T2.client_id from Clients as T1 join Invoices as T2 on T1.client_id = T2.client_id where T1.sic_code = 'Bad'
select T1.client_details,T2.invoice_details from Clients as T1 join Invoices as T2 on T1.client_id = T2.client_id where T1.sic_code = 'Bad'
select T1.agency_id,T5.agency_id from Agencies as T1 join Clients as T2 on T1.agency_id = T2.agency_id join Meetings as T3 on T2.client_id = T3.client_id join Staff_in_Meetings as T4 on T3.meeting_id = T4.meeting_id join Staff as T5 on T4.staff_id = T5.staff_id
select agency_id,agency_details from Agencies
select agency_id from Agencies except select agency_id from Agencies
select meeting_id from Staff_in_Meetings except select agency_id from Agencies
select count(*) from Agencies
select count(*) from Agencies
select T5.invoice_status,*,T1.staff_id from Staff as T1 join Staff_in_Meetings as T2 on T1.staff_id = T2.staff_id join Meetings as T3 on T2.meeting_id = T3.meeting_id join Clients as T4 on T3.client_id = T4.client_id join Invoices as T5 on T4.client_id = T5.client_id
select invoice_id,invoice_details,client_id from Invoices
select count(*),T2.billable_yn from Clients as T1 join Meetings as T2 on T1.client_id = T2.client_id group by T1.client_id
select count(*),T2.billable_yn from Clients as T1 join Meetings as T2 on T1.client_id = T2.client_id group by T1.client_id
select T5.invoice_id,count(*) from Staff as T1 join Staff_in_Meetings as T2 on T1.staff_id = T2.staff_id join Meetings as T3 on T2.meeting_id = T3.meeting_id join Clients as T4 on T3.client_id = T4.client_id join Invoices as T5 on T4.client_id = T5.client_id group by T1.staff_id order by count(*) desc limit 1
select T2.client_id,T1.client_id from Clients as T1 join Invoices as T2 on T1.client_id = T2.client_id group by T2.client_id order by count(*) desc limit 1
select T1.client_id from Clients as T1 join Invoices as T2 on T1.client_id = T2.client_id group by T2.client_id having count(*) >= '2'
select T2.client_id from Clients as T1 join Invoices as T2 on T1.client_id = T2.client_id group by T1.client_id having count(*) >= '2'
select invoice_status,count(*) from Invoices group by invoice_status
select count(*),invoice_status from Invoices group by invoice_status
select invoice_status from Invoices group by invoice_status order by count(*) desc limit 1
select invoice_status from Invoices group by invoice_status order by count(*) desc limit 1
select T1.client_id,T2.invoice_status,T1.agency_id from Clients as T1 join Invoices as T2 on T1.client_id = T2.client_id
select T2.invoice_status,T1.client_details,T2.invoice_details from Clients as T1 join Invoices as T2 on T1.client_id = T2.client_id
select T1.invoice_details,T2.payment_details from Invoices as T1 join Payments as T2 on T1.invoice_id = T2.invoice_id
select T1.invoice_details,T3.other_details from Invoices as T1 join Clients as T2 on T1.client_id = T2.client_id join Meetings as T3 on T2.client_id = T3.client_id
select meeting_outcome,purpose_of_meeting from Meetings
select meeting_outcome,purpose_of_meeting from Meetings
select T1.invoice_id,T3.meeting_id from Invoices as T1 join Clients as T2 on T1.client_id = T2.client_id join Meetings as T3 on T2.client_id = T3.client_id where T1.invoice_status = 'Working'
select T2.invoice_id,T1.invoice_id from Invoices as T1 join Payments as T2 on T1.invoice_id = T2.invoice_id where T1.invoice_status = 'Working'
select invoice_status,invoice_id from Invoices except select T1.invoice_id,T2.payment_id from Invoices as T1 join Payments as T2 on T1.invoice_id = T2.invoice_id
SELECT A FROM B
select count(*) from Agencies
select count(*) from Agencies
select T1.invoice_id,T2.invoice_id,T2.payment_id from Invoices as T1 join Payments as T2 on T1.invoice_id = T2.invoice_id
select T4.payment_id,T1.meeting_id,T4.invoice_id from Meetings as T1 join Clients as T2 on T1.client_id = T2.client_id join Invoices as T3 on T2.client_id = T3.client_id join Payments as T4 on T3.invoice_id = T4.invoice_id
select T1.invoice_id,T2.invoice_id from Invoices as T1 join Payments as T2 on T1.invoice_id = T2.invoice_id
select invoice_status,invoice_id from Invoices
select count(*),invoice_id from Invoices group by invoice_id
select count(*),sum(billable_yn) from Meetings group by billable_yn
select T1.invoice_status,T1.invoice_id,T2.invoice_id from Invoices as T1 join Payments as T2 on T1.invoice_id = T2.invoice_id group by T1.client_id order by count(*) desc limit 1
select T1.invoice_id,T4.invoice_id,T3.meeting_id from Invoices as T1 join Clients as T2 on T1.client_id = T2.client_id join Meetings as T3 on T2.client_id = T3.client_id join Payments as T4 on T1.invoice_id = T4.invoice_id group by T1.invoice_id order by count(*) desc limit 1
select count(*) from Agencies
select count(*) from Agencies
select staff_id,meeting_id from Staff_in_Meetings group by staff_id
select staff_id,meeting_id from Staff_in_Meetings group by staff_id
select T2.agency_id,T1.agency_id from Agencies as T1 join Clients as T2 on T1.agency_id = T2.agency_id join Meetings as T3 on T2.client_id = T3.client_id join Staff_in_Meetings as T4 on T3.meeting_id = T4.meeting_id join Staff as T5 on T4.staff_id = T5.staff_id group by T5.agency_id order by count(*) desc limit 1
select T5.invoice_id,T1.staff_id from Staff as T1 join Staff_in_Meetings as T2 on T1.staff_id = T2.staff_id join Meetings as T3 on T2.meeting_id = T3.meeting_id join Clients as T4 on T3.client_id = T4.client_id join Invoices as T5 on T4.client_id = T5.client_id group by T1.agency_id order by count(*) desc limit 1
select count(*),meeting_outcome from Meetings group by meeting_outcome
select count(*),meeting_outcome from Meetings group by meeting_outcome
select count(*),T2.billable_yn from Clients as T1 join Meetings as T2 on T1.client_id = T2.client_id group by T1.client_id
select count(*),sum(T2.billable_yn) from Clients as T1 join Meetings as T2 on T1.client_id = T2.client_id group by T1.client_id
select count(*),T3.billable_yn from Invoices as T1 join Clients as T2 on T1.client_id = T2.client_id join Meetings as T3 on T2.client_id = T3.client_id group by T1.invoice_status
select count(*),meeting_type from Meetings group by meeting_type
select T2.meeting_outcome,T2.purpose_of_meeting,T1.client_details from Clients as T1 join Meetings as T2 on T1.client_id = T2.client_id
select T1.client_details,T2.purpose_of_meeting,T2.meeting_outcome,T3.meeting_id from Clients as T1 join Meetings as T2 on T1.client_id = T2.client_id join Staff_in_Meetings as T3 on T2.meeting_id = T3.meeting_id
select T2.staff_id,T1.purpose_of_meeting from Meetings as T1 join Staff_in_Meetings as T2 on T1.meeting_id = T2.meeting_id group by T2.meeting_id
select count(*),meeting_id from Staff_in_Meetings group by meeting_id
select count(*),T2.staff_id from Meetings as T1 join Staff_in_Meetings as T2 on T1.meeting_id = T2.meeting_id order by T1.purpose_of_meeting asc limit 1
select T2.staff_id from Meetings as T1 join Staff_in_Meetings as T2 on T1.meeting_id = T2.meeting_id order by T1.purpose_of_meeting asc limit 1
select count(*) from Agencies
select count(staff_id) from Staff_in_Meetings
select count(*) from Staff where staff_id not in (select agency_id from Staff)
select count(*) from Staff where staff_id not in (select agency_id from Staff)
select T4.client_details,T1.staff_details from Staff as T1 join Staff_in_Meetings as T2 on T1.staff_id = T2.staff_id join Meetings as T3 on T2.meeting_id = T3.meeting_id join Clients as T4 on T3.client_id = T4.client_id where T4.client_id not in (select client_id from Clients)
select T4.client_details,T1.staff_details from Staff as T1 join Staff_in_Meetings as T2 on T1.staff_id = T2.staff_id join Meetings as T3 on T2.meeting_id = T3.meeting_id join Clients as T4 on T3.client_id = T4.client_id
select T2.staff_id,T2.meeting_id from Meetings as T1 join Staff_in_Meetings as T2 on T1.meeting_id = T2.meeting_id where T1.purpose_of_meeting like '%%'
select staff_id,meeting_id from Staff_in_Meetings group by staff_id having count(*) >= '1'
select T6.client_id,T1.agency_id from Agencies as T1 join Clients as T2 on T1.agency_id = T2.agency_id join Meetings as T3 on T2.client_id = T3.client_id join Staff_in_Meetings as T4 on T3.meeting_id = T4.meeting_id join Staff as T5 on T4.staff_id = T5.staff_id join Invoices as T6 on T2.client_id = T6.client_id group by T5.agency_id having count(*) > '1'
select T4.client_id,T4.agency_id,T1.agency_id from Staff as T1 join Staff_in_Meetings as T2 on T1.staff_id = T2.staff_id join Meetings as T3 on T2.meeting_id = T3.meeting_id join Clients as T4 on T3.client_id = T4.client_id
select start_date_time,end_date_time,purpose_of_meeting from Meetings
select T2.meeting_id,T1.purpose_of_meeting,T2.staff_id from Meetings as T1 join Staff_in_Meetings as T2 on T1.meeting_id = T2.meeting_id
