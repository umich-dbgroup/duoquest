select count(*) from stadium
select count(*) from stadium
select Name,Country,Song_Name from singer order by Age desc 
select Country,Name,Song_Name from singer order by Age desc 
select avg(Age),min(Age),max(Age) from singer where Country = 'France'
select avg(Age),min(Age),max(Age) from singer where Age = (select max(Age) from singer)
select Song_Name,Song_release_year from singer order by Age asc limit 1
select Song_Name,Name from singer order by Age desc limit 1
select Country from singer where Age > '20'
select Country from singer where Age > '20'
select count(*),Country from singer group by Country
select count(*),Country from singer group by Country
select Song_Name from singer order by Age desc 
SELECT A FROM B
select Location,Name from stadium where Capacity between '5000' and '10000'
select T1.Location,T4.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID where T1.Capacity between '5000' and '10000'
select max(Capacity),avg(Capacity) from stadium
select avg(Capacity),max(Capacity) from stadium
select T1.Capacity,T1.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID group by T2.Stadium_ID order by count(*) desc limit 1
select T1.Capacity,T1.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID group by T2.Stadium_ID order by count(*) desc limit 1
select count(*) from concert where Year = '2014' and Year < '2014'
select count(*) from concert where Year = '2014' and Year >= '2014'
select count(*),Name from stadium group by Name
select count(*),Stadium_ID from concert group by Stadium_ID
select T1.Name,T2.concert_Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID where T4.Song_release_year >= '2014' group by T1.Name order by count(*) desc limit 1
select T1.Capacity,T1.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID where T4.Song_release_year > '2013' group by T2.concert_Name order by count(*) desc limit 1
select Year from concert group by Year order by count(*) desc limit 1
select Year from concert group by Year order by count(*) desc limit 1
select Name from stadium where Stadium_ID not in (select Stadium_ID from concert)
select Name from stadium where Stadium_ID not in (select Stadium_ID from concert)
select Country from singer where Age > '40' intersect select Country from singer where Age < '40'
select T1.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where T2.Year = '2014' except select Name from stadium
select Name from stadium where Capacity = '2014' except select Name from stadium
select count(*),Theme from concert group by Theme
select Theme,concert_Name,count(*) from concert
select count(*),Name from singer group by Song_Name
select count(*),Name from singer group by Name
select T1.Name from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID where T3.Year = '2014'
select T1.Name from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID where T3.Year = '2014'
select Name,Country from singer where Song_Name like '%Hey%'
select Country,Name from singer where Song_Name like '%Hey%'
select T1.Location,T1.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID where T4.Song_release_year = '2014' intersect select T1.Location,T1.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where T2.Year = '2014'
select Location,Name from stadium where Capacity = '2015' intersect select Location,Name from stadium where Capacity = '2015'
select count(*) from stadium where Capacity = (select max(Capacity) from stadium)
select count(*) from stadium where Capacity = (select max(Capacity) from stadium)
select count(*) from Pets where weight > '10'
select count(*) from Pets where weight > '10'
select weight from Pets order by pet_age asc limit 1
select T1.Sex from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID order by T3.pet_age asc limit 1
select PetType,max(weight) from Pets group by PetType
select PetType,max(weight) from Pets group by PetType
select count(*) from Pets where pet_age > '20'
select count(*) from Pets where pet_age > '20'
SELECT A FROM B
SELECT A FROM B
select count(PetType) from Pets
select count(PetType) from Pets
SELECT A FROM B
select T1.Fname from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.pet_age < (select min(pet_age) from Pets where PetType = 'cat')
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select PetType,pet_age from Pets where PetType = 'cat'
select PetID from Pets where PetType = 'cat' except select StuID from Student
SELECT A FROM B
select Age,Fname from Student where StuID not in (select StuID from Has_Pet)
select T1.Fname from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.pet_age > (select min(pet_age) from Pets where PetType = 'dog')
select PetType,weight from Pets order by pet_age asc limit 1
select T3.PetType,T3.weight from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Age = (select max(weight) from Pets)
select T3.weight,T1.StuID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Age > '1'
select T2.weight,T1.StuID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.pet_age > '1'
select T3.PetType,avg(T1.Age),max(T1.Age) from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID group by T3.PetType
select T3.PetType,avg(T1.Age),max(T1.Age) from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID group by T3.PetType
select PetType,avg(weight) from Pets group by PetType
select avg(weight),PetType from Pets group by PetType
SELECT A FROM B
select Age,Fname from Student
select T3.PetID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.LName = 'Schmidt'
select T3.PetID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.LName = 'Schmidt'
SELECT A FROM B
SELECT A FROM B
select Sex,Fname from Student group by Advisor having count(*) > '1'
select Fname,Sex from Student group by Fname having count(*) > '1'
select LName from Student where Age = '3'
select LName from Student where Age = '3'
select avg(Age) from Student where StuID not in (select PetID from Pets)
select avg(Age) from Student where StuID not in (select PetID from Pets)
select count(*) from continents
select count(*) from continents
select count(*),Continent from continents group by Continent
select T1.Continent,count(*),count(T2.Continent) from continents as T1 join countries as T2 on T1.ContId = T2.Continent group by T1.Continent
select count(*) from continents
select count(*) from continents
select count(*),T4.MPG,T1.FullName from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T1.Maker
select count(*),Model,ModelId from model_list group by Maker
select Model from model_list order by ModelId asc limit 1
select Model from model_list order by ModelId asc limit 1
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Weight < (select avg(Weight) from cars_data)
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Weight < (select avg(Weight) from cars_data)
select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = '1970'
select T3.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T1.Id like '1970'
select T1.Country,T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Year asc limit 1
select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Year asc limit 1
select T1.Model from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id where T2.Year > '1980'
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Year > '1980'
select count(*),Continent from continents group by Continent
select count(*),Continent from continents group by Continent
select CountryName from countries group by CountryId order by count(*) desc limit 1
select T1.CountryName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by T2.Country order by count(*) desc limit 1
select count(*),T4.MPG,T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T1.Maker
select count(*),T2.Model,T1.FullName from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model group by T3.Model
select avg(T2.Accelerate) from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id where T1.MakeId in (select Id from car_makers)
select T3.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T1.FullName = 'Volkswagen'
select count(*) from continents
SELECT A FROM B
select count(*) from continents
SELECT A FROM B
select MPG from cars_data order by Cylinders asc limit 1
select MPG from cars_data where Cylinders = '4'
select min(Weight) from cars_data where Cylinders = '1974'
select T5.Weight from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where T2.Country = '8' order by T1.Continent asc limit 1
select T1.Model,T2.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model
select T1.Model,T2.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model
select T1.Continent,T2.CountryName from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country group by T3.Country having count(*) >= '1'
select T1.CountryName,T1.CountryId from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by T2.Id having count(*) >= '1'
select count(*) from cars_data where Horsepower > '150'
select count(*) from cars_data where Horsepower > '150'
select avg(Weight),avg(Year) from cars_data group by Year
select avg(Weight),avg(Year) from cars_data group by Year
select Country from car_makers group by Country having count(*) >= '3'
select CountryName from countries group by CountryName having count(*) >= '3'
select max(T3.Horsepower),max(T3.MPG) from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id order by T1.Maker asc limit 1
select T3.Horsepower,T1.Maker from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id group by T3.Horsepower
select Model from car_names group by Model order by count(*) desc limit 1
select T1.Model from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id order by T2.Horsepower desc limit 1
select avg(T3.Horsepower) from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T1.Maker = '1980'
select avg(Horsepower) from cars_data where Year < '1980'
select avg(T2.MPG) from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id order by T1.Model asc limit 1
select MPG from cars_data
select max(Accelerate),max(Horsepower) from cars_data group by Horsepower
select max(Accelerate),max(Horsepower) from cars_data group by Horsepower
select Model from model_list group by Model order by count(*) desc limit 1
select Model from model_list group by Model order by count(*) desc limit 1
select count(*) from countries group by CountryId having count(*) > '4'
select count(*) from countries group by CountryId having count(*) > '4'
select count(*) from cars_data where Year = '1980'
select count(*),count(MPG) from cars_data where Cylinders = '1980' group by MPG
select count(*) from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country where T2.FullName = 'American Motor Company' and T1.CountryName = 'germany'
select count(*) from car_makers where FullName = 'American Motor Company'
select T1.Id,T2.ModelId,T3.MakeId from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model group by T2.ModelId having count(*) > '3'
select T2.ModelId,T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker group by T2.ModelId having count(*) > '3'
select T2.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.FullName = 'General Motors' and T4.Weight > '3500'
SELECT A FROM B
select Year from cars_data where Cylinders < '4000'
select Year from cars_data where Cylinders > '4000'
select Horsepower from cars_data order by Accelerate desc limit 1
select Horsepower from cars_data order by Accelerate desc limit 1
select count(*),MPG from cars_data order by Accelerate asc limit 1
select T1.Model,T2.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id order by T3.Accelerate asc limit 1
select count(*) from cars_data where Cylinders > (select max(Cylinders) from cars_data)
select count(*) from cars_data where Accelerate > (select max(Accelerate) from cars_data)
select count(*) from car_makers group by Country having count(*) > '2'
select count(*) from car_makers group by Country having count(*) > '2'
select count(*) from continents group by * having count(*) >= '6'
select count(*) from continents group by ContId having count(*) >= '6'
select T1.Model from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id order by T2.Horsepower desc limit 1
select Maker from model_list group by Maker order by count(*) desc limit 1
select T1.FullName,T4.MPG from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Horsepower > '130' group by T1.FullName order by count(*) asc  having count(*) >= '3'
select T1.CountryName,T2.FullName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where T5.Cylinders < '4'
select T4.MPG from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.Country = '8'
select T4.MPG from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.Country = '8'
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model where T2.Model = 'ford' except select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model where T2.Model = 'ford'
select Model from model_list where Maker = '3500' except select Model from model_list where Maker = '3500'
select CountryName from countries except select CountryName from countries
SELECT A FROM B
select Maker,Country from car_makers group by Maker having count(*) >= '3'
select T1.Id,T3.MakeId from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model group by T1.Id having count(*) >= '3'
select CountryId,CountryName from countries group by CountryId having count(*) > '3' union select T1.CountryId,T1.CountryName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country where T2.Country = '3'
select CountryName,CountryId from countries group by CountryId having count(*) >= '3' union select CountryName,CountryId from countries group by CountryId having count(*) > '3'
select T1.Country from airlines as T1 join airports as T2 where T2.AirportName = 'Phillips AAF ' and T1.Airline = 'United Airlines'
select T2.Country from airlines as T1 join airports as T2 where T1.Abbreviation = 'JetBlue'
select Abbreviation from airlines where Abbreviation = 'JetBlue'
select T2.CountryAbbrev from airlines as T1 join airports as T2 where T1.Abbreviation = 'JetBlue'
select T1.Airline,T2.AirportName from airlines as T1 join airports as T2 where T1.Abbreviation = 'USAir'
SELECT A FROM B
select City,AirportCode from airports where City = ' Alexander City AL  '
select AirportName,AirportCode from airports where City = ' Alexander City AL  '
select count(*) from airlines
select count(*) from airlines
select count(*) from airlines
select count(*) from airlines
select count(*) from airlines
select count(*) from airlines
select T2.Airline from airlines as T1 join flights as T2 where T1.Airline = 'United Airlines'
select T2.Airline from airlines as T1 join flights as T2 where T1.Abbreviation = 'UAL'
select count(*) from airlines where Country = 'USA'
select count(*) from airlines where Country = 'USA'
SELECT A FROM B
select City,Country from airports
select AirportName from airports where Country = 'United States '
select AirportName from airports where AirportCode = 'AKO'
select AirportName from airports where Country = 'United States '
SELECT A FROM B
select count(*) from flights where DestAirport = ' APG'
select count(*) from flights where SourceAirport = ' APG'
select count(*) from flights where DestAirport = ' ATO'
select count(*) from flights where SourceAirport = ' ATO'
SELECT A FROM B
SELECT A FROM B
select count(*) from airports where City = 'Aberdeen '
SELECT A FROM B
select count(*) from flights where DestAirport = ' ASY' and SourceAirport = ' APG'
SELECT A FROM B
select count(*) from airlines where Airline = 'United Airlines'
select count(*) from airlines where Abbreviation = 'JetBlue'
select count(*) from flights where SourceAirport = ' APG' and DestAirport = ' ASY'
select count(*) from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T2.DestAirport = ' ASY' and T1.AirportName = 'Lenawee County '
select count(*) from flights where SourceAirport = ' APG' and DestAirport like '%%'
select count(*) from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 'Colorado Plains Regional Airport ' and T2.DestAirport in (select AirportCode from airports where Country = 'United States ')
select count(*) from flights where SourceAirport = ' APG' and DestAirport = ' ASY'
SELECT A FROM B
select City from airports group by City order by count(*) desc limit 1
select City from airports group by City order by count(*) desc limit 1
select City from airports group by City order by count(*) desc limit 1
select City from airports group by City order by count(*) desc limit 1
select AirportCode from airports group by AirportCode order by count(*) desc limit 1
select AirportName from airports group by AirportName order by count(*) desc limit 1
select AirportCode from airports group by AirportCode order by count(*) asc limit 1
select T1.AirportCode from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport order by T2.Airline asc limit 1
select Airline from airlines group by Airline order by count(*) desc limit 1
select Airline from airlines group by Airline order by count(*) desc limit 1
select Airline,Country,uid from airlines group by uid,Airline order by count(*) asc limit 1
select T1.Abbreviation,T1.Airline from airlines as T1 join airports as T2 group by T1.Airline,T2.AirportName order by count(*) asc limit 1
select T1.Airline from airlines as T1 join airports as T2 where T2.Country = 'United States ' and T2.AirportName like '%airport%'
select T1.Airline from airlines as T1 join airports as T2 where T2.AirportName = 'Colorado Plains Regional Airport '
select T1.Airline from airlines as T1 join airports as T2 where T2.AirportName = 'Colorado Plains Regional Airport '
select T1.Airline from airlines as T1 join airports as T2 where T2.AirportName = 'Colorado Plains Regional Airport '
select T1.Airline from airlines as T1 join airports as T2 where T2.Country = 'United States ' intersect select T1.Airline from airlines as T1 join airports as T2 where T2.Country = 'United States '
SELECT A FROM B
select T1.Airline from airlines as T1 join airports as T2 where T2.Country = 'United States ' except select T1.Airline from airlines as T1 join airports as T2 where T2.Country = 'United States '
SELECT A FROM B
select Airline from airlines group by Airline having count(*) >= '10'
select Airline from airlines group by Airline having count(*) >= '10'
select Airline from airlines group by Airline having count(*) < '200'
select Airline from airlines group by Airline having count(*) < '200'
select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 'Phillips AAF '
SELECT A FROM B
select FlightNo from flights where SourceAirport = ' APG'
select FlightNo from flights where SourceAirport = ' APG'
select FlightNo from flights where DestAirport = ' APG'
select FlightNo from flights where DestAirport = ' APG'
SELECT A FROM B
SELECT A FROM B
select FlightNo from flights where DestAirport = ' ASY'
SELECT A FROM B
select count(*) from airports where City = ' Alexander City AL  ' and City > ' Alexander City AL  '
select count(*) from airports where City = 'Adak Island ' and City > 'Aberdeen '
select AirportName from airports where Country not in (select CountryAbbrev from airports)
select AirportName from airports except select AirportName from airports
select count(*) from employee
select count(*) from employee
select Name from employee order by Age asc 
select Name from employee order by Age asc 
select count(*),City from employee group by City
select count(*),City from employee group by City
select City from employee where Age > '30'
select City from employee where Age > '30'
select Location,count(*) from shop group by Location
select count(*),Location from shop group by Location
select Manager_name,District from shop group by Shop_ID
select T1.Manager_name,T1.District from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID group by T2.Shop_ID order by count(*) desc limit 1
select max(Number_products),min(Number_products) from shop
select max(Number_products),min(Number_products) from shop
select Location,District,Name from shop order by Number_products desc 
select T3.District,T1.Name,T3.Location from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID join evaluation as T4 on T1.Employee_ID = T4.Employee_ID order by T4.Year_awarded desc 
select Name from shop where Number_products > (select avg(Number_products) from shop)
select Name from shop where Number_products = (select avg(Number_products) from shop)
select Name from employee group by Employee_ID order by count(*) desc limit 1
select T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID group by T2.Employee_ID order by count(*) desc limit 1
select T1.Name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID order by T2.Is_full_time desc limit 1
select T1.Name from employee as T1 join evaluation as T2 on T1.Employee_ID = T2.Employee_ID order by T2.Bonus desc limit 1
SELECT A FROM B
select T1.Name from employee as T1 join evaluation as T2 on T1.Employee_ID = T2.Employee_ID where T2.Employee_ID not in (select Employee_ID from hiring)
select T1.Name from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID group by T2.Shop_ID order by count(*) desc limit 1
select T1.Name from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID group by T2.Shop_ID order by count(*) desc limit 1
select Name from shop where Shop_ID not in (select Shop_ID from hiring)
SELECT A FROM B
select T1.Name,count(*) from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID group by T2.Shop_ID
select T1.Name,T1.Manager_name from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID group by T2.Shop_ID
select sum(Bonus) from evaluation
select sum(Bonus) from evaluation
select * from employee
select * from employee
select District from shop where Number_products > '10000' intersect select District from shop where Number_products < '10000'
select District from shop where Number_products > '10000' intersect select District from shop where Number_products < '10000'
select count(Location) from shop
select count(Location) from shop
select count(*) from Ref_Template_Types
select count(*) from Ref_Template_Types
select T1.Document_Name,T1.Document_Description,T2.Paragraph_Text from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID
select T1.Document_ID,T2.Document_ID,T2.Paragraph_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID
select T1.Template_ID,T2.Template_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID join Paragraphs as T3 on T2.Document_ID = T3.Document_ID where T3.Paragraph_Text like '%w%'
select Document_Name,Document_ID from Documents where Document_Description like '%w%'
select T2.Document_ID,T2.Paragraph_ID,T1.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T2.Paragraph_Text = 'Korea'
select T2.Paragraph_ID,T2.Document_ID,T1.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_Name = 'Robbin CV'
select count(Paragraph_Text) from Paragraphs
select count(Template_Type_Code) from Templates
select count(*) from Templates where Template_Type_Code = 'PPT'
select count(*) from Templates where Template_Type_Code = 'PPT'
select Paragraph_Text,count(*) from Paragraphs group by Paragraph_Text
select count(*),Template_ID from Templates group by Template_ID
select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T2.Template_ID order by count(*) desc limit 1
select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T2.Template_ID order by count(*) desc limit 1
select Template_ID from Templates group by Template_ID having count(*) > '1'
SELECT A FROM B
select Template_ID from Templates except select Template_ID from Templates
select Template_ID from Templates except select Template_ID from Templates
select count(*) from Ref_Template_Types
select count(*) from Ref_Template_Types
select T2.Template_Type_Code,T1.Template_Type_Code,T2.Template_ID from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code
select T2.Template_Type_Code,T1.Template_Type_Code,T3.Template_ID from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID
select Template_Type_Code from Templates
select Template_Type_Code from Templates
select Template_ID from Templates where Template_Type_Code = 'PP' and Template_Type_Code > 'PPT'
select Template_ID from Templates where Template_Type_Code = 'PP' and Template_Type_Code > 'PPT'
select count(*) from Templates where Template_Type_Code = 'CV'
select count(*) from Templates where Template_Type_Code = 'CV'
select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Version_Number > '5'
select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Version_Number > '5'
select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T2.Template_Type_Code
select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T2.Template_Type_Code
select Template_Type_Code from Templates group by Template_Type_Code order by count(*) desc limit 1
select Template_Type_Code from Templates group by Template_Type_Code order by count(*) desc limit 1
select Template_Type_Code from Templates group by Template_Type_Code having count(*) > '3'
select Template_Type_Code from Templates group by Template_Type_Code having count(*) < '3'
select T2.Template_Type_Code,T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T2.Template_Type_Code
select T2.Template_Type_Code,T1.Template_Type_Code,min(T2.Version_Number) from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T2.Template_Type_Code
select T1.Template_Type_Code from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T2.Document_Name = 'Data base'
select T1.Template_Type_Code from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T2.Document_Name = 'Data base'
select T2.Document_Name from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T1.Template_Type_Code = 'BK'
select T2.Document_Name from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T1.Template_Type_Code = 'BK'
select count(*),Template_Type_Code from Templates group by Template_Type_Code
select Template_Type_Code,count(*) from Templates group by Template_Type_Code
select Template_Type_Code from Templates group by Template_Type_Code order by count(*) desc limit 1
select Template_Type_Code from Templates group by Template_Type_Code order by count(*) desc limit 1
select Template_Type_Code from Templates except select Template_Type_Code from Templates
select Template_Type_Code from Templates
select Template_Type_Code,Template_Details from Templates
select T2.Template_Type_Code,T1.Template_Type_Description from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code
select Template_Type_Description from Ref_Template_Types where Template_Type_Code = 'AD'
select T1.Template_Type_Description from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Template_Type_Code = 'AD'
select T2.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T1.Template_Type_Description = 'Book'
select T2.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T1.Template_Type_Description = 'Book'
select Template_Type_Description from Ref_Template_Types
select Document_Description from Documents
select T2.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T1.Template_Type_Description = 'Presentation'
select T1.Template_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T2.Document_Description = 'n'
select count(*) from Ref_Template_Types
select count(*) from Ref_Template_Types
select count(*) from Documents where Document_Name = 'Summer Show'
select count(*) from Documents where Document_Name = 'Summer Show'
select Paragraph_Text from Paragraphs where Paragraph_Text = 'Korea'
select T1.Template_Details from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T2.Document_Description like '%%'
select Paragraph_ID,Document_ID from Paragraphs where Paragraph_Text = 'Korea'
select Paragraph_ID,Document_ID from Paragraphs where Paragraph_Text = 'Korea'
select T2.Paragraph_Text from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_Name = 'Summer Show'
select T2.Paragraph_Text from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_Name = 'Customer reviews'
select T2.Document_ID,T1.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by T2.Document_ID
select count(*),Paragraph_ID from Paragraphs group by Paragraph_ID
select T1.Document_ID,T2.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by T1.Document_ID
select Paragraph_Text,Paragraph_ID from Paragraphs group by Paragraph_ID,Paragraph_Text
select Document_ID from Documents group by Document_ID having count(*) >= '2'
select Document_ID from Documents group by Document_ID having count(*) >= '2'
select Document_Name,Document_ID from Documents group by Document_ID order by count(*) desc limit 1
select Document_Name,Document_ID from Documents group by Document_ID order by count(*) desc limit 1
select T1.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by T2.Document_ID order by count(*) asc limit 1
select T1.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by T2.Document_ID order by count(*) asc limit 1
select Document_ID from Documents group by Document_ID having count(*) between '1' and '2'
select T1.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by T2.Document_ID having count(*) between '1' and '2'
select Paragraph_ID from Paragraphs where Paragraph_Text = 'Brazil'
select T1.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T2.Paragraph_Text like '%Brazil%'
select count(*) from course
select count(*) from course
select Name from teacher order by Age asc 
select Name from teacher order by Age asc 
select Hometown,Age from teacher
select Hometown,Age from teacher
select Name from teacher where Hometown != 'Little Lever Urban District'
select Name from teacher where Hometown != 'Little Lever Urban District'
select Name from teacher where Age = '32' and Age > '32'
select Name from teacher where Age = '32' and Age > '32'
select Hometown from teacher order by Age asc limit 1
SELECT A FROM B
select count(*),Hometown from teacher group by Hometown
select count(*),Hometown from teacher group by Hometown
select Hometown from teacher group by Hometown order by count(*) desc limit 1
select Hometown from teacher group by Hometown order by count(*) desc limit 1
select Hometown from teacher group by Hometown having count(*) >= '2'
select Hometown from teacher group by Hometown having count(*) >= '2'
select T1.Name,T2.Teacher_ID from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID
select Name,Age from teacher
select Name,Age from teacher order by Name asc 
select Name,Age from teacher order by Name asc 
select T3.Name from course as T1 join course_arrange as T2 on T1.Course_ID = T2.Course_ID join teacher as T3 on T2.Teacher_ID = T3.Teacher_ID where T1.Course = 'Math'
SELECT A FROM B
select count(*),T1.Name from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID group by T2.Teacher_ID
select T1.Name,count(*) from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID group by T2.Teacher_ID
select Name from teacher group by Teacher_ID having count(*) >= '2'
select Name from teacher group by Teacher_ID having count(*) >= '2'
select Name from teacher where Teacher_ID not in (select Teacher_ID from teacher)
select T1.Name from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID where T2.Teacher_ID not in (select Course_ID from course_arrange)
select count(*) from visitor where Age < '30'
select T1.Name from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID where T3.Level_of_membership > (select max(Level_of_membership) from visitor) order by T3.Level_of_membership desc limit 1
select avg(Age) from visitor where Level_of_membership > '4'
select T3.Level_of_membership,T1.Name from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID where T3.Age > (select min(Age) from visitor where Age = '4' order by Age desc limit 1) order by T3.Age desc limit 1
select T1.Museum_ID,T2.Museum_ID from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID group by T2.Museum_ID order by count(*) desc limit 1
select avg(Num_of_Staff) from museum where Open_Year < '2009'
select Num_of_Staff,Open_Year from museum where Name = 'Plaza Museum'
select Name from museum where Num_of_Staff > '2010'
SELECT A FROM B
select T3.Level_of_membership,T3.Name,T1.Name from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID order by T2.Total_spent desc limit 1
select T2.Museum_ID,T1.Museum_ID from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID group by T2.Museum_ID order by count(*) desc limit 1
select Name from museum where Museum_ID not in (select Museum_ID from visit)
SELECT A FROM B
select max(Level_of_membership),avg(Level_of_membership) from visitor
select sum(Level_of_membership) from visitor where Level_of_membership = '1'
select Name from museum where Open_Year > '2009' intersect select Name from museum where Open_Year < '2011'
select count(*) from museum where Open_Year > '2010'
select count(*) from museum where Open_Year > '2008'
select count(*) from players
select count(*) from players
select count(*) from players
select count(*) from players
select birth_date,first_name from players where country_code = 'USA'
select birth_date,first_name from players where last_name = 'Fusai'
select avg(loser_age),avg(winner_age) from matches
select loser_age,avg(winner_age) from matches
select avg(loser_rank) from matches
select avg(loser_rank) from matches
select min(loser_rank) from matches
select ranking from rankings
select count(country_code) from players
select count(hand) from players
select count(loser_name) from matches
select count(loser_name) from matches
select tourney_name from matches group by tourney_id having count(*) > '10'
select tourney_name from matches group by tourney_name having count(*) > '10'
select winner_name from matches where year = '2016' intersect select winner_name from matches where year = '2016'
select winner_name from matches where year = '2016' intersect select winner_name from matches where year = '2016'
select count(*) from matches where year = '2016' and year > '2016'
select count(*) from matches where year = '2016' and year > '2016'
select T1.first_name,T2.winner_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.tourney_name = 'WTA Championships' intersect select T1.first_name,T2.winner_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.tourney_name = 'Australian Open'
select T1.first_name,T2.winner_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.tourney_name = 'WTA Championships' intersect select T1.first_name,T2.winner_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.tourney_name = 'Australian Open'
select T1.first_name,T2.winner_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T1.first_name desc limit 1
select T2.winner_name,T1.first_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.winner_age desc limit 1
select last_name,first_name from players order by birth_date asc 
select first_name,last_name from players order by birth_date desc 
select last_name,first_name from players where hand = 'L' order by birth_date desc 
select first_name,last_name from players order by birth_date desc 
select T1.first_name,T2.winner_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id join rankings as T3 on T1.player_id = T3.player_id group by T3.player_id order by count(*) desc limit 1
select T1.first_name,T2.winner_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id group by T2.winner_id order by count(*) desc limit 1
select year from matches group by year order by count(*) desc limit 1
select year from matches group by year order by count(*) desc limit 1
select winner_name,loser_rank_points from matches group by winner_name order by count(*) desc limit 1
select T2.winner_name,T2.loser_name,T1.first_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id group by T2.winner_id order by count(*) desc limit 1
SELECT A FROM B
SELECT A FROM B
select loser_name,winner_name from matches order by minutes desc limit 1
select winner_name,loser_name from matches order by match_num asc limit 1
select avg(T2.ranking),T1.first_name from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T1.first_name
select T2.ranking,avg(T2.ranking_points),T1.first_name from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T2.ranking
select T1.first_name,sum(T2.ranking_points) from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T1.first_name
select T1.first_name,sum(T2.ranking_points) from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T1.first_name
select count(*),player_id from players group by country_code
select count(*),winner_name from matches group by winner_name
select country_code from players group by country_code order by count(*) desc limit 1
select country_code from players group by country_code order by count(*) desc limit 1
select country_code from players group by country_code having count(*) > '50'
select country_code from players group by country_code having count(*) > '50'
select T2.ranking_date,T1.birth_date from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T2.ranking_date
select T2.ranking_date,T1.birth_date from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T2.ranking_date
select count(*),year from matches group by year
select year,count(*) from matches group by round
select winner_rank,winner_name from matches order by winner_id asc limit 1
select T3.ranking,sum(T3.tours) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id order by T1.winner_age asc limit 1
SELECT A FROM B
SELECT A FROM B
select T1.birth_date,T1.first_name,T2.winner_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id join rankings as T3 on T1.player_id = T3.player_id order by T3.ranking_points desc limit 1
select T1.birth_date,T1.first_name,T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.loser_rank_points desc limit 1
select count(*),player_id from players group by player_id
select count(*),sum(T1.hand) from players as T1 join matches as T2 on T1.player_id = T2.winner_id group by T2.loser_hand
SELECT A FROM B
select T2.name,T1.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle order by T2.name desc 
select date,result,name from battle
select min(injured),max(injured) from death
select T1.disposition_of_ship,avg(T2.injured) from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id group by T1.ship_type
select T1.result from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.tonnage = 't'
select result,name from battle where bulgarian_commander != 'Boril'
select T1.id,T1.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.tonnage > 't'
select T1.id,T1.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle group by T2.id having count(*) > '10'
select id,name from ship group by id order by count(*) desc limit 1
select T2.lost_in_battle from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T1.bulgarian_commander = 'Kaloyan' intersect select T2.lost_in_battle from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T1.bulgarian_commander = 'Boril'
select count(result) from battle
select count(*) from ship where tonnage != '225'
select date,name from battle where bulgarian_commander = 'Kaloyan' intersect select date,name from battle where bulgarian_commander = 'Kaloyan'
select T1.name,T2.name,T1.result from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.disposition_of_ship = 'Captured'
select T3.note from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id where T1.name like '%%'
select line_1,line_2 from Addresses
select state_province_county,line_1 from Addresses
select count(*) from Addresses
select count(*) from Addresses
select course_description from Courses where course_name = 'math'
select course_description from Courses where course_name = 'math'
select zip_postcode from Addresses where city = 'Port Chelsea'
SELECT A FROM B
select department_name,department_id from Departments group by department_id order by count(*) desc limit 1
select department_name,department_id from Departments group by department_id order by count(*) desc limit 1
select count(department_name) from Departments
select count(department_name) from Departments
select count(course_name) from Courses
select count(course_name) from Courses
SELECT A FROM B
SELECT A FROM B
select T2.section_description,T1.course_description from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id
select T1.course_description,T2.section_description from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id
select T1.course_name,T2.course_id from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id group by T1.course_id having count(*) >= '2'
select T1.course_name,T2.course_id from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id group by T1.course_id having count(*) < '2'
select * from Degree_Programs order by degree_summary_name desc 
select section_name from Sections order by section_name desc 
select T1.semester_name,T1.semester_id from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id group by T1.semester_id,T2.semester_id order by count(*) desc limit 1
select T1.semester_id,T1.semester_name,T2.student_enrolment_id from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id group by T1.semester_id,T3.student_id order by count(*) desc limit 1
select department_description from Departments where department_name like '%computer%'
SELECT A FROM B
select T8.section_name,T6.department_name,T9.semester_name from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Degree_Programs as T5 on T4.degree_program_id = T5.degree_program_id join Departments as T6 on T5.department_id = T6.department_id join Courses as T7 on T3.course_id = T7.course_id join Sections as T8 on T7.course_id = T8.course_id join Semesters as T9 on T4.semester_id = T9.semester_id group by T1.transcript_id
select T4.semester_name,T2.last_name,T2.first_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id join Semesters as T4 on T3.semester_id = T4.semester_id group by T1.state_province_county,T4.semester_id,T2.student_id
SELECT A FROM B
SELECT A FROM B
select T1.semester_name from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id group by T3.ssn order by count(*) desc limit 1
select degree_summary_name from Degree_Programs group by degree_summary_name order by count(*) desc limit 1
select T1.semester_id,T2.semester_id from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id group by T3.student_id,T1.semester_id order by count(*) desc limit 1
select T5.semester_id,T1.transcript_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Semesters as T5 on T4.semester_id = T5.semester_id group by T5.semester_id order by count(*) desc limit 1
select T3.student_id,T1.semester_id,T2.student_id,T2.semester_id from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id group by T3.student_id order by count(*) desc limit 1
select T2.student_id,T2.student_enrolment_id,T1.semester_name from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id group by T2.student_id order by count(*) desc limit 1
select semester_name from Semesters except select semester_name from Semesters
SELECT A FROM B
select course_name from Courses
select course_name from Courses
select course_name from Courses group by course_name order by count(*) desc limit 1
select course_name from Courses group by course_name order by count(*) desc limit 1
SELECT A FROM B
SELECT A FROM B
select T6.transcript_id,T5.transcript_id from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id join Student_Enrolment_Courses as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Transcript_Contents as T5 on T4.student_course_id = T5.student_course_id join Transcripts as T6 on T5.transcript_id = T6.transcript_id group by T6.transcript_id having count(T1.line_2) >= '2'
select T1.transcript_date,T2.transcript_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id group by T2.transcript_id having count(*) >= '2'
select cell_mobile_number from Students where last_name = 'Weimann' and first_name = 'Timmothy'
SELECT A FROM B
select T1.semester_name,T3.first_name,T3.last_name from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id order by T3.first_name asc limit 1
select T1.semester_name,T3.first_name,T3.last_name from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id order by T3.date_first_registered asc limit 1
select T1.semester_name,T3.first_name,T3.middle_name from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id
select T2.first_name,T6.semester_name,T5.course_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id join Student_Enrolment_Courses as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Courses as T5 on T4.course_id = T5.course_id join Semesters as T6 on T3.semester_id = T6.semester_id order by T1.state_province_county asc limit 1
SELECT A FROM B
select first_name from Students where ssn in (select student_id from Student_Enrolment group by student_id order by count(*) desc limit 1) group by ssn
select address_id,zip_postcode from Addresses group by address_id order by count(*) desc limit 1
select T7.section_id,T7.course_id,T1.line_2 from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id join Student_Enrolment_Courses as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Transcript_Contents as T5 on T4.student_course_id = T5.student_course_id join Courses as T6 on T4.course_id = T6.course_id join Sections as T7 on T6.course_id = T7.course_id group by T5.transcript_id order by count(*) desc limit 1
select avg(ssn) from Students
select avg(transcript_date) from Transcripts
select T1.transcript_date,T4.other_details from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id
select T1.transcript_date,T5.date_first_registered from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Students as T5 on T4.student_id = T5.student_id
select count(*) from Addresses
select count(*) from Addresses
select transcript_date from Transcripts
SELECT A FROM B
SELECT A FROM B
select max(T2.semester_id),max(T1.student_enrolment_id) from Student_Enrolment_Courses as T1 join Student_Enrolment as T2 on T1.student_enrolment_id = T2.student_enrolment_id group by T2.semester_id order by count(*) desc limit 1
select transcript_date,transcript_id from Transcripts group by transcript_id order by count(*) asc limit 1
select transcript_id,transcript_date from Transcripts group by transcript_id order by count(*) asc limit 1
SELECT A FROM B
SELECT A FROM B
select count(email_address) from Students
select email_address from Students
select T2.other_details from Students as T1 join Student_Enrolment as T2 on T1.student_id = T2.student_id order by T1.other_student_details desc 
SELECT A FROM B
select section_id from Sections
select T1.course_description from Courses as T1 join Sections as T2 on T1.course_id = T2.course_id where T2.section_name = 'h'
select T2.first_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T1.country = 'Haiti'
SELECT A FROM B
select Title from Cartoon order by Title asc 
select Title from Cartoon order by Title asc 
select Title from Cartoon where Directed_by = 'Ben Jones' and Written_by = 'Michael Jelenic'
SELECT A FROM B
select count(*) from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Written_by = 'Joseph Kuhr' and T1.series_name = 'Sky Radio'
SELECT A FROM B
select T3.Title,T3.Channel from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel order by T1.Air_Date asc 
select T1.series_name,T2.Directed_by from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel order by T2.Original_air_date asc 
select T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 'Ben Jones' and T2.Directed_by > 'Ben Jones' and T1.series_name = 'Sky Radio'
SELECT A FROM B
select count(*),Country from TV_Channel group by Country order by count(*) desc limit 1
select count(*),Country from TV_Channel group by Country order by count(*) desc limit 1
SELECT A FROM B
SELECT A FROM B
select Content from TV_Channel where series_name = 'MTV Hits'
select Content from TV_Channel where series_name = 'Sky Radio'
select T3.id from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T1.Episode = 'A Love of a Lifetime'
select T2.id from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.series_name = 'MTV Hits'
select count(*) from TV_Channel where Language = 'English' and series_name = 'MTV Hits'
select count(*) from TV_Channel where Language = 'English' and series_name = 'MTV Hits'
select Production_code,id from Cartoon group by Production_code order by count(*) asc limit 1
select count(*),Language from TV_Channel group by Language order by count(*) asc limit 1
select count(*),Production_code from Cartoon group by id
select count(*),Production_code from Cartoon group by id
select T1.Episode from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Title = 'The Rise of the Blue Beetle!'
select T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Title = 'The Rise of the Blue Beetle!'
select T3.Title from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel join Cartoon as T3 on T1.id = T3.Channel where T1.series_name = 'MTV Hits' and T2.Episode = 'A Love of a Lifetime'
select T3.Title from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel join Cartoon as T3 on T1.id = T3.Channel where T1.series_name = 'MTV Hits' and T2.Episode = 'A Love of a Lifetime'
select T3.Title from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel order by T1.Rating asc,T3.Title asc 
select Episode from TV_series order by Rating desc 
select T1.id,T3.id from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel order by T3.Directed_by desc limit 1
select Rating,Channel from TV_series where Rating = '5.3'
select max(Share),min(Share) from TV_series
select max(Share),min(Share) from TV_series
select T2.Original_air_date from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.series_name = 'MTV Hits'
select T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.series_name = 'Sky Radio'
SELECT A FROM B
select T1.Weekly_Rank from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Title = 'Terror on Dinosaur Island!'
SELECT A FROM B
select T3.Title from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T1.Episode = 'A Love of a Lifetime'
select T3.Title from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel join Cartoon as T3 on T1.id = T3.Channel where T1.series_name = 'MTV Hits' and T2.Episode = 'A Love of a Lifetime'
select T2.Episode from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 'MTV Hits'
select Directed_by,count(*) from Cartoon group by Directed_by
select count(*),Directed_by from Cartoon group by Directed_by
select T3.Production_code,T3.Channel from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel order by T1.Episode desc limit 1
select T3.Channel,T1.Channel from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel order by T1.Episode desc limit 1
SELECT A FROM B
SELECT A FROM B
select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Written_by = 'Michael Jelenic'
select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Written_by = 'Todd Casey' except select Country from TV_Channel
select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Written_by = 'Michael Jelenic' except select Country from TV_Channel
select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Written_by = 'Todd Casey' except select Country from TV_Channel
select T1.Country,T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 'Ben Jones'
select T1.Country,T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 'Ben Jones'
select Country,Hight_definition_TV from TV_Channel where Language != 'English'
select Country,Pixel_aspect_ratio_PAR from TV_Channel where Language != 'English'
select Channel from TV_series group by Channel having count(*) > '2'
select id from TV_Channel group by id having count(*) > '2'
select T1.Channel from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Directed_by = 'Ben Jones' except select Channel from TV_series
SELECT A FROM B
select T1.Package_Option from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 'Ben Jones'
SELECT A FROM B
select count(*) from poker_player
select count(*) from poker_player
select Earnings from poker_player order by Money_Rank desc 
select Earnings from poker_player order by Earnings desc 
select Final_Table_Made,Best_Finish from poker_player
select Final_Table_Made from poker_player
select avg(Earnings) from poker_player
select avg(Earnings) from poker_player
select Money_Rank from poker_player order by Earnings desc limit 1
select Money_Rank from poker_player order by Earnings desc limit 1
select Final_Table_Made from poker_player where Earnings < '200000' and Money_Rank > '200000'
select max(Final_Table_Made) from poker_player where Earnings < '200000' and Money_Rank > '200000'
select Name from people
select Name from people
select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID where T1.Earnings > '300000'
select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID where T1.Earnings > '300000'
select Money_Rank from poker_player order by Final_Table_Made asc 
select Money_Rank from poker_player order by Final_Table_Made desc 
select T2.Birth_Date from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings asc limit 1
select T2.Birth_Date from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings asc limit 1
select Money_Rank from poker_player order by Poker_Player_ID desc limit 1
select T1.Money_Rank from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T2.Height desc limit 1
select avg(T1.Earnings) from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID where T2.Height > '200'
select avg(Earnings) from poker_player where Money_Rank > '200'
select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings desc 
select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings desc 
select count(*),Nationality from people group by Nationality
select count(*),Nationality from people group by Nationality
select Nationality from people group by Nationality order by count(*) desc limit 1
select Nationality from people group by Nationality order by count(*) desc limit 1
select Nationality from people group by Nationality having count(*) >= '2'
select Nationality from people group by Nationality having count(*) >= '2'
select Name,Birth_Date from people order by Name asc 
select Birth_Date,Name from people order by Name asc 
select Name from people where Nationality != 'Russia'
select Name from people where Nationality != 'Russia'
select Name from people where People_ID not in (select People_ID from poker_player)
select Name from people except select Name from people
select count(Nationality) from people
select count(Nationality) from people
select count(*) from AREA_CODE_STATE
select contestant_name,contestant_number from CONTESTANTS order by contestant_number desc 
select phone_number,vote_id,contestant_number from VOTES
select max(area_code),min(area_code) from AREA_CODE_STATE
select created from VOTES where state = 'CA'
select contestant_name from CONTESTANTS where contestant_name != 'Jessie Alloway'
select T1.state,T2.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state
select T1.contestant_name,T2.contestant_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number group by T2.contestant_number having count(*) >= '2'
select T1.contestant_name,T1.contestant_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number order by T2.contestant_number asc limit 1
select count(*) from VOTES where state = 'NY' and state > 'CA'
SELECT A FROM B
select T1.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state order by T2.contestant_number desc limit 1
select T2.state,T2.phone_number,T1.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state join CONTESTANTS as T3 on T2.contestant_number = T3.contestant_number where T3.contestant_name = 'Tabatha Gehling'
select T1.area_code from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state join CONTESTANTS as T3 on T2.contestant_number = T3.contestant_number where T3.contestant_name = 'Tabatha Gehling' intersect select T1.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state join CONTESTANTS as T3 on T2.contestant_number = T3.contestant_number where T3.contestant_name = 'Kelly Clauss'
select contestant_name from CONTESTANTS where contestant_name like '%Al%'
select Name from country where Capital > '1950'
select T2.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.Population > '1950'
select count(*) from country where GovernmentForm = 'Republic'
select count(*) from city
select sum(SurfaceArea) from country where Region = 'Nordic Countries'
SELECT A FROM B
SELECT A FROM B
select Name from country where Name = 'Suriname'
select Name from city where Name = 'Belize City'
SELECT A FROM B
select Language from countrylanguage group by Language order by count(*) desc limit 1
SELECT A FROM B
SELECT A FROM B
select T2.LifeExpectancy,T1.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code
select Region,Population from country
select Region,Population from country
select avg(LifeExpectancy) from country where Region = 'Nordic Countries'
SELECT A FROM B
select Name from country order by LifeExpectancy asc limit 1
select Name from country order by LifeExpectancy asc limit 1
select sum(Population),max(Population) from city
select count(*),T2.Code2 from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.Population = (select max(Population) from city)
select avg(LifeExpectancy) from country
SELECT A FROM B
select sum(T1.SurfaceArea) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.CountryCode = (select max(CountryCode) from countrylanguage) and T2.CountryCode in ()
SELECT A FROM B
select count(*) from city where District = 'Dashhowuz'
select sum(T2.Population) from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.District = 'Gelderland'
select avg(T2.Population),avg(T1.Population) from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.Name = 'Bruxelles [Brussel]'
select sum(T2.Population),sum(T1.Population) from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.Name = 'Bruxelles [Brussel]'
select count(Language) from countrylanguage
select count(Language) from countrylanguage
SELECT A FROM B
select count(GovernmentForm) from country where Region = 'Central Africa'
SELECT A FROM B
select count(*) from country where Name = 'Germany'
SELECT A FROM B
select count(T1.name) from sqlite_sequence as T1 join country as T2 where T2.Name = 'Germany'
select Name from country group by Name order by count(*) desc limit 1
select Name from country group by Name order by count(*) desc limit 1
select Continent from country group by Continent order by count(*) desc limit 1
select Continent from country group by Continent order by count(*) desc limit 1
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select T1.Name from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 'Vietnamese' intersect select T1.Name from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 'English'
select count(seq) from sqlite_sequence
select count(*) from city
SELECT A FROM B
SELECT A FROM B
select T1.Continent from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 'English' union select T1.Continent from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 'Dutch'
select T1.Name from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 'English' union select T1.Name from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 'Dutch'
select Language from countrylanguage group by Language order by count(*) desc limit 1
select Language from countrylanguage group by Language order by count(*) desc limit 1
select HeadOfState from country group by HeadOfState
SELECT A FROM B
SELECT A FROM B
select Name from city where Population = (select max(Population) from city) and Name = 'Belize City'
select T2.LifeExpectancy,T2.Population,T1.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.Population desc limit 1
select LifeExpectancy,Population,Name from country order by Capital desc limit 1
select avg(T1.LifeExpectancy) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language != 'English'
select T1.LifeExpectancy from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language != 'English'
SELECT A FROM B
SELECT A FROM B
select T2.IsOfficial from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.HeadOfState = 'Beatrix'
select LocalName from country where HeadOfState = 'Beatrix'
select count(HeadOfState) from country where Capital < '1930'
select LocalName from country
select Region from country where SurfaceArea > (select min(SurfaceArea) from country)
select Region from country where SurfaceArea > (select min(SurfaceArea) from country)
select Continent from country where Population < (select max(Population) from country)
select Region from country where Population < (select min(Population) from country)
select Continent from country where Population > (select min(Population) from country)
select Continent from country where Population > (select min(Population) from country)
select Region from country except select Region from country
select HeadOfState from country except select Region from country
SELECT A FROM B
select Region from country where GovernmentForm = 'People'sRepublic' except select Region from country where GovernmentForm = 'People'sRepublic'
select Code from country where GovernmentForm = 'Republic' except select Code from country
select T2.CountryCode,count(*) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.HeadOfState != 'George W. Bush'
select Name from city except select T1.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 'Nordic Countries'
select T1.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode where T3.Language = 'Vietnamese' except select Name from city
select count(Name) from city where Population = (select max(Population) from city)
select T1.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode where T3.Language = 'Vietnamese' and T1.Population = (select max(Population) from city)
select Capital,Region,HeadOfState from country order by Population asc limit 1
select HeadOfState,Capital,Name from country order by Population asc limit 1
select GNP,Population,Name from country order by Capital desc limit 1
select T2.Population,T1.Population,T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T2.Capital desc limit 1
select T1.Code2,T1.Continent from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode group by T2.Language having count(*) >= '3'
select T2.Name,T1.name from sqlite_sequence as T1 join country as T2 group by T2.Name having count(*) > '2'
select District,count(ID) from city group by ID
select count(District),count(ID) from city group by ID
select GovernmentForm,Name from country group by Name
select GovernmentForm,HeadOfState from country group by GovernmentForm having count(*) > '72'
select T2.LifeExpectancy,avg(T1.Population) from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.LifeExpectancy
select Continent,sum(LifeExpectancy) from country group by Continent having count(*) >= '72'
select Region,SurfaceArea from country order by SurfaceArea desc limit 1
select Region,SurfaceArea from country order by Population desc limit 1
select Name from country order by Population desc limit 1
select Name from country order by Population desc limit 1
select Name from country order by Population asc limit 1
select Name from country order by Population asc limit 1
SELECT A FROM B
select count(*) from country where Region = 'Nordic Countries'
select Name from country where Population > '80000'
SELECT A FROM B
SELECT A FROM B
select sum(Population),HeadOfState from country where SurfaceArea > '3000'
select Name from city where Population between '160000' and '900000'
select Name from city where Population between '160000' and '900000'
select Language from countrylanguage group by Language order by count(*) desc limit 1
select Language from countrylanguage group by Language order by count(*) desc limit 1
select HeadOfState,Name from country order by Population desc limit 1
select Continent,Code2 from country group by Continent
select sum(T1.GNP) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode order by T2.Percentage desc limit 1
select count(*) from countrylanguage where Language = 'Spanish'
select T1.Name from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode order by T2.Percentage desc limit 1
select T1.Code from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 'Spanish'
select count(*) from conductor
select count(*) from conductor
select Name from conductor order by Age asc 
select Name from conductor order by Age desc 
select Name from conductor where Nationality != 'USA'
select Name from conductor where Nationality != 'USA'
select Record_Company from orchestra order by Year_of_Founded desc 
select Record_Company from orchestra order by Year_of_Founded desc 
select avg(Attendance) from show
select avg(Attendance) from show
select min(Attendance),max(Attendance) from show where Result != 'T'
select min(Attendance),max(Attendance) from show where Result != 'T'
select count(*) from conductor
select count(Nationality) from conductor
select Name from conductor order by Year_of_Work desc 
select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID order by T2.Year_of_Founded desc 
select Name from conductor order by Year_of_Work desc limit 1
select Name from conductor group by Conductor_ID order by count(*) desc limit 1
select Name,Nationality from conductor
SELECT A FROM B
select Name from conductor group by Conductor_ID having count(*) > '1'
select Name from conductor group by Conductor_ID having count(*) > '1'
select Name from conductor group by Conductor_ID order by count(*) desc limit 1
select Name from conductor group by Conductor_ID order by count(*) desc limit 1
select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Year_of_Founded > '2008'
select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Year_of_Founded > '2008'
select Record_Company,count(*) from orchestra group by Record_Company
select Record_Company,count(*) from orchestra group by Record_Company
select T2.Major_Record_Format from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID order by T1.Year_of_Work desc 
select Major_Record_Format from orchestra group by Major_Record_Format order by count(*) asc limit 1
select Record_Company from orchestra group by Record_Company order by count(*) desc limit 1
select Record_Company from orchestra group by Record_Company order by count(*) desc limit 1
select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Orchestra_ID not in (select Conductor_ID from orchestra)
select * from orchestra where Orchestra_ID not in (select Orchestra_ID from performance)
select Record_Company from orchestra where Year_of_Founded > '2003' intersect select Record_Company from orchestra where Year_of_Founded < '2003'
select Record_Company from orchestra where Year_of_Founded > '2003' intersect select Record_Company from orchestra where Year_of_Founded < '2003'
select count(*) from orchestra where Major_Record_Format = 'CD' and Major_Record_Format > 'CD'
select count(*) from orchestra where Major_Record_Format = 'CD'
select Record_Company from orchestra group by Record_Company having count(*) > '1'
SELECT A FROM B
select count(*) from Highschooler
select count(*) from Highschooler order by grade desc limit 1
select grade,name from Highschooler
select grade,name from Highschooler
select grade from Highschooler
select grade from Highschooler
SELECT A FROM B
select grade from Highschooler where name = 'Kyle'
select name from Highschooler where grade = '10'
select name from Highschooler where grade = '10'
select grade from Highschooler where name = 'Kyle'
SELECT A FROM B
select count(*) from Highschooler where grade = '10' and grade > '10'
select count(*) from Highschooler where grade = '10' and grade > '10'
select count(*),grade from Highschooler group by grade
select count(*),grade from Highschooler group by grade
select grade from Highschooler group by grade order by count(*) desc limit 1
select grade from Highschooler group by grade order by count(*) desc limit 1
select grade from Highschooler group by grade having count(*) >= '4'
select grade from Highschooler group by grade having count(*) >= '4'
select student_id,count(*) from Friend group by student_id
select count(*),student_id from Friend group by student_id
select count(*),name from Highschooler group by name
select count(*),name from Highschooler group by name
select name from Highschooler group by name order by count(*) desc limit 1
select T1.name from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id where T2.student_id in (select student_id from Friend group by student_id order by count(*) desc limit 1) order by count(*) desc limit 1
select name from Highschooler group by name having count(*) >= '3'
select name from Highschooler group by name having count(*) >= '3'
SELECT A FROM B
SELECT A FROM B
select count(*) from Highschooler where name = 'Kyle'
select count(name) from Highschooler where name = 'Kyle'
select student_id from Friend except select ID from Highschooler
select ID from Highschooler except select ID from Highschooler
select grade from Highschooler where ID not in (select friend_id from Friend)
select name from Highschooler except select student_id from Friend
select liked_id from Likes except select liked_id from Likes
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select count(*),student_id from Friend group by student_id
select student_id,count(*) from Friend group by student_id
select name,count(*) from Highschooler
SELECT A FROM B
select name from Highschooler group by name order by count(*) desc limit 1
select name from Highschooler group by name order by count(*) desc limit 1
select name from Highschooler group by name having count(*) >= '2'
select name from Highschooler group by name having count(*) >= '2'
select name from Highschooler where grade > '5' and ID = '5'
select name from Highschooler group by name having count(*) >= '5'
select count(*) from Highschooler where name = 'Kyle'
select count(*) from Highschooler where name = 'Kyle'
select avg(grade) from Highschooler
select avg(grade) from Highschooler
select min(grade) from Highschooler where ID not in (select ID from Highschooler)
select min(grade) from Highschooler where ID not in (select student_id from Friend)
SELECT A FROM B
select state from Owners intersect select state from Owners
select avg(age) from Dogs where dog_id not in (select dog_id from Dogs)
SELECT A FROM B
select T4.home_phone,T4.first_name,T4.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.state having count(*) >= '2'
select T3.home_phone,T2.home_phone,T3.first_name from Charges as T1 join Owners as T2 join Professionals as T3 group by T1.charge_id having count(*) > '2'
select T2.name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code group by T1.breed_name having count(*) > '1000'
SELECT A FROM B
select first_name from Professionals except select first_name from Professionals
select first_name from Professionals except select first_name from Professionals
SELECT A FROM B
SELECT A FROM B
select T1.first_name,T1.last_name,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T2.owner_id order by count(*) desc limit 1
select T1.last_name,T1.first_name,T4.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T1.owner_id order by count(*) desc limit 1
select T4.first_name,T1.first_name,T4.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.professional_id having count(*) >= '2'
select T4.first_name,T1.first_name,T4.professional_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.professional_id having count(*) >= '2'
select breed_name from Breeds group by breed_name order by count(*) desc limit 1
select breed_name from Breeds group by breed_name order by count(*) desc limit 1
select T1.last_name,T4.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T2.dog_id,T1.last_name order by count(*) desc limit 1
select T1.last_name,T4.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T2.dog_id order by count(*) desc limit 1
select T2.treatment_type_description from Charges as T1 join Treatment_Types as T2 order by T1.charge_amount asc limit 1
select T2.treatment_type_description from Charges as T1 join Treatment_Types as T2 order by T1.charge_amount asc limit 1
select T2.dog_id,T2.owner_id from Charges as T1 join Dogs as T2 group by T2.owner_id order by sum(T1.charge_amount) desc limit 1
select T1.zip_code,T2.owner_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id group by T2.owner_id
select T4.home_phone,T1.home_phone,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.professional_id having count(*) >= '2'
select T4.professional_id,T1.owner_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.professional_id having count(*) >= '2'
select T2.first_name,T2.last_name from Charges as T1 join Owners as T2 where T1.charge_amount < (select avg(charge_amount) from Charges)
select T3.first_name,T2.first_name from Charges as T1 join Owners as T2 join Professionals as T3 where T1.charge_amount < (select avg(charge_amount) from Charges)
select T4.first_name,T1.first_name,T4.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
select T1.first_name,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
select T2.treatment_type_description,T1.charge_type from Charges as T1 join Treatment_Types as T2
select T2.treatment_type_description,T1.charge_type from Charges as T1 join Treatment_Types as T2
select T1.charge_type,T2.last_name,T2.first_name from Charges as T1 join Owners as T2 group by T1.charge_id
select T2.name,T1.last_name,T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id group by T2.owner_id,T1.owner_id,T2.dog_id
select T1.first_name,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id order by T1.first_name asc limit 1
SELECT A FROM B
select T1.breed_name,T2.name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code
SELECT A FROM B
select T3.first_name,T5.first_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id join Treatments as T4 on T2.dog_id = T4.dog_id join Professionals as T5 on T4.professional_id = T5.professional_id where T1.breed_name = 'Bulldog'
SELECT A FROM B
SELECT A FROM B
SELECT A FROM B
select T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id order by T2.age asc limit 1
select T1.breed_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code order by T2.date_departed asc limit 1
select T4.email_address from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T1.state = 'Wisconsin' and T1.state > 'Wisconsin'
select email_address from Professionals where state = 'Hawaii' and state > 'Hawaii'
select date_departed,date_of_birth from Dogs
select date_adopted,date_of_birth from Dogs
SELECT A FROM B
select count(*) from Dogs where dog_id in (select dog_id from Dogs)
select count(*) from Treatments where professional_id not in (select treatment_id from Treatments)
select count(*) from Professionals where professional_id not in (select dog_id from Dogs)
select city from Professionals where city like '%West%'
select state from Professionals where city like '%West%'
select T1.first_name,T4.first_name,T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T1.state like '%North%'
select T1.first_name,T1.last_name,T4.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T2.name like '%%'
select count(*) from Dogs where age < (select avg(gender) from Dogs)
select count(*) from Dogs order by age asc limit 1
select * from Charges order by charge_amount desc limit 1
select charge_amount from Charges order by charge_amount desc limit 1
select count(*) from Dogs where dog_id not in (select dog_id from Dogs)
select count(*) from Dogs where dog_id not in (select dog_id from Dogs)
select count(*) from Dogs where owner_id not in (select owner_id from Dogs)
select count(*) from Dogs where owner_id not in (select dog_id from Dogs)
select count(*) from Professionals where professional_id not in (select treatment_id from Treatments)
select count(*) from Professionals where professional_id not in (select dog_id from Dogs)
select T1.weight,T1.age,T1.gender from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id join Professionals as T3 on T2.professional_id = T3.professional_id where T3.home_phone = '+71(6)2898266914'
SELECT A FROM B
select avg(age) from Dogs
select age from Dogs
select age from Dogs order by age asc limit 1
select age from Dogs order by age asc limit 1
select T1.charge_type,T2.treatment_type_code from Charges as T1 join Treatment_Types as T2
select charge_type,sum(charge_amount) from Charges group by charge_type
select charge_type from Charges group by charge_type order by count(*) desc limit 1
select charge_amount from Charges order by charge_type desc limit 1
select T4.home_phone,T1.home_phone,T4.email_address from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
select T4.home_phone,T1.home_phone,T4.email_address from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
select T1.charge_type,T2.age from Charges as T1 join Dogs as T2
select T1.charge_type,T2.size_description from Charges as T1 join Sizes as T2 group by T2.size_description
select first_name from Professionals
select T1.treatment_type_description,T4.first_name,T5.first_name from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id join Professionals as T5 on T2.professional_id = T5.professional_id
select count(*) from singer
select count(*) from singer
select Name from singer order by Net_Worth_Millions asc 
select Name from singer order by Net_Worth_Millions asc 
select Citizenship,Birth_Year from singer
select Citizenship,Birth_Year from singer
select Name from singer where Citizenship != 'France'
SELECT A FROM B
select Name from singer where Birth_Year = '1949' and Birth_Year > '1949'
select Name from singer where Birth_Year > '1949' and Birth_Year = '1949'
select Name from singer order by Net_Worth_Millions desc limit 1
select T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T2.Singer_ID order by count(*) desc limit 1
select Citizenship,count(*) from singer group by Citizenship
select count(*),Citizenship from singer group by Citizenship
select Citizenship from singer group by Citizenship order by count(*) desc limit 1
select Citizenship from singer group by Citizenship order by count(*) desc limit 1
select Citizenship,Name from singer group by Citizenship
select Citizenship,* from singer group by Citizenship
select T1.Name,T2.Title from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID
select T2.Title,T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID
select T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID where T2.Sales > '300000'
select T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID where T2.Sales > '300000'
select T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T2.Singer_ID having count(*) > '1'
select T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T2.Singer_ID having count(*) > '1'
SELECT A FROM B
select T1.Name,sum(T2.Sales),sum(T1.Net_Worth_Millions) from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T1.Name
select Name from singer where Singer_ID not in (select Singer_ID from song)
select T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID where T2.Title not in (select Singer_ID from song)
select Citizenship from singer where Birth_Year > '1955' intersect select Citizenship from singer where Birth_Year < '1955'
select Citizenship from singer where Birth_Year > '1955' intersect select Citizenship from singer where Birth_Year < '1955'
select count(*) from Ref_Feature_Types
SELECT A FROM B
select property_type_description from Ref_Property_Types
select property_name from Properties where agreed_selling_price > '1'
